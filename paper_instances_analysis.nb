(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[         0,          0]
NotebookDataLength[   1519192,      29551]
NotebookOptionsPosition[   1502859,      29295]
NotebookOutlinePosition[   1503257,      29311]
CellTagsIndexPosition[   1503214,      29308]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell["\<\
Run this quit code if you need to clear all the loaded instances are restart.\
\
\>", "Text",
 CellChangeTimes->{{3.963409794730719*^9, 
  3.963409817081355*^9}},ExpressionUUID->"c84175e3-8697-45be-a05e-\
0b2551ab94f9"],

Cell[BoxData["Quit"], "Input",
 CellChangeTimes->{{3.94183090384214*^9, 3.9418309308436527`*^9}, {
  3.94206890250233*^9, 3.942068902851266*^9}, {3.942445028501553*^9, 
  3.942445033291148*^9}, {3.947945692588449*^9, 3.947945709649754*^9}, {
  3.962292409367441*^9, 3.962292414870471*^9}},
 CellLabel->"In[17]:=",ExpressionUUID->"0cfcf018-d6d3-450b-8256-429bac7845e5"],

Cell[CellGroupData[{

Cell["Quantum Resource Estimation - Paper Figure Code", "Title",
 CellChangeTimes->{{3.94183090384214*^9, 3.9418309308436527`*^9}, {
   3.94206890250233*^9, 3.942068902851266*^9}, {3.942445028501553*^9, 
   3.942445033291148*^9}, {3.947945692588449*^9, 3.947945709649754*^9}, 
   3.962455163826543*^9, {3.962621188788673*^9, 3.9626211895903788`*^9}, {
   3.962621812539122*^9, 3.962621815244011*^9}, {3.963325852822069*^9, 
   3.963325857348722*^9}},ExpressionUUID->"aa6c59f3-cfea-4eb7-959b-\
5a6087391d46"],

Cell[TextData[StyleBox["Note: for your best experience, it is advised to run \
all the code in sequence.",
 FontWeight->"Bold",
 FontVariations->{"Underline"->True}]], "Text",
 CellChangeTimes->{{3.963409734029787*^9, 3.96340975777463*^9}, {
  3.963409827981688*^9, 
  3.963409831207064*^9}},ExpressionUUID->"e2dc89cb-5b29-4a58-90c1-\
fe8ea488afd7"],

Cell[CellGroupData[{

Cell["Part 1: Instantiate Parallelization", "Section",
 CellChangeTimes->{{3.963222199247232*^9, 3.963222208234926*^9}, {
  3.963222305431594*^9, 3.96322230571982*^9}, {3.963323143934104*^9, 
  3.963323152574497*^9}},ExpressionUUID->"494050fd-c11f-4813-ad7b-\
bd025037b68c"],

Cell["First let's set the computation to be parallel:", "Text",
 CellChangeTimes->{{3.9634009543924713`*^9, 3.963400980052395*^9}, {
  3.963401227541155*^9, 3.9634012354894733`*^9}, {3.9634033346747217`*^9, 
  3.9634033520885*^9}},ExpressionUUID->"354aadbe-3e90-4c9f-8690-f707ad7369eb"],

Cell[CellGroupData[{

Cell[BoxData[{"$ProcessorCount", "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SetSystemOptions", "[", 
   RowBox[{"\"\<ParallelOptions\>\"", "->", 
    RowBox[{"\"\<ParallelThreadNumber\>\"", "->", "8"}]}], "]"}], " ", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "number", " ", "of", " ", "parallelization", " ", "is", " ", "set", " ", 
     "to", " ", "8", " ", "for", " ", "a", " ", "8"}], "-", 
    RowBox[{"core", " ", "Mac", " ", "laptop"}]}], "*)"}]}]}], "Input",
 CellChangeTimes->{{3.94183090384214*^9, 3.941830908531786*^9}, {
   3.9418320001599073`*^9, 3.941832039430359*^9}, {3.941832069894064*^9, 
   3.941832370507461*^9}, {3.941832448566992*^9, 3.941832518297606*^9}, {
   3.941832598066615*^9, 3.941832609190956*^9}, {3.9418329003952227`*^9, 
   3.941833106869705*^9}, {3.941833312599117*^9, 3.941833572262937*^9}, {
   3.941834317619454*^9, 3.941834442287195*^9}, {3.9418345682838297`*^9, 
   3.941834793149523*^9}, 3.941834824267489*^9, {3.941834963424642*^9, 
   3.941835052092721*^9}, {3.941835130984996*^9, 3.941835190296267*^9}, {
   3.941835398036831*^9, 3.9418354082169313`*^9}, {3.941835445357032*^9, 
   3.941835454316018*^9}, {3.94183620834324*^9, 3.94183634084705*^9}, {
   3.941836392326764*^9, 3.941836649870613*^9}, {3.941836848814209*^9, 
   3.941836899800057*^9}, {3.9418369357870817`*^9, 3.9418370079161453`*^9}, {
   3.941837077983398*^9, 3.941837842700117*^9}, {3.941837890742481*^9, 
   3.941837971452826*^9}, {3.941838025041588*^9, 3.941838087478722*^9}, {
   3.94183821286034*^9, 3.941838265117387*^9}, {3.941838307348993*^9, 
   3.941838311356003*^9}, {3.941838382417969*^9, 3.941838541903119*^9}, {
   3.941838583931566*^9, 3.941838642937594*^9}, {3.941838735054629*^9, 
   3.941838824885374*^9}, {3.941838998588078*^9, 3.941839301215601*^9}, {
   3.941839370743955*^9, 3.941839467277639*^9}, 3.941839675137039*^9, {
   3.941840135123491*^9, 3.941840142109002*^9}, {3.941840292754842*^9, 
   3.941840315956585*^9}, {3.941841514934894*^9, 3.941841828839342*^9}, 
   3.941843031697473*^9, {3.941843121023994*^9, 3.941843130351728*^9}, {
   3.941843494083972*^9, 3.941843523542893*^9}, 3.941920314623051*^9, {
   3.941983770072072*^9, 3.941983771796763*^9}, {3.941984388585935*^9, 
   3.941984467682558*^9}, {3.941984518920076*^9, 3.941984730438521*^9}, {
   3.941984777725717*^9, 3.941984782185873*^9}, {3.941984857633428*^9, 
   3.941984870602268*^9}, {3.942003671114278*^9, 3.942003675440073*^9}, {
   3.9420037187224092`*^9, 3.942003770034246*^9}, {3.942003879116918*^9, 
   3.942003899242828*^9}, {3.942004581955801*^9, 3.942004596327595*^9}, {
   3.942004629533554*^9, 3.942004657648262*^9}, {3.942068912664915*^9, 
   3.942069014489991*^9}, 3.942090601791024*^9, {3.942092822533115*^9, 
   3.942092849188987*^9}, {3.942239601870842*^9, 3.942239603526266*^9}, {
   3.942240458303773*^9, 3.942240479878347*^9}, {3.942240514398854*^9, 
   3.9422405706740713`*^9}, {3.9465087297693977`*^9, 3.946508733892831*^9}, {
   3.9465087742279053`*^9, 3.946508879558024*^9}, {3.946508956896077*^9, 
   3.946508964938693*^9}, {3.946509053276327*^9, 3.9465090583936033`*^9}, {
   3.946509138854012*^9, 3.94650913953848*^9}, {3.946509601883264*^9, 
   3.946509652124593*^9}, {3.946509754767344*^9, 3.946509798740378*^9}, {
   3.946509866057091*^9, 3.946509912402069*^9}, {3.946510119519422*^9, 
   3.946510249125781*^9}, {3.946510282075189*^9, 3.946510304185863*^9}, {
   3.946513201174169*^9, 3.946513242581253*^9}, 3.946554390779426*^9, {
   3.962282912231479*^9, 3.9622829132419353`*^9}, {3.962283097181448*^9, 
   3.962283170215342*^9}, {3.962283220496455*^9, 3.962283253413685*^9}, {
   3.962283303045734*^9, 3.962283353285395*^9}, {3.962283459784465*^9, 
   3.962283520067554*^9}, {3.962283868880381*^9, 3.962283869549451*^9}, {
   3.9622843275568743`*^9, 3.962284388702544*^9}, {3.962285379930793*^9, 
   3.96228540930905*^9}, {3.962291105076028*^9, 3.962291116256378*^9}, {
   3.962291164187515*^9, 3.962291169826939*^9}, {3.962306198827351*^9, 
   3.962306221422591*^9}, {3.96230625293752*^9, 3.962306262135504*^9}, {
   3.962306310263989*^9, 3.962306315414189*^9}, {3.962306347214817*^9, 
   3.962306394031054*^9}, {3.9623634696444798`*^9, 3.962363472248129*^9}, {
   3.962363994432762*^9, 3.962363994796949*^9}, {3.962364400998274*^9, 
   3.962364450776517*^9}, {3.962369802384921*^9, 3.962369803081522*^9}, {
   3.962370702252219*^9, 3.962370703212323*^9}, {3.962535548031473*^9, 
   3.962535555382372*^9}, 3.962644881231144*^9, {3.963222192065689*^9, 
   3.963222250189301*^9}, {3.963222295999381*^9, 3.963222296499598*^9}, {
   3.963391909723677*^9, 3.963391918976416*^9}, {3.9633919519214587`*^9, 
   3.963392056556107*^9}, {3.963400947157493*^9, 3.963400957329071*^9}, {
   3.96340123680857*^9, 3.963401239714971*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"4cddb8a4-2af0-43d8-a42f-6d572b2a56aa"],

Cell[BoxData["8"], "Output",
 CellChangeTimes->{3.962621308995101*^9, 3.962621352904698*^9, 
  3.962621816998205*^9, 3.962636648658387*^9, 3.962637223070568*^9, 
  3.962644053703434*^9, 3.962645031021258*^9, 3.962646676069456*^9, 
  3.962800274852378*^9, 3.962804344460122*^9, 3.96280440855156*^9, 
  3.962989063093597*^9, 3.96298928629242*^9, 3.963158565698518*^9, 
  3.963158819166429*^9, 3.963220396386484*^9, 3.963222226220602*^9, 
  3.963222299619956*^9, 3.963325225508653*^9, 3.963325434952346*^9, 
  3.963409401092718*^9},
 CellLabel->"Out[1]=",ExpressionUUID->"fa9ba44e-c846-4c74-b254-985eb48765dd"],

Cell[BoxData[
 RowBox[{"\<\"ParallelOptions\"\>", "\[Rule]", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"\<\"AbortPause\"\>", "\[Rule]", "2.`"}], ",", 
    RowBox[{"\<\"BusyWait\"\>", "\[Rule]", "0.01`"}], ",", 
    RowBox[{"\<\"MathLinkTimeout\"\>", "\[Rule]", "15.`"}], ",", 
    RowBox[{"\<\"ParallelThreadNumber\"\>", "\[Rule]", "8"}], ",", 
    RowBox[{"\<\"RecoveryMode\"\>", "\[Rule]", "\<\"ReQueue\"\>"}], ",", 
    RowBox[{"\<\"RelaunchFailedKernels\"\>", "\[Rule]", "False"}], ",", 
    RowBox[{"\<\"VectorParallelLengthThresholds\"\>", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"32768", ",", "8192", ",", "8192", ",", "8192"}], "}"}]}]}], 
   "}"}]}]], "Output",
 CellChangeTimes->{3.962621308995101*^9, 3.962621352904698*^9, 
  3.962621816998205*^9, 3.962636648658387*^9, 3.962637223070568*^9, 
  3.962644053703434*^9, 3.962645031021258*^9, 3.962646676069456*^9, 
  3.962800274852378*^9, 3.962804344460122*^9, 3.96280440855156*^9, 
  3.962989063093597*^9, 3.96298928629242*^9, 3.963158565698518*^9, 
  3.963158819166429*^9, 3.963220396386484*^9, 3.963222226220602*^9, 
  3.963222299619956*^9, 3.963325225508653*^9, 3.963325434952346*^9, 
  3.963409401093296*^9},
 CellLabel->"Out[2]=",ExpressionUUID->"e153c4a1-616d-45e2-85e6-7dd5f1f44d86"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Part 2: Load Packages", "Section",
 CellChangeTimes->{{3.963222257208951*^9, 3.963222270612817*^9}, {
  3.963323154251401*^9, 
  3.963323155517684*^9}},ExpressionUUID->"bacd983b-5de7-4693-9d94-\
3d2ee525b38a"],

Cell["\<\
This parent notebook is dependent on several functions hosted in the other \
files . Let' s include them here:\
\>", "Text",
 CellChangeTimes->{
  3.963401260936371*^9, {3.963401295517234*^9, 3.963401299850349*^9}, 
   3.963401417459597*^9},ExpressionUUID->"2fa77000-e16f-4d6d-b4c3-\
38ffe806fd6d"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"AppendTo", "[", 
   RowBox[{"$Path", ",", " ", 
    RowBox[{"NotebookDirectory", "[", "]"}]}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Needs", "[", "\"\<BasisGeneration`\>\"", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Needs", "[", "\"\<CostAnalysis`\>\"", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Needs", "[", "\"\<SimulationCell`\>\"", "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.96322228936347*^9, 3.9632222893675346`*^9}, {
  3.963392060004264*^9, 3.963392131936213*^9}, {3.96340126483385*^9, 
  3.963401266808224*^9}, {3.963401337984024*^9, 3.9634013561976366`*^9}, {
  3.963401402522181*^9, 3.963401406108878*^9}},
 CellLabel->"In[3]:=",ExpressionUUID->"8ed260e7-1dfa-4a31-96d0-0a127187124d"],

Cell["Let\[CloseCurlyQuote]s also print out the available pseudo ions here:", \
"Text",
 CellChangeTimes->{{3.9634013700006332`*^9, 
  3.963401410183935*^9}},ExpressionUUID->"8277d6d8-7f40-4461-947a-\
92bbad2bb150"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Print", "[", 
   RowBox[{
   "\"\<Available pseudoions:\>\"", ",", " ", "HGHData`allElementsNames"}], 
   "]"}], " "}]], "Input",
 CellLabel->"In[7]:=",ExpressionUUID->"e08f7acd-8346-455d-945f-f6b7a059ad72"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Available pseudoions:\"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{"\<\"C4\"\>", ",", "\<\"N5\"\>", ",", "\<\"O6\"\>", 
     ",", "\<\"Al3\"\>", ",", "\<\"Si4\"\>", ",", "\<\"Fe8\"\>", 
     ",", "\<\"Fe16\"\>", ",", "\<\"Ni10\"\>", ",", "\<\"Ni18\"\>", 
     ",", "\<\"Cu1\"\>", ",", "\<\"Cu11\"\>", ",", "\<\"W6\"\>", 
     ",", "\<\"W14\"\>", ",", "\<\"Ir9\"\>", ",", "\<\"Ir17\"\>", 
     ",", "\<\"Pt10\"\>", ",", "\<\"Pt18\"\>", ",", "\<\"H1\"\>", 
     ",", "\<\"B3\"\>", ",", "\<\"F7\"\>", ",", "\<\"Pd10\"\>", 
     ",", "\<\"Pd18\"\>"}], "}"}]}],
  SequenceForm[
  "Available pseudoions:", {
   "C4", "N5", "O6", "Al3", "Si4", "Fe8", "Fe16", "Ni10", "Ni18", "Cu1", 
    "Cu11", "W6", "W14", "Ir9", "Ir17", "Pt10", "Pt18", "H1", "B3", "F7", 
    "Pd10", "Pd18"}],
  Editable->False]], "Print",
 CellChangeTimes->{3.96340945939955*^9},
 CellLabel->
  "During evaluation of \
In[7]:=",ExpressionUUID->"3c969bb1-3f4c-4ec3-85da-afcb887f824b"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Part 3: Chemical Instances in the Paper", "Section",
 CellChangeTimes->{{3.941843965963293*^9, 3.941844033073009*^9}, {
   3.94184503933513*^9, 3.941845046725583*^9}, {3.941852126598343*^9, 
   3.941852130230476*^9}, {3.941852531771765*^9, 3.941852719973049*^9}, 
   3.941920241467492*^9, {3.941920283396006*^9, 3.941920290828083*^9}, {
   3.941929117664391*^9, 3.941929181420399*^9}, {3.941929246661599*^9, 
   3.941929412587369*^9}, {3.941929443622017*^9, 3.941929449255897*^9}, {
   3.941929480590418*^9, 3.941929609569521*^9}, {3.9419296873052588`*^9, 
   3.9419298377410297`*^9}, {3.941929905546217*^9, 3.941930007725139*^9}, {
   3.94193004502508*^9, 3.9419300913698263`*^9}, {3.941930279545068*^9, 
   3.941930324756673*^9}, {3.941930446868963*^9, 3.941930474127012*^9}, {
   3.941930505090968*^9, 3.941930532138097*^9}, {3.941930579398131*^9, 
   3.941930624086772*^9}, {3.941930684976594*^9, 3.941930717915716*^9}, {
   3.941930769393794*^9, 3.94193085318737*^9}, {3.941982495004705*^9, 
   3.941982498709605*^9}, {3.941982530794768*^9, 3.941982605787156*^9}, {
   3.941982638679109*^9, 3.941982652691504*^9}, {3.94198291530508*^9, 
   3.941982997299233*^9}, {3.941983031904807*^9, 3.9419830749911203`*^9}, {
   3.941983111153159*^9, 3.941983175702889*^9}, {3.941983233992086*^9, 
   3.941983288450124*^9}, {3.941983341337284*^9, 3.941983375082601*^9}, {
   3.941983427202791*^9, 3.941983625588504*^9}, {3.9419840030716047`*^9, 
   3.941984042720871*^9}, {3.941984081826817*^9, 3.9419841062733297`*^9}, {
   3.9419849225735073`*^9, 3.9419849376398783`*^9}, {3.9419850104148703`*^9, 
   3.941985015581299*^9}, {3.942070739469278*^9, 3.942070739941218*^9}, {
   3.942265459386344*^9, 3.942265465934232*^9}, {3.946122047679484*^9, 
   3.946122054417774*^9}, {3.962479958702961*^9, 3.9624799613739033`*^9}, {
   3.962621185644043*^9, 3.962621186011259*^9}, {3.96263605137754*^9, 
   3.962636053413204*^9}, {3.963323160275696*^9, 3.963323174364459*^9}, {
   3.963400558036467*^9, 
   3.9634006003245087`*^9}},ExpressionUUID->"2bda5763-690d-45e4-bde7-\
11183e305a64"],

Cell[TextData[StyleBox["Note: this  part  will  take  significant  amount  of \
 computing  time  (e . g ., ~1  hour  on  a  Mac  with  M3  chip)",
 FontWeight->"Bold",
 FontVariations->{"Underline"->True}]], "Text",
 CellChangeTimes->{{3.9634005885473623`*^9, 3.963400608808622*^9}, 
   3.9634007964164047`*^9, {3.963402145583437*^9, 
   3.9634021474769983`*^9}},ExpressionUUID->"8b5839aa-e55d-466b-8369-\
a42c17a498e5"],

Cell[TextData[{
 "In this part, we run cost estimations for 3 different chemical interaction \
instances:\na. NH3BF3(instance 1,Lewis acid-base interaction,1 size)\nb. DMTM \
small (instance 2,Direct Methane to Methanol,1 size)\nb. DMTM (instance \
3,Direct Methane to Methanol,4 sizes)\nc. WGS (instance 4,Water Gas Shift,2 \
sizes)",
 StyleBox["\n\n",
  FontWeight->"Bold",
  FontSlant->"Italic",
  FontVariations->{"Underline"->True}],
 "For all 3 chemical instances (with 7 total sub-instances), we do the \
following steps\n1. construct  the  basis  and  set  the  cell  sizes\n2. \
save basis in present current notebook directory and inspect basis\n3. run \
the QRE process\n4. display all the necessary numbers (rescaling factor, \
block encoding cost, qubit count, and total cost)\n\n",
 StyleBox["!!!Need to test this!!! NOTE: Switch last argument of \
constructBasis to False if just wanting to observe sim cell and basis data \
quickly @Karthik which one is this exactly?",
  FontWeight->"Bold",
  FontSlant->"Italic",
  FontVariations->{"Underline"->True}]
}], "Text",
 CellChangeTimes->{{3.946122056249242*^9, 3.94612205901908*^9}, {
   3.9461221675446*^9, 3.946122237927978*^9}, {3.9461223745665283`*^9, 
   3.94612256081662*^9}, {3.946124542921606*^9, 3.946124550073524*^9}, {
   3.946125969271934*^9, 3.946125995186101*^9}, 3.9461260258636*^9, {
   3.946126116624103*^9, 3.946126142297975*^9}, {3.946128690954178*^9, 
   3.946128764645544*^9}, {3.946166852196194*^9, 3.946167001273471*^9}, {
   3.946167036517096*^9, 3.946167086297594*^9}, {3.946490055591479*^9, 
   3.9464901287549057`*^9}, {3.946492902799545*^9, 3.946492926667141*^9}, {
   3.9464931480328207`*^9, 3.946493148492016*^9}, {3.94649320360962*^9, 
   3.946493328090327*^9}, 3.94649336892379*^9, {3.94649446982141*^9, 
   3.946494469878873*^9}, 3.946494576213092*^9, {3.946494995955134*^9, 
   3.946494996053494*^9}, {3.946495041072632*^9, 3.946495041173824*^9}, {
   3.9464951594898763`*^9, 3.946495181022932*^9}, {3.946497980355174*^9, 
   3.946497981240966*^9}, {3.94649815633422*^9, 3.946498163453021*^9}, {
   3.94649824824883*^9, 3.9464982663052588`*^9}, {3.946499433282394*^9, 
   3.946499564280864*^9}, {3.946501865983119*^9, 3.946501875250986*^9}, 
   3.946501992008497*^9, {3.946503639212558*^9, 3.946503639624648*^9}, {
   3.9465643107086763`*^9, 3.94656432284638*^9}, {3.946564529145935*^9, 
   3.946564559829351*^9}, 3.946564832060857*^9, {3.946565176755971*^9, 
   3.946565202241859*^9}, {3.946565313675543*^9, 3.946565370593363*^9}, {
   3.9467288407929296`*^9, 3.946728840877693*^9}, {3.947951264999652*^9, 
   3.947951333281031*^9}, {3.947952104631193*^9, 3.947952107180744*^9}, 
   3.962455679409322*^9, 3.9624791269311943`*^9, {3.962621668442971*^9, 
   3.962621688700692*^9}, {3.9626360608912888`*^9, 3.962636063010033*^9}, {
   3.9633998881666737`*^9, 3.963399968127685*^9}, {3.963400246222183*^9, 
   3.963400251918318*^9}, {3.9634002993366756`*^9, 3.963400320906694*^9}, {
   3.9634006985072827`*^9, 3.963400781147266*^9}, {3.963401437910616*^9, 
   3.963401481695034*^9}, 3.963401570004654*^9, {3.9634023220560007`*^9, 
   3.963402323073649*^9}, {3.9634023822683167`*^9, 3.963402395951114*^9}, {
   3.963402744961322*^9, 3.963402745291022*^9}, 3.963403328500781*^9, {
   3.963404878229433*^9, 3.963405034223315*^9}, {3.963405405564837*^9, 
   3.963405440695291*^9}, {3.963405830107153*^9, 3.963405851013952*^9}, {
   3.963409347443392*^9, 3.963409348824977*^9}, {3.9634094889185677`*^9, 
   3.963409497817864*^9}, {3.963409531520159*^9, 
   3.963409545466956*^9}},ExpressionUUID->"4514b281-5f01-4deb-b3a7-\
a3df5025da12"],

Cell[CellGroupData[{

Cell[TextData[{
 "Instance 1: ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["NH", "3"], TraditionalForm]],ExpressionUUID->
  "add49217-a57e-43d7-a4a6-2a5236c6179c"],
 Cell[BoxData[
  FormBox[
   SubscriptBox["BF", "3"], TraditionalForm]],ExpressionUUID->
  "8ff45f6b-424a-4c02-9b7c-445aa008e27c"]
}], "Subsection",
 CellChangeTimes->{{3.946122056249242*^9, 3.94612205901908*^9}, {
   3.9461221675446*^9, 3.946122237927978*^9}, {3.9461223745665283`*^9, 
   3.94612256081662*^9}, {3.946124542921606*^9, 3.946124550073524*^9}, {
   3.946125969271934*^9, 3.946125995186101*^9}, 3.9461260258636*^9, {
   3.946126116624103*^9, 3.946126142297975*^9}, {3.946128690954178*^9, 
   3.946128764645544*^9}, {3.946166852196194*^9, 3.946167001273471*^9}, {
   3.946167036517096*^9, 3.946167086297594*^9}, {3.946490055591479*^9, 
   3.9464901287549057`*^9}, {3.946492902799545*^9, 3.946492926667141*^9}, {
   3.9464931480328207`*^9, 3.946493148492016*^9}, {3.94649320360962*^9, 
   3.946493328090327*^9}, 3.94649336892379*^9, {3.94649446982141*^9, 
   3.946494469878873*^9}, 3.946494576213092*^9, {3.946494995955134*^9, 
   3.946494996053494*^9}, {3.946495041072632*^9, 3.946495041173824*^9}, {
   3.9464951594898763`*^9, 3.946495181022932*^9}, {3.946497980355174*^9, 
   3.946497981240966*^9}, {3.94649815633422*^9, 3.946498163453021*^9}, {
   3.94649824824883*^9, 3.9464982663052588`*^9}, {3.946499433282394*^9, 
   3.946499564280864*^9}, {3.946501865983119*^9, 3.946501875250986*^9}, 
   3.946501992008497*^9, {3.946503639212558*^9, 3.946503639624648*^9}, {
   3.9465643107086763`*^9, 3.94656432284638*^9}, {3.946564529145935*^9, 
   3.946564559829351*^9}, 3.946564832060857*^9, {3.946565176755971*^9, 
   3.946565202241859*^9}, {3.946565313675543*^9, 3.946565370593363*^9}, {
   3.9467288407929296`*^9, 3.946728840877693*^9}, {3.947951264999652*^9, 
   3.947951333281031*^9}, {3.947952104631193*^9, 3.947952112701625*^9}, {
   3.962621368637846*^9, 3.962621369590816*^9}, {3.962621491030655*^9, 
   3.962621499458574*^9}, {3.962730995271257*^9, 3.962731002495611*^9}, {
   3.963073487618052*^9, 3.963073488772533*^9}, {3.963405884973679*^9, 
   3.963405904485011*^9}},ExpressionUUID->"7d79ff6d-f572-45eb-8770-\
539a147f07a6"],

Cell["\<\
We  first  construct  the  basis  and  set  the  cell  sizes (~91 seconds \
runtime on M3 mac). We  will  have  G  basis  with  cutoff ~50 Ha  (gives  \
\[CapitalLambda]~10) . We  set ~450 Ha  for  the  ions, so  that  in  general \
 all  of  the  \[CapitalLambda]bar >= 30, which  will  be  2 - 4 x  the  \
electron  cutoff .\
\>", "Text",
 CellChangeTimes->{{3.963402734907144*^9, 3.963402742243284*^9}, {
   3.963402801732344*^9, 3.9634028106081533`*^9}, 3.9634050418564377`*^9, {
   3.963405322204255*^9, 
   3.96340532309208*^9}},ExpressionUUID->"cb9763df-a2b9-4549-946b-\
e9180ede214f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "Construct", " ", "Basis", " ", "and", " ", "Input", " ", "for", " ", 
     RowBox[{"Cell", ":", " ", 
      RowBox[{"10", "x10x15", " ", 
       RowBox[{
        SuperscriptBox["Angstrom", "3"], ".", " ", "Cutoff"}]}], ":", " ", 
      "50"}]}], ",", "450", ",", 
    RowBox[{"1", " ", "Ha"}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"Instance1Cell", "=", 
     RowBox[{"SimulationCell`aVecsRectCuboid", "[", 
      RowBox[{"SimulationCell`convertAngstromtoAUCellSpec", "[", 
       RowBox[{"{", 
        RowBox[{"10", ",", "10", ",", "15"}], "}"}], "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Instance1Basis", "=", 
     RowBox[{"EchoTiming", "@", 
      RowBox[{"BasisGeneration`constructBasis", "[", 
       RowBox[{"Instance1Cell", ",", 
        RowBox[{"{", 
         RowBox[{"50", ",", "450", ",", "1"}], "}"}], ",", "True", ",", 
        "True"}], "]"}]}]}], ";"}], " ", "\[IndentingNewLine]", 
   RowBox[{"Instance1Input", "=", 
    RowBox[{"CostAnalysis`constructInput", "[", 
     RowBox[{
      RowBox[{"<|", 
       RowBox[{
        RowBox[{"\"\<N5\>\"", "->", "1"}], ",", 
        RowBox[{"\"\<B3\>\"", "->", "1"}], " ", ",", 
        RowBox[{"\"\<F7\>\"", "->", "3"}], ",", 
        RowBox[{"\"\<H1\>\"", "->", "3"}]}], "|>"}], ",", "Instance1Basis"}], 
     "]"}]}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
    "Save", " ", "basis", " ", "in", " ", "present", " ", "current", " ", 
     "notebook", " ", "directory", " ", "and", " ", "inspect", " ", "basis"}],
     " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"EchoTiming", "@", 
     RowBox[{"DumpSave", "[", 
      RowBox[{
       RowBox[{"FileNameJoin", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"NotebookDirectory", "[", "]"}], ",", 
          "\"\<Instance1Basis.mx\>\""}], "}"}], "]"}], ",", 
       "Instance1Basis"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"BasisGeneration`viewBasisInfo", "[", "Instance1Basis", "]"}], 
   "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.946122056249242*^9, 3.94612205901908*^9}, {
   3.9461221675446*^9, 3.946122237927978*^9}, {3.9461223745665283`*^9, 
   3.94612256081662*^9}, {3.946124542921606*^9, 3.946124550073524*^9}, {
   3.946125969271934*^9, 3.946125995186101*^9}, 3.9461260258636*^9, {
   3.946126116624103*^9, 3.946126142297975*^9}, {3.946128690954178*^9, 
   3.946128764645544*^9}, {3.946166852196194*^9, 3.946167001273471*^9}, {
   3.946167036517096*^9, 3.946167086297594*^9}, {3.946490055591479*^9, 
   3.9464901287549057`*^9}, {3.946492902799545*^9, 3.946492926667141*^9}, {
   3.9464931480328207`*^9, 3.946493148492016*^9}, {3.94649320360962*^9, 
   3.946493328090327*^9}, 3.94649336892379*^9, {3.94649446982141*^9, 
   3.946494469878873*^9}, 3.946494576213092*^9, {3.946494995955134*^9, 
   3.946494996053494*^9}, {3.946495041072632*^9, 3.946495041173824*^9}, {
   3.9464951594898763`*^9, 3.946495181022932*^9}, {3.946497980355174*^9, 
   3.946497981240966*^9}, {3.94649815633422*^9, 3.946498163453021*^9}, {
   3.94649824824883*^9, 3.9464982663052588`*^9}, {3.946499433282394*^9, 
   3.946499564280864*^9}, {3.946501865983119*^9, 3.946501875250986*^9}, 
   3.946501992008497*^9, {3.946503639212558*^9, 3.946503639624648*^9}, {
   3.9465643107086763`*^9, 3.94656432284638*^9}, {3.946564529145935*^9, 
   3.946564559829351*^9}, 3.946564832060857*^9, {3.946565176755971*^9, 
   3.946565202241859*^9}, {3.946565313675543*^9, 3.946565370593363*^9}, {
   3.9467288407929296`*^9, 3.946728840877693*^9}, {3.947951264999652*^9, 
   3.947951333281031*^9}, 3.947952104631193*^9, {3.9626211958369913`*^9, 
   3.962621209861579*^9}, {3.962621386821911*^9, 3.9626214379074*^9}, {
   3.962621473145152*^9, 3.962621473566862*^9}, {3.962621507823801*^9, 
   3.962621518402524*^9}, {3.962621563952813*^9, 3.962621566087644*^9}, 
   3.9626216145155153`*^9, {3.96262170376933*^9, 3.962621722288916*^9}, {
   3.962621781544213*^9, 3.9626217830740843`*^9}, {3.962621858547805*^9, 
   3.9626218616730022`*^9}, {3.962644715550043*^9, 3.9626447157175283`*^9}, {
   3.962644954080004*^9, 3.962645018383766*^9}, 3.962645147250166*^9, {
   3.963070081597896*^9, 3.9630701002528677`*^9}, {3.963070146652548*^9, 
   3.9630701866845903`*^9}, {3.963323264260246*^9, 3.963323267027237*^9}},
 CellLabel->"In[8]:=",ExpressionUUID->"6388bd50-8c2d-486c-b9b8-cd05b8279e2d"],

Cell[BoxData["86.355807`"], "EchoTiming",
 CellChangeTimes->{
  3.963409550591659*^9},ExpressionUUID->"757c3f68-7aee-48b3-86b1-\
0797806c91eb"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"N5\"\>", "\[Rule]", "1"}], ",", 
     RowBox[{"\<\"B3\"\>", "\[Rule]", "1"}], ",", 
     RowBox[{"\<\"F7\"\>", "\[Rule]", "3"}], ",", 
     RowBox[{"\<\"H1\"\>", "\[Rule]", "3"}]}], "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"Kmax\"\>", "\[Rule]", "20.1834651738735`"}], ",", 
     RowBox[{"\<\"Qmax\"\>", "\[Rule]", "40.366930347747`"}], ",", 
     RowBox[{"\<\"Kbarmax\"\>", "\[Rule]", "82.21379608325073`"}], ",", 
     RowBox[{"\<\"Qbarmax\"\>", "\[Rule]", "164.42759216650146`"}], ",", 
     RowBox[{"\<\"Kbartruncmax\"\>", "\[Rule]", "2.8165214849475455`"}], ",", 
     
     RowBox[{"\<\"Qbartruncmax\"\>", "\[Rule]", "5.633042969895091`"}]}], 
    "\[RightAssociation]"}]}], "}"}]], "Output",
 CellChangeTimes->{3.962621909256522*^9, 3.962636741082223*^9, 
  3.962637322539517*^9, 3.962644145750532*^9, 3.962645121218775*^9, 
  3.9626457954062567`*^9, 3.962646767030963*^9, 3.9628003768484993`*^9, 
  3.9629891445645113`*^9, 3.962989385498006*^9, 3.963158595249755*^9, 
  3.963158841886522*^9, 3.963220496128613*^9, 3.963325329920428*^9, 
  3.963325531363042*^9, 3.963409550594274*^9},
 CellLabel->"Out[10]=",ExpressionUUID->"1f4f9983-acf0-4a00-bac4-caec5a8c89c2"],

Cell[CellGroupData[{

Cell[BoxData["0.382757`"], "EchoTiming",
 CellChangeTimes->{
  3.963409550977311*^9},ExpressionUUID->"4085df81-fceb-4489-95da-\
d6330a2aefce"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"nqubits\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"6", ",", "6", ",", "7"}], "}"}]}], ",", 
   RowBox[{"\<\"nqubits\[CapitalLambda]bar\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"8", ",", "8", ",", "9"}], "}"}]}], ",", 
   RowBox[{"\<\"pmax\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"31", ",", "31", ",", "63"}], "}"}]}], ",", 
   RowBox[{"\<\"pmax\[CapitalLambda]bar\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"127", ",", "127", ",", "255"}], "}"}]}], ",", 
   RowBox[{"\<\"pmax\[CapitalLambda]bartrunc\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"5", ",", "5", ",", "7"}], "}"}]}], ",", 
   RowBox[{"\<\"cutoff\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "10.30575367844271`", ",", "10.30575367844271`", ",", 
        "13.962634015954636`"}], "}"}], ",", "20.1834651738735`", ",", 
      "203.68613321248222`", ",", "53.10427944036772`"}], "}"}]}], ",", 
   RowBox[{"\<\"cutoff\[CapitalLambda]bar\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "42.22034571491045`", ",", "42.22034571491045`", ",", 
        "56.515423397911626`"}], "}"}], ",", "82.21379608325073`", ",", 
      "3379.554133209166`", ",", "891.2787961432787`"}], "}"}]}], ",", 
   RowBox[{"\<\"cutoff\[CapitalLambda]bartrunc\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "1.662218335232695`", ",", "1.662218335232695`", ",", 
        "1.5514037795505151`"}], "}"}], ",", "2.8165214849475455`", ",", 
      "3.9663966375855635`", ",", "1.2034268436018116`"}], "}"}]}], ",", 
   RowBox[{"\<\"Kmax\"\>", "\[Rule]", "20.1834651738735`"}], ",", 
   RowBox[{"\<\"Qmax\"\>", "\[Rule]", "40.366930347747`"}], ",", 
   RowBox[{"\<\"Kbarmax\"\>", "\[Rule]", "82.21379608325073`"}], ",", 
   RowBox[{"\<\"Qbarmax\"\>", "\[Rule]", "164.42759216650146`"}], ",", 
   RowBox[{"\<\"Kbartruncmax\"\>", "\[Rule]", "2.8165214849475455`"}], ",", 
   RowBox[{"\<\"Qbartruncmax\"\>", "\[Rule]", "5.633042969895091`"}], ",", 
   RowBox[{"\<\"maxCheck\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"True", ",", "True"}], "}"}]}], ",", 
   RowBox[{"\<\"aVecs\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"18.9`", ",", "0.`", ",", "0.`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.`", ",", "18.9`", ",", "0.`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.`", ",", "0.`", ",", "28.349999999999998`"}], "}"}]}], 
     "}"}]}], ",", 
   RowBox[{"\<\"bVecs\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0.332443667046539`", ",", "0.`", ",", "0.`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.`", ",", "0.332443667046539`", ",", "0.`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.`", ",", "0.`", ",", "0.2216291113643593`"}], "}"}]}], 
     "}"}]}], ",", 
   RowBox[{"\<\"basisSize\"\>", "\[Rule]", "504063"}], ",", 
   RowBox[{"\<\"basistruncSize\"\>", "\[Rule]", "1814"}]}], 
  "\[RightAssociation]"}]], "Print",
 CellChangeTimes->{3.9626219092584763`*^9, 3.962636741083847*^9, 
  3.962637322542111*^9, 3.962644145752665*^9, 3.962645124778021*^9, 
  3.962645796091734*^9, 3.962646767451767*^9, 3.962800377362383*^9, 
  3.962989144947638*^9, 3.9629893858931*^9, 3.963158595631496*^9, 
  3.963158842256583*^9, 3.9632204965089283`*^9, 3.963325330305877*^9, 
  3.96332553175486*^9, 3.963409550980122*^9},
 CellLabel->
  "During evaluation of \
In[8]:=",ExpressionUUID->"e0288bde-4c71-4d18-9e35-713c8c8a5d7b"]
}, Open  ]]
}, Open  ]],

Cell[TextData[{
 "We can see that for NH3BF3, we put in one N atom (with 5 valence \
electrons), one B atom (with 1 valence electron), three F atoms (with 7 \
valence electrons each), and three H atoms (with 1 valence electron each).\n\
Once the basis cutoff is set to the current value, for electron we will need \
6 qubits to host information for the x direction, 6 for the y direction, and \
7 for the z direction. For ions we will need 8 qubits to host information for \
the x direction, 8 for the y direction, and 9 for the z direction.\n",
 StyleBox["@Karthik maybe add a little more explanations for other values?",
  FontWeight->"Bold",
  FontSlant->"Italic",
  FontVariations->{"Underline"->True}],
 StyleBox["\n",
  FontWeight->"Bold",
  FontSlant->"Italic"]
}], "Text",
 CellChangeTimes->{{3.963401689292572*^9, 3.963401998851079*^9}, {
   3.963402115442116*^9, 3.963402117887917*^9}, 
   3.9634028504182158`*^9},ExpressionUUID->"86ff80c9-ad11-4898-9609-\
d661b1384aca"],

Cell["\<\
With the basis info all set up, we now begin to run the full quantum resource \
estimation computation (~86 seconds on M3 Mac)\
\>", "Text",
 CellChangeTimes->{{3.963402422319819*^9, 3.96340242906574*^9}, {
  3.963402770058979*^9, 3.963402838549*^9}, {3.963405470728259*^9, 
  3.9634054812931147`*^9}},ExpressionUUID->"7c81afd6-47c6-433b-91c9-\
f2001ccbb1d6"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Run", " ", "QRE"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"Instance1Result", "=", 
     RowBox[{"EchoTiming", "@", 
      RowBox[{"CostAnalysis`fullBlockEncodingCost", "[", 
       RowBox[{"Instance1Input", ",", "Instance1Basis", ",", "True"}], 
       "]"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"EchoTiming", "@", 
     RowBox[{"DumpSave", "[", 
      RowBox[{
       RowBox[{"FileNameJoin", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"NotebookDirectory", "[", "]"}], ",", 
          "\"\<Instance1Result.mx\>\""}], "}"}], "]"}], ",", 
       "Instance1Result"}], "]"}]}], ";"}], "\n"}]}]], "Input",
 CellChangeTimes->{{3.946122056249242*^9, 3.94612205901908*^9}, {
   3.9461221675446*^9, 3.946122237927978*^9}, {3.9461223745665283`*^9, 
   3.94612256081662*^9}, {3.946124542921606*^9, 3.946124550073524*^9}, {
   3.946125969271934*^9, 3.946125995186101*^9}, 3.9461260258636*^9, {
   3.946126116624103*^9, 3.946126142297975*^9}, {3.946128690954178*^9, 
   3.946128764645544*^9}, {3.946166852196194*^9, 3.946167001273471*^9}, {
   3.946167036517096*^9, 3.946167086297594*^9}, {3.946490055591479*^9, 
   3.9464901287549057`*^9}, {3.946492902799545*^9, 3.946492926667141*^9}, {
   3.9464931480328207`*^9, 3.946493148492016*^9}, {3.94649320360962*^9, 
   3.946493328090327*^9}, 3.94649336892379*^9, {3.94649446982141*^9, 
   3.946494469878873*^9}, 3.946494576213092*^9, {3.946494995955134*^9, 
   3.946494996053494*^9}, {3.946495041072632*^9, 3.946495041173824*^9}, {
   3.9464951594898763`*^9, 3.946495181022932*^9}, {3.946497980355174*^9, 
   3.946497981240966*^9}, {3.94649815633422*^9, 3.946498163453021*^9}, {
   3.94649824824883*^9, 3.9464982663052588`*^9}, {3.946499433282394*^9, 
   3.946499564280864*^9}, {3.946501865983119*^9, 3.946501875250986*^9}, 
   3.946501992008497*^9, {3.946503639212558*^9, 3.946503639624648*^9}, {
   3.9465643107086763`*^9, 3.94656432284638*^9}, {3.946564529145935*^9, 
   3.946564559829351*^9}, 3.946564832060857*^9, {3.946565176755971*^9, 
   3.946565202241859*^9}, {3.946565313675543*^9, 3.946565370593363*^9}, {
   3.9467288407929296`*^9, 3.946728840877693*^9}, {3.947951264999652*^9, 
   3.947951333281031*^9}, 3.947952104631193*^9, {3.9626211958369913`*^9, 
   3.962621209861579*^9}, {3.962621386821911*^9, 3.9626214379074*^9}, {
   3.962621473145152*^9, 3.962621473566862*^9}, {3.962621507823801*^9, 
   3.962621518402524*^9}, {3.962621563952813*^9, 3.962621566087644*^9}, {
   3.9626216145155153`*^9, 3.962621634894315*^9}, 3.962621780538593*^9, {
   3.96264411390906*^9, 3.962644117953454*^9}, {3.962644923698951*^9, 
   3.962644949273664*^9}, 3.962645150417054*^9, {3.963402853441147*^9, 
   3.96340285523687*^9}, {3.963405472828075*^9, 
   3.963405479800976*^9}},ExpressionUUID->"6c76d88b-981a-4819-b74c-\
8b63d68c4e32"],

Cell[CellGroupData[{

Cell[BoxData["86.844303`"], "EchoTiming",
 CellChangeTimes->{
  3.963325719556889*^9},ExpressionUUID->"78e5fed5-c606-4654-8c7e-\
d44eb6eaf6fd"],

Cell[BoxData["0.010694`"], "EchoTiming",
 CellChangeTimes->{
  3.963325719570559*^9},ExpressionUUID->"95be44b8-6db6-4c89-a2cb-\
e528726532f9"]
}, Open  ]]
}, Open  ]],

Cell[TextData[{
 "After the QRE calculation is finished, let\[CloseCurlyQuote]s display the \
result with a time parameter t and a accuracy parameter \[Epsilon] ",
 StyleBox["(@Karthik can we sync the letters here with the paper?)",
  FontWeight->"Bold",
  FontSlant->"Italic",
  FontVariations->{"Underline"->True}],
 ":"
}], "Text",
 CellChangeTimes->{{3.963402866169516*^9, 3.9634029076596403`*^9}, {
  3.963403235183846*^9, 3.963403276079812*^9}, {3.963405345029933*^9, 
  3.963405346887999*^9}},ExpressionUUID->"c29ef228-9610-4fe2-84c2-\
379f378bd0fe"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"View", " ", "Results"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"CostAnalysis`viewAllResults", "[", 
     RowBox[{"Instance1Result", ",", "t", ",", "\[Epsilon]"}], "]"}], " ", 
    ";"}], "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.946122056249242*^9, 3.94612205901908*^9}, {
   3.9461221675446*^9, 3.946122237927978*^9}, {3.9461223745665283`*^9, 
   3.94612256081662*^9}, {3.946124542921606*^9, 3.946124550073524*^9}, {
   3.946125969271934*^9, 3.946125995186101*^9}, 3.9461260258636*^9, {
   3.946126116624103*^9, 3.946126142297975*^9}, {3.946128690954178*^9, 
   3.946128764645544*^9}, {3.946166852196194*^9, 3.946167001273471*^9}, {
   3.946167036517096*^9, 3.946167086297594*^9}, {3.946490055591479*^9, 
   3.9464901287549057`*^9}, {3.946492902799545*^9, 3.946492926667141*^9}, {
   3.9464931480328207`*^9, 3.946493148492016*^9}, {3.94649320360962*^9, 
   3.946493328090327*^9}, 3.94649336892379*^9, {3.94649446982141*^9, 
   3.946494469878873*^9}, 3.946494576213092*^9, {3.946494995955134*^9, 
   3.946494996053494*^9}, {3.946495041072632*^9, 3.946495041173824*^9}, {
   3.9464951594898763`*^9, 3.946495181022932*^9}, {3.946497980355174*^9, 
   3.946497981240966*^9}, {3.94649815633422*^9, 3.946498163453021*^9}, {
   3.94649824824883*^9, 3.9464982663052588`*^9}, {3.946499433282394*^9, 
   3.946499564280864*^9}, {3.946501865983119*^9, 3.946501875250986*^9}, 
   3.946501992008497*^9, {3.946503639212558*^9, 3.946503639624648*^9}, {
   3.9465643107086763`*^9, 3.94656432284638*^9}, {3.946564529145935*^9, 
   3.946564559829351*^9}, 3.946564832060857*^9, {3.946565176755971*^9, 
   3.946565202241859*^9}, {3.946565313675543*^9, 3.946565370593363*^9}, {
   3.9467288407929296`*^9, 3.946728840877693*^9}, {3.947951264999652*^9, 
   3.947951333281031*^9}, 3.947952104631193*^9, {3.9626211958369913`*^9, 
   3.962621209861579*^9}, {3.962621386821911*^9, 3.9626214379074*^9}, {
   3.962621473145152*^9, 3.962621473566862*^9}, {3.962621507823801*^9, 
   3.962621518402524*^9}, {3.962621563952813*^9, 3.962621566087644*^9}, {
   3.9626216145155153`*^9, 3.962621652237782*^9}, 3.962621790820737*^9, {
   3.962636710852086*^9, 3.962636711695461*^9}, {3.962645268988286*^9, 
   3.962645279994528*^9}, {3.962645372422417*^9, 3.962645440005119*^9}, 
   3.9626456183619328`*^9, 3.962645685243004*^9, {3.962645719266127*^9, 
   3.962645726547319*^9}, {3.96264627734889*^9, 3.962646338078374*^9}, {
   3.9627225805627213`*^9, 3.962722582601712*^9}, {3.963402909244639*^9, 
   3.963402911193082*^9}, {3.963405385167027*^9, 3.963405385842709*^9}, {
   3.963568608006016*^9, 
   3.96356860828172*^9}},ExpressionUUID->"81eecff9-60e9-4d59-b87e-\
f2d4290d51cc"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Particle Count:\"\>", "\[InvisibleSpace]", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"\[Eta]el\"\>", "\[Rule]", "32"}], ",", 
     RowBox[{"\<\"\[Eta]ion\"\>", "\[Rule]", "8"}], ",", 
     RowBox[{"\<\"\[Eta]\"\>", "\[Rule]", "40"}]}], "\[RightAssociation]"}]}],
  
  SequenceForm[
  "Particle Count:", <|"\[Eta]el" -> 32, "\[Eta]ion" -> 8, "\[Eta]" -> 40|>],
  Editable->False]], "Print",
 CellChangeTimes->{3.962646870100178*^9, 3.962800486339282*^9, 
  3.962989231338521*^9, 3.962989474948533*^9, 3.9633253303912477`*^9, 
  3.9633255318567753`*^9, 3.963325719599173*^9},
 CellLabel->
  "During evaluation of \
In[16]:=",ExpressionUUID->"2b7a5133-0b50-4121-a359-1c101874e57c"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Rescaling Factors:\"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
     TagBox[
      TagBox[
       DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
        "InitialData" -> {<|"Ion" -> Row[{"N5", 
               Style["N5", 
                GrayLevel[0.5]]}, "\n"], "Tel" -> Row[{203.68613321248222`, 
               Style[203.68613321248222`, 
                GrayLevel[0.5]]}, "\n"], "Tion" -> Row[{3379.554133209166, 
               Style[3379.554133209166, 
                GrayLevel[0.5]]}, "\n"], "Vel" -> Row[{8.773955408640594, 
               Style[12.849193004580354`, 
                GrayLevel[0.5]]}, "\n"], "Vion" -> Row[{1.2581000115432974`, 
               Style[1.7930532666157086`, 
                GrayLevel[0.5]]}, "\n"], "Loc" -> Row[{25.41441643139074, 
               Style[26.030506422645928`, 
                GrayLevel[0.5]]}, "\n"], "NL" -> Row[{13.547349444304134`, 
               Style[13.55224300000034, 
                GrayLevel[0.5]]}, "\n"]|>, <|"Ion" -> Row[{"B3", 
               Style["B3", 
                GrayLevel[0.5]]}, "\n"], "Tel" -> Row[{203.68613321248222`, 
               Style[203.68613321248222`, 
                GrayLevel[0.5]]}, "\n"], "Tion" -> Row[{3379.554133209166, 
               Style[3379.554133209166, 
                GrayLevel[0.5]]}, "\n"], "Vel" -> Row[{8.773955408640594, 
               Style[12.849193004580354`, 
                GrayLevel[0.5]]}, "\n"], "Vion" -> Row[{1.2581000115432974`, 
               Style[1.7930532666157086`, 
                GrayLevel[0.5]]}, "\n"], "Loc" -> Row[{10.725157991284796`, 
               Style[11.094862778486384`, 
                GrayLevel[0.5]]}, "\n"], "NL" -> Row[{6.232494889546468, 
               Style[6.233928000000156, 
                GrayLevel[0.5]]}, "\n"]|>, <|"Ion" -> Row[{"F7", 
               Style["F7", 
                GrayLevel[0.5]]}, "\n"], "Tel" -> Row[{203.68613321248222`, 
               Style[203.68613321248222`, 
                GrayLevel[0.5]]}, "\n"], "Tion" -> Row[{3379.554133209166, 
               Style[3379.554133209166, 
                GrayLevel[0.5]]}, "\n"], "Vel" -> Row[{8.773955408640594, 
               Style[12.849193004580354`, 
                GrayLevel[0.5]]}, "\n"], "Vion" -> Row[{1.2581000115432974`, 
               Style[1.7930532666157086`, 
                GrayLevel[0.5]]}, "\n"], "Loc" -> Row[{46.00245334114106, 
               Style[46.86595578604305, 
                GrayLevel[0.5]]}, "\n"], "NL" -> Row[{23.404634566413986`, 
               Style[23.584942000000595`, 
                GrayLevel[0.5]]}, "\n"]|>, <|"Ion" -> Row[{"H1", 
               Style["H1", 
                GrayLevel[0.5]]}, "\n"], "Tel" -> Row[{203.68613321248222`, 
               Style[203.68613321248222`, 
                GrayLevel[0.5]]}, "\n"], "Tion" -> Row[{3379.554133209166, 
               Style[3379.554133209166, 
                GrayLevel[0.5]]}, "\n"], "Vel" -> Row[{8.773955408640594, 
               Style[12.849193004580354`, 
                GrayLevel[0.5]]}, "\n"], "Vion" -> Row[{1.2581000115432974`, 
               Style[1.7930532666157086`, 
                GrayLevel[0.5]]}, "\n"], "Loc" -> Row[{8.045305581520326, 
               Style[8.169659804014326, 
                GrayLevel[0.5]]}, "\n"], "NL" -> Row[{0., 
               Style[0., 
                GrayLevel[0.5]]}, "\n"]|>}, "AllowEmbedding" -> True, 
         "InitialShape" -> 
         TypeSystem`PackageScope`HeaderShape[<|{All, "Ion"} -> 
            1, {All, "Tel"} -> 1, {All, "Tion"} -> 1, {All, "Vel"} -> 
            1, {All, "Vion"} -> 1, {All, "Loc"} -> 1, {All, "NL"} -> 1|>, 
           TypeSystem`PackageScope`Limited[
            TypeSystem`PackageScope`ColumnShape[
             TypeSystem`PackageScope`Limited[
              
              TypeSystem`PackageScope`RowShape[<|
               "Ion" -> TypeSystem`PackageScope`UnknownShape[False], "Tel" -> 
                TypeSystem`PackageScope`UnknownShape[False], "Tion" -> 
                TypeSystem`PackageScope`UnknownShape[False], "Vel" -> 
                TypeSystem`PackageScope`UnknownShape[False], "Vion" -> 
                TypeSystem`PackageScope`UnknownShape[False], "Loc" -> 
                TypeSystem`PackageScope`UnknownShape[False], "NL" -> 
                TypeSystem`PackageScope`UnknownShape[False]|>], 
              DirectedInfinity[1], 7, {All}]], 4, 
            DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Vector[
           
           TypeSystem`Struct[{
            "Ion", "Tel", "Tion", "Vel", "Vion", "Loc", "NL"}, {
            TypeSystem`AnyType, TypeSystem`AnyType, TypeSystem`AnyType, 
             TypeSystem`AnyType, TypeSystem`AnyType, TypeSystem`AnyType, 
             TypeSystem`AnyType}], 4], "Meta" -> <||>, "RowTarget" -> 20, 
         "ColumnTarget" -> 10, "Shape" -> 
         TypeSystem`PackageScope`HeaderShape[<|{All, "Ion"} -> 
            1, {All, "Tel"} -> 1, {All, "Tion"} -> 1, {All, "Vel"} -> 
            1, {All, "Vion"} -> 1, {All, "Loc"} -> 1, {All, "NL"} -> 1|>, 
           TypeSystem`PackageScope`Limited[
            TypeSystem`PackageScope`ColumnShape[
             TypeSystem`PackageScope`Limited[
              
              TypeSystem`PackageScope`RowShape[<|
               "Ion" -> TypeSystem`PackageScope`UnknownShape[False], "Tel" -> 
                TypeSystem`PackageScope`UnknownShape[False], "Tion" -> 
                TypeSystem`PackageScope`UnknownShape[False], "Vel" -> 
                TypeSystem`PackageScope`UnknownShape[False], "Vion" -> 
                TypeSystem`PackageScope`UnknownShape[False], "Loc" -> 
                TypeSystem`PackageScope`UnknownShape[False], "NL" -> 
                TypeSystem`PackageScope`UnknownShape[False]|>], 
              DirectedInfinity[1], 7, {All}]], 4, 
            DirectedInfinity[1], {}]], "Type" -> TypeSystem`Vector[
           
           TypeSystem`Struct[{
            "Ion", "Tel", "Tion", "Vel", "Vion", "Loc", "NL"}, {
            TypeSystem`AnyType, TypeSystem`AnyType, TypeSystem`AnyType, 
             TypeSystem`AnyType, TypeSystem`AnyType, TypeSystem`AnyType, 
             TypeSystem`AnyType}], 4], "Path" -> {}, "DisplayedRowCount" -> 4,
          "DisplayedColumnCount" -> 7, "DataRowCount" -> 4, "DataColumnCount" -> 
         7, "SortPaths" -> {}, "SortDirections" -> {}, "HiddenItemsMap" -> 
         Null, "UpdateType" -> 1|>, 
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
        DynamicModule[{
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
            Style[
             Grid[{{
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["Ion", 
                    Style[
                    "Ion", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "Ion"}, 1]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "Ion"}, "ColumnHeader", True], "Mouse"], 
                  ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["Tel", 
                    Style[
                    "Tel", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "Tel"}, 1]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "Tel"}, "ColumnHeader", True], "Mouse"], 
                  ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["Tion", 
                    Style[
                    "Tion", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "Tion"}, 1]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "Tion"}, "ColumnHeader", True], "Mouse"], 
                  ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["Vel", 
                    Style[
                    "Vel", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "Vel"}, 1]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "Vel"}, "ColumnHeader", True], "Mouse"], 
                  ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["Vion", 
                    Style[
                    "Vion", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "Vion"}, 1]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "Vion"}, "ColumnHeader", True], "Mouse"], 
                  ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["Loc", 
                    Style[
                    "Loc", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "Loc"}, 1]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "Loc"}, "ColumnHeader", True], "Mouse"], 
                  ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["NL", 
                    Style[
                    "NL", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "NL"}, 1]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "NL"}, "ColumnHeader", True], "Mouse"], 
                  ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
                Item[
                 Pane[
                  Annotation[
                   Row[{"N5", 
                    Style["N5", 
                    GrayLevel[0.5]]}, "\n"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                    Key["Ion"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   Row[{203.68613321248222`, 
                    Style[203.68613321248222`, 
                    GrayLevel[0.5]]}, "\n"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                    Key["Tel"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   Row[{3379.554133209166, 
                    Style[3379.554133209166, 
                    GrayLevel[0.5]]}, "\n"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                    Key["Tion"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   Row[{8.773955408640594, 
                    Style[12.849193004580354`, 
                    GrayLevel[0.5]]}, "\n"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                    Key["Vel"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   Row[{1.2581000115432974`, 
                    Style[1.7930532666157086`, 
                    GrayLevel[0.5]]}, "\n"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                    Key["Vion"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   Row[{25.41441643139074, 
                    Style[26.030506422645928`, 
                    GrayLevel[0.5]]}, "\n"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                    Key["Loc"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   Row[{13.547349444304134`, 
                    Style[13.55224300000034, 
                    GrayLevel[0.5]]}, "\n"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                    Key["NL"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   Row[{"B3", 
                    Style["B3", 
                    GrayLevel[0.5]]}, "\n"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                    Key["Ion"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   Row[{203.68613321248222`, 
                    Style[203.68613321248222`, 
                    GrayLevel[0.5]]}, "\n"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                    Key["Tel"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   Row[{3379.554133209166, 
                    Style[3379.554133209166, 
                    GrayLevel[0.5]]}, "\n"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                    Key["Tion"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   Row[{8.773955408640594, 
                    Style[12.849193004580354`, 
                    GrayLevel[0.5]]}, "\n"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                    Key["Vel"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   Row[{1.2581000115432974`, 
                    Style[1.7930532666157086`, 
                    GrayLevel[0.5]]}, "\n"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                    Key["Vion"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   Row[{10.725157991284796`, 
                    Style[11.094862778486384`, 
                    GrayLevel[0.5]]}, "\n"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                    Key["Loc"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   Row[{6.232494889546468, 
                    Style[6.233928000000156, 
                    GrayLevel[0.5]]}, "\n"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                    Key["NL"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   Row[{"F7", 
                    Style["F7", 
                    GrayLevel[0.5]]}, "\n"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                    Key["Ion"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   Row[{203.68613321248222`, 
                    Style[203.68613321248222`, 
                    GrayLevel[0.5]]}, "\n"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                    Key["Tel"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   Row[{3379.554133209166, 
                    Style[3379.554133209166, 
                    GrayLevel[0.5]]}, "\n"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                    Key["Tion"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   Row[{8.773955408640594, 
                    Style[12.849193004580354`, 
                    GrayLevel[0.5]]}, "\n"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                    Key["Vel"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   Row[{1.2581000115432974`, 
                    Style[1.7930532666157086`, 
                    GrayLevel[0.5]]}, "\n"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                    Key["Vion"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   Row[{46.00245334114106, 
                    Style[46.86595578604305, 
                    GrayLevel[0.5]]}, "\n"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                    Key["Loc"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   Row[{23.404634566413986`, 
                    Style[23.584942000000595`, 
                    GrayLevel[0.5]]}, "\n"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                    Key["NL"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   Row[{"H1", 
                    Style["H1", 
                    GrayLevel[0.5]]}, "\n"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                    Key["Ion"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   Row[{203.68613321248222`, 
                    Style[203.68613321248222`, 
                    GrayLevel[0.5]]}, "\n"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                    Key["Tel"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   Row[{3379.554133209166, 
                    Style[3379.554133209166, 
                    GrayLevel[0.5]]}, "\n"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                    Key["Tion"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   Row[{8.773955408640594, 
                    Style[12.849193004580354`, 
                    GrayLevel[0.5]]}, "\n"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                    Key["Vel"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   Row[{1.2581000115432974`, 
                    Style[1.7930532666157086`, 
                    GrayLevel[0.5]]}, "\n"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                    Key["Vion"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   Row[{8.045305581520326, 
                    Style[8.169659804014326, 
                    GrayLevel[0.5]]}, "\n"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                    Key["Loc"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   Row[{0., 
                    Style[0., 
                    GrayLevel[0.5]]}, "\n"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                    Key["NL"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}}, 
              BaseStyle -> {
               ContextMenu -> 
                Dynamic[
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                  Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger, TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu,
                     True, TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger = 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                    TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                    Block[{TypeSystem`NestedGrid`PackagePrivate`$\
globalScrollPos = {TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                    
                    With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
                "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, 
              Dividers -> All, FrameStyle -> GrayLevel[0.7490196078431373], 
              Spacings -> {0, 0}, Alignment -> Left, 
              BaseStyle -> {
               FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
                Plain}], LineBreakWithin -> False, ContextMenu -> {}, 
             NumberMarks -> False, ShowAutoStyles -> False]], 
          TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
         Dynamic[
          TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
          TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
             Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
             
             Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
               TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
               TypeSystem`NestedGrid`PackagePrivate`datasetData[
                TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
              TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
                 FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
                 TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                 TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                 TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
                Not[
                 FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
                TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
                TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
           TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
           TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
           TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
             TypeSystem`SparseGrid[
              TypeSystem`H["(data no longer present)"]], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
          TrackedSymbols :> {
           TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
         DynamicModuleValues :> {}], 
        TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
         TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
          TypeSystem`PackageScope`SubViewPathbar[
          TypeSystem`NestedGrid`PackagePrivate`$path$$, 
           TypeSystem`NestedGrid`PackagePrivate`updateState[
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
            TypeSystem`NestedGrid`PackagePrivate`$path$$, 
            TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
            TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
         TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
        TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
         Framed[
          Dynamic[
           Replace[
           TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
            TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               TypeSystem`NestedGrid`PackagePrivate`localHold[
               TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
               Blank[]] -> "", 
             TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               TypeSystem`NestedGrid`PackagePrivate`localHold[
               TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
               Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
                Blank[]], 
               Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
                Blank[]], 
               Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                Blank[]]] :> (
              Increment[
               TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
              TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
               TypeSystem`NestedGrid`PackagePrivate`path$; 
              TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
               TypeSystem`NestedGrid`PackagePrivate`pathType$; 
              TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
               TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
              TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
               TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
              TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
               TypeSystem`NestedGrid`PackagePrivate`path$, 
                TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
             Spacer[10], Blank[] :> Spacer[10]}], 
           TrackedSymbols :> {
            TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], 
          FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
          Top, ImageSize -> {Automatic, 15}], FontSize -> 1], 
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
        DynamicWrapperBox[
         DynamicBox[ToBoxes[
           Dataset`DatasetContent[
           2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
            "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], 
            "State" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], 
            "VPos" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], 
            "HPos" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], 
            "TopBar" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], 
            "BottomBar" -> 
            Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], 
            "OutputID" -> Hold[
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], 
           StandardForm],
          ImageSizeCache->{478., {118.3544921875, 123.6455078125}},
          
          TrackedSymbols:>{
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
            TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
         TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
         MouseAnnotation[],
         ImageSizeCache->{478., {118.3544921875, 123.6455078125}}],
        BaseStyle->{LineBreakWithin -> False},
        DynamicModuleValues:>{},
        Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
         CreateUUID[]),
        UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
       
       Deploy,
       DefaultBaseStyle->"Deploy"],
      Dataset`InterpretDataset[1],
      Editable->False,
      SelectWithContents->True,
      Selectable->False], ",", 
     TagBox[
      TagBox[
       DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
        "InitialData" -> {<|
           "Tel" -> 6517.956262799431, "Tion" -> 6.117944478903405, "Vel" -> 
            8703.76376537147, "Vion" -> 1056.8040096963698`, "Loc" -> 
            6345.05123810111, "NL" -> 2879.799937058962, "Total" -> 
            25509.493157506244`|>, <|
           "Tel" -> 6517.956262799431, "Tion" -> 6.117944478903405, "Vel" -> 
            12746.399460543711`, "Vion" -> 1506.1647439571952`, "Loc" -> 
            6471.430911081742, "NL" -> 2897.311904000073, "Total" -> 
            30145.381226861053`|>, <|
           "Tel" -> 1., "Tion" -> 1., "Vel" -> 1.464469832149644, "Vion" -> 
            1.4252072571052519`, "Loc" -> 1.0199178333220922`, "NL" -> 
            1.0060809664990114`, "Total" -> 1.1817318768636798`|>}, 
         "AllowEmbedding" -> True, "InitialShape" -> 
         TypeSystem`PackageScope`HeaderShape[<|{All, "Tel"} -> 
            1, {All, "Tion"} -> 1, {All, "Vel"} -> 1, {All, "Vion"} -> 
            1, {All, "Loc"} -> 1, {All, "NL"} -> 1, {All, "Total"} -> 1|>, 
           TypeSystem`PackageScope`Limited[
            TypeSystem`PackageScope`ColumnShape[
             TypeSystem`PackageScope`Limited[
              
              TypeSystem`PackageScope`RowShape[<|
               "Tel" -> TypeSystem`PackageScope`AtomShape[60], "Tion" -> 
                TypeSystem`PackageScope`AtomShape[60], "Vel" -> 
                TypeSystem`PackageScope`AtomShape[60], "Vion" -> 
                TypeSystem`PackageScope`AtomShape[60], "Loc" -> 
                TypeSystem`PackageScope`AtomShape[60], "NL" -> 
                TypeSystem`PackageScope`AtomShape[60], "Total" -> 
                TypeSystem`PackageScope`AtomShape[60]|>], 
              DirectedInfinity[1], 7, {All}]], 3, 
            DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Vector[
           
           TypeSystem`Struct[{
            "Tel", "Tion", "Vel", "Vion", "Loc", "NL", "Total"}, {
             TypeSystem`Atom[Real], 
             TypeSystem`Atom[Real], 
             TypeSystem`Atom[Real], 
             TypeSystem`Atom[Real], 
             TypeSystem`Atom[Real], 
             TypeSystem`Atom[Real], 
             TypeSystem`Atom[Real]}], 3], "Meta" -> <||>, "RowTarget" -> 20, 
         "ColumnTarget" -> 10, "Shape" -> 
         TypeSystem`PackageScope`HeaderShape[<|{All, "Tel"} -> 
            1, {All, "Tion"} -> 1, {All, "Vel"} -> 1, {All, "Vion"} -> 
            1, {All, "Loc"} -> 1, {All, "NL"} -> 1, {All, "Total"} -> 1|>, 
           TypeSystem`PackageScope`Limited[
            TypeSystem`PackageScope`ColumnShape[
             TypeSystem`PackageScope`Limited[
              
              TypeSystem`PackageScope`RowShape[<|
               "Tel" -> TypeSystem`PackageScope`AtomShape[60], "Tion" -> 
                TypeSystem`PackageScope`AtomShape[60], "Vel" -> 
                TypeSystem`PackageScope`AtomShape[60], "Vion" -> 
                TypeSystem`PackageScope`AtomShape[60], "Loc" -> 
                TypeSystem`PackageScope`AtomShape[60], "NL" -> 
                TypeSystem`PackageScope`AtomShape[60], "Total" -> 
                TypeSystem`PackageScope`AtomShape[60]|>], 
              DirectedInfinity[1], 7, {All}]], 3, 
            DirectedInfinity[1], {}]], "Type" -> TypeSystem`Vector[
           
           TypeSystem`Struct[{
            "Tel", "Tion", "Vel", "Vion", "Loc", "NL", "Total"}, {
             TypeSystem`Atom[Real], 
             TypeSystem`Atom[Real], 
             TypeSystem`Atom[Real], 
             TypeSystem`Atom[Real], 
             TypeSystem`Atom[Real], 
             TypeSystem`Atom[Real], 
             TypeSystem`Atom[Real]}], 3], "Path" -> {}, "DisplayedRowCount" -> 
         3, "DisplayedColumnCount" -> 7, "DataRowCount" -> 3, 
         "DataColumnCount" -> 7, "SortPaths" -> {}, "SortDirections" -> {}, 
         "HiddenItemsMap" -> Null, "UpdateType" -> 1|>, 
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
        DynamicModule[{
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
            Style[
             Grid[{{
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["Tel", 
                    Style[
                    "Tel", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "Tel"}, 1]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "Tel"}, "ColumnHeader", True], "Mouse"], 
                  ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["Tion", 
                    Style[
                    "Tion", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "Tion"}, 1]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "Tion"}, "ColumnHeader", True], "Mouse"], 
                  ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["Vel", 
                    Style[
                    "Vel", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "Vel"}, 1]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "Vel"}, "ColumnHeader", True], "Mouse"], 
                  ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["Vion", 
                    Style[
                    "Vion", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "Vion"}, 1]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "Vion"}, "ColumnHeader", True], "Mouse"], 
                  ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["Loc", 
                    Style[
                    "Loc", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "Loc"}, 1]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "Loc"}, "ColumnHeader", True], "Mouse"], 
                  ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["NL", 
                    Style[
                    "NL", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "NL"}, 1]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "NL"}, "ColumnHeader", True], "Mouse"], 
                  ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["Total", 
                    Style[
                    "Total", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "Total"}, 1]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "Total"}, "ColumnHeader", True], "Mouse"], 
                  ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["6517.96"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                    Key["Tel"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["6.11794"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                    Key["Tion"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["8703.76"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                    Key["Vel"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["1056.8"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                    Key["Vion"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["6345.05"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                    Key["Loc"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["2879.8"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                    Key["NL"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["25509.5"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                    Key["Total"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["6517.96"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                    Key["Tel"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["6.11794"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                    Key["Tion"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["12746.4"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                    Key["Vel"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["1506.16"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                    Key["Vion"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["6471.43"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                    Key["Loc"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["2897.31"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                    Key["NL"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["30145.4"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                    Key["Total"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["1.0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                    Key["Tel"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["1.0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                    Key["Tion"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["1.46447"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                    Key["Vel"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["1.42521"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                    Key["Vion"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["1.01992"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                    Key["Loc"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["1.00608"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                    Key["NL"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["1.18173"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                    Key["Total"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}}, 
              BaseStyle -> {
               ContextMenu -> 
                Dynamic[
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                  Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger, TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu,
                     True, TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger = 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                    TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                    Block[{TypeSystem`NestedGrid`PackagePrivate`$\
globalScrollPos = {TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                    
                    With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
                "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, 
              Dividers -> All, FrameStyle -> GrayLevel[0.7490196078431373], 
              Spacings -> {0, 0}, Alignment -> Left, 
              BaseStyle -> {
               FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
                Plain}], LineBreakWithin -> False, ContextMenu -> {}, 
             NumberMarks -> False, ShowAutoStyles -> False]], 
          TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
         Dynamic[
          TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
          TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
             Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
             
             Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
               TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
               TypeSystem`NestedGrid`PackagePrivate`datasetData[
                TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
              TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
                 FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
                 TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                 TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                 TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
                Not[
                 FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
                TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
                TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
           TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
           TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
           TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
             TypeSystem`SparseGrid[
              TypeSystem`H["(data no longer present)"]], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
          TrackedSymbols :> {
           TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
         DynamicModuleValues :> {}], 
        TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
         TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
          TypeSystem`PackageScope`SubViewPathbar[
          TypeSystem`NestedGrid`PackagePrivate`$path$$, 
           TypeSystem`NestedGrid`PackagePrivate`updateState[
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
            TypeSystem`NestedGrid`PackagePrivate`$path$$, 
            TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
            TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
         TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
        TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
         Framed[
          Dynamic[
           Replace[
           TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
            TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               TypeSystem`NestedGrid`PackagePrivate`localHold[
               TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
               Blank[]] -> "", 
             TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               TypeSystem`NestedGrid`PackagePrivate`localHold[
               TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
               Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
                Blank[]], 
               Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
                Blank[]], 
               Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                Blank[]]] :> (
              Increment[
               TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
              TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
               TypeSystem`NestedGrid`PackagePrivate`path$; 
              TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
               TypeSystem`NestedGrid`PackagePrivate`pathType$; 
              TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
               TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
              TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
               TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
              TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
               TypeSystem`NestedGrid`PackagePrivate`path$, 
                TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
             Spacer[10], Blank[] :> Spacer[10]}], 
           TrackedSymbols :> {
            TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], 
          FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
          Top, ImageSize -> {Automatic, 15}], FontSize -> 1], 
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
        DynamicWrapperBox[
         DynamicBox[ToBoxes[
           Dataset`DatasetContent[
           2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
            "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], 
            "State" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], 
            "VPos" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], 
            "HPos" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], 
            "TopBar" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], 
            "BottomBar" -> 
            Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], 
            "OutputID" -> Hold[
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], 
           StandardForm],
          ImageSizeCache->{478., {60.8544921875, 66.1455078125}},
          
          TrackedSymbols:>{
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
            TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
         TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
         MouseAnnotation[],
         ImageSizeCache->{478., {60.8544921875, 66.1455078125}}],
        BaseStyle->{LineBreakWithin -> False},
        DynamicModuleValues:>{},
        Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
         CreateUUID[]),
        UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
       
       Deploy,
       DefaultBaseStyle->"Deploy"],
      Dataset`InterpretDataset[1],
      Editable->False,
      SelectWithContents->True,
      Selectable->False]}], "}"}]}],
  SequenceForm["Rescaling Factors:", {
    Dataset[{<|"Ion" -> Row[{"N5", 
          Style["N5", 
           GrayLevel[0.5]]}, "\n"], "Tel" -> Row[{203.68613321248222`, 
          Style[203.68613321248222`, 
           GrayLevel[0.5]]}, "\n"], "Tion" -> Row[{3379.554133209166, 
          Style[3379.554133209166, 
           GrayLevel[0.5]]}, "\n"], "Vel" -> Row[{8.773955408640594, 
          Style[12.849193004580354`, 
           GrayLevel[0.5]]}, "\n"], "Vion" -> Row[{1.2581000115432974`, 
          Style[1.7930532666157086`, 
           GrayLevel[0.5]]}, "\n"], "Loc" -> Row[{25.41441643139074, 
          Style[26.030506422645928`, 
           GrayLevel[0.5]]}, "\n"], "NL" -> Row[{13.547349444304134`, 
          Style[13.55224300000034, 
           GrayLevel[0.5]]}, "\n"]|>, <|"Ion" -> Row[{"B3", 
          Style["B3", 
           GrayLevel[0.5]]}, "\n"], "Tel" -> Row[{203.68613321248222`, 
          Style[203.68613321248222`, 
           GrayLevel[0.5]]}, "\n"], "Tion" -> Row[{3379.554133209166, 
          Style[3379.554133209166, 
           GrayLevel[0.5]]}, "\n"], "Vel" -> Row[{8.773955408640594, 
          Style[12.849193004580354`, 
           GrayLevel[0.5]]}, "\n"], "Vion" -> Row[{1.2581000115432974`, 
          Style[1.7930532666157086`, 
           GrayLevel[0.5]]}, "\n"], "Loc" -> Row[{10.725157991284796`, 
          Style[11.094862778486384`, 
           GrayLevel[0.5]]}, "\n"], "NL" -> Row[{6.232494889546468, 
          Style[6.233928000000156, 
           GrayLevel[0.5]]}, "\n"]|>, <|"Ion" -> Row[{"F7", 
          Style["F7", 
           GrayLevel[0.5]]}, "\n"], "Tel" -> Row[{203.68613321248222`, 
          Style[203.68613321248222`, 
           GrayLevel[0.5]]}, "\n"], "Tion" -> Row[{3379.554133209166, 
          Style[3379.554133209166, 
           GrayLevel[0.5]]}, "\n"], "Vel" -> Row[{8.773955408640594, 
          Style[12.849193004580354`, 
           GrayLevel[0.5]]}, "\n"], "Vion" -> Row[{1.2581000115432974`, 
          Style[1.7930532666157086`, 
           GrayLevel[0.5]]}, "\n"], "Loc" -> Row[{46.00245334114106, 
          Style[46.86595578604305, 
           GrayLevel[0.5]]}, "\n"], "NL" -> Row[{23.404634566413986`, 
          Style[23.584942000000595`, 
           GrayLevel[0.5]]}, "\n"]|>, <|"Ion" -> Row[{"H1", 
          Style["H1", 
           GrayLevel[0.5]]}, "\n"], "Tel" -> Row[{203.68613321248222`, 
          Style[203.68613321248222`, 
           GrayLevel[0.5]]}, "\n"], "Tion" -> Row[{3379.554133209166, 
          Style[3379.554133209166, 
           GrayLevel[0.5]]}, "\n"], "Vel" -> Row[{8.773955408640594, 
          Style[12.849193004580354`, 
           GrayLevel[0.5]]}, "\n"], "Vion" -> Row[{1.2581000115432974`, 
          Style[1.7930532666157086`, 
           GrayLevel[0.5]]}, "\n"], "Loc" -> Row[{8.045305581520326, 
          Style[8.169659804014326, 
           GrayLevel[0.5]]}, "\n"], "NL" -> Row[{0., 
          Style[0., 
           GrayLevel[0.5]]}, "\n"]|>}, 
     TypeSystem`Vector[
      TypeSystem`Struct[{"Ion", "Tel", "Tion", "Vel", "Vion", "Loc", "NL"}, {
       TypeSystem`AnyType, TypeSystem`AnyType, TypeSystem`AnyType, 
        TypeSystem`AnyType, TypeSystem`AnyType, TypeSystem`AnyType, 
        TypeSystem`AnyType}], 4], <||>], 
    Dataset[{<|
      "Tel" -> 6517.956262799431, "Tion" -> 6.117944478903405, "Vel" -> 
       8703.76376537147, "Vion" -> 1056.8040096963698`, "Loc" -> 
       6345.05123810111, "NL" -> 2879.799937058962, "Total" -> 
       25509.493157506244`|>, <|
      "Tel" -> 6517.956262799431, "Tion" -> 6.117944478903405, "Vel" -> 
       12746.399460543711`, "Vion" -> 1506.1647439571952`, "Loc" -> 
       6471.430911081742, "NL" -> 2897.311904000073, "Total" -> 
       30145.381226861053`|>, <|
      "Tel" -> 1., "Tion" -> 1., "Vel" -> 1.464469832149644, "Vion" -> 
       1.4252072571052519`, "Loc" -> 1.0199178333220922`, "NL" -> 
       1.0060809664990114`, "Total" -> 1.1817318768636798`|>}, 
     TypeSystem`Vector[
      TypeSystem`Struct[{"Tel", "Tion", "Vel", "Vion", "Loc", "NL", "Total"}, {
        TypeSystem`Atom[Real], 
        TypeSystem`Atom[Real], 
        TypeSystem`Atom[Real], 
        TypeSystem`Atom[Real], 
        TypeSystem`Atom[Real], 
        TypeSystem`Atom[Real], 
        TypeSystem`Atom[Real]}], 3], <||>]}],
  Editable->False]], "Print",
 CellChangeTimes->{3.962646870100178*^9, 3.962800486339282*^9, 
  3.962989231338521*^9, 3.962989474948533*^9, 3.9633253303912477`*^9, 
  3.963325531856776*^9, 3.963325719623941*^9},
 CellLabel->
  "During evaluation of \
In[16]:=",ExpressionUUID->"bcea6434-82e2-45cd-aa4d-278c5c1d28a8"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Compilation Cost:\"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"3424", ",", "8010", ",", "11363", ",", "1140", ",", "161234"}],
       "}"}], ",", "185171"}], "}"}]}],
  SequenceForm[
  "Compilation Cost:", {{3424, 8010, 11363, 1140, 161234}, 185171}],
  Editable->False]], "Print",
 CellChangeTimes->{3.962646870100178*^9, 3.962800486339282*^9, 
  3.962989231338521*^9, 3.962989474948533*^9, 3.9633253303912477`*^9, 
  3.9633255318567758`*^9, 3.963325719711516*^9},
 CellLabel->
  "During evaluation of \
In[16]:=",ExpressionUUID->"eb2f0508-e049-4d30-b1f8-22d9bbe2e1c1"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Qubit Cost:\"\>", "\[InvisibleSpace]", "808"}],
  SequenceForm["Qubit Cost:", 808],
  Editable->False]], "Print",
 CellChangeTimes->{3.962646870100178*^9, 3.962800486339282*^9, 
  3.962989231338521*^9, 3.962989474948533*^9, 3.9633253303912477`*^9, 
  3.9633255318567753`*^9, 3.963325719711904*^9},
 CellLabel->
  "During evaluation of \
In[16]:=",ExpressionUUID->"1e44802d-b3d7-44a3-8e1f-df89d301a300"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Time Evolution Cost:\"\>", "\[InvisibleSpace]", 
   TagBox[
    TagBox[
     DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
      "InitialData" -> <|
        "exact" -> <|
          "query" -> 2 + 
            Ceiling[34670.995851624786` $CellContext`t + 
              Log[2.9552401942122875`/$CellContext`\[Epsilon]]], 
           "compilation" -> ScientificForm[185171., 5], "total" -> 
           185171 (2 + 
             Ceiling[34670.995851624786` $CellContext`t + 
               Log[2.9552401942122875`/$CellContext`\[Epsilon]]])|>, 
         "bound" -> <|
          "query" -> 2 + 
            Ceiling[40971.821000473414` $CellContext`t + 
              Log[2.9552401942122875`/$CellContext`\[Epsilon]]], 
           "compilation" -> ScientificForm[185171., 5], "total" -> 
           185171 (2 + 
             Ceiling[40971.821000473414` $CellContext`t + 
               Log[2.9552401942122875`/$CellContext`\[Epsilon]]])|>|>, 
       "AllowEmbedding" -> True, "InitialShape" -> 
       TypeSystem`PackageScope`HeaderShape[<|{All, 
            TypeSystem`PackageScope`KeyDummy[1]} -> 1, {All, "query"} -> 
          1, {All, "compilation"} -> 1, {All, "total"} -> 1|>, 
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`ColumnShape[
           TypeSystem`PackageScope`KeyValueShape[
            TypeSystem`PackageScope`AtomShape[56.00000000000001], 
            TypeSystem`PackageScope`Limited[
             
             TypeSystem`PackageScope`RowShape[<|
              "query" -> TypeSystem`PackageScope`UnknownShape[False], 
               "compilation" -> TypeSystem`PackageScope`UnknownShape[False], 
               "total" -> TypeSystem`PackageScope`UnknownShape[False]|>], 
             DirectedInfinity[1], 3, {All}]]], 2, 
          DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Assoc[
         TypeSystem`Atom[String], 
         TypeSystem`Struct[{"query", "compilation", "total"}, {
          TypeSystem`AnyType, TypeSystem`AnyType, TypeSystem`AnyType}], 2], 
       "Meta" -> <||>, "RowTarget" -> 20, "ColumnTarget" -> 10, "Shape" -> 
       TypeSystem`PackageScope`HeaderShape[<|{All, 
            TypeSystem`PackageScope`KeyDummy[1]} -> 1, {All, "query"} -> 
          1, {All, "compilation"} -> 1, {All, "total"} -> 1|>, 
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`ColumnShape[
           TypeSystem`PackageScope`KeyValueShape[
            TypeSystem`PackageScope`AtomShape[56.00000000000001], 
            TypeSystem`PackageScope`Limited[
             
             TypeSystem`PackageScope`RowShape[<|
              "query" -> TypeSystem`PackageScope`UnknownShape[False], 
               "compilation" -> TypeSystem`PackageScope`UnknownShape[False], 
               "total" -> TypeSystem`PackageScope`UnknownShape[False]|>], 
             DirectedInfinity[1], 3, {All}]]], 2, 
          DirectedInfinity[1], {}]], "Type" -> TypeSystem`Assoc[
         TypeSystem`Atom[String], 
         TypeSystem`Struct[{"query", "compilation", "total"}, {
          TypeSystem`AnyType, TypeSystem`AnyType, TypeSystem`AnyType}], 2], 
       "Path" -> {}, "DisplayedRowCount" -> 2, "DisplayedColumnCount" -> 3, 
       "DataRowCount" -> 2, "DataColumnCount" -> 3, "SortPaths" -> {}, 
       "SortDirections" -> {}, "HiddenItemsMap" -> Null, "UpdateType" -> 1|>, 
      TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
      TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
      TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
      TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
      TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
      DynamicModule[{
       TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
          Style[
           Grid[{{
              Item[
               Pane[
                Annotation[
                 Mouseover[
                  
                  Graphics[{}, ImageSize -> 6, BaselinePosition -> 
                   Scaled[-0.15]], 
                  Graphics[{
                    GrayLevel[0.6], 
                    
                    Polygon[{{2^Rational[-1, 2], -2^Rational[-1, 2]}, {
                    2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], -2^
                    Rational[-1, 2]}}]}, ImageSize -> 6, BaselinePosition -> 
                   Scaled[-0.15]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                  All, Keys}, "KeyDummy", True], "Mouse"], 
                ImageSize -> {{1, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
               GrayLevel[0.95], Alignment -> {Left, Baseline}], 
              Item[
               Pane[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["query", 
                    Style[
                    "query", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "query"}, 1]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                  All, "query"}, "ColumnHeader", True], "Mouse"], 
                ImageSize -> {{1, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
               GrayLevel[0.95], Alignment -> {Left, Baseline}], 
              Item[
               Pane[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["compilation", 
                    Style[
                    "compilation", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "compilation"}, 1]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                  All, "compilation"}, "ColumnHeader", True], "Mouse"], 
                ImageSize -> {{1, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
               GrayLevel[0.95], Alignment -> {Left, Baseline}], 
              Item[
               Pane[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["total", 
                    Style[
                    "total", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "total"}, 1]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                  All, "total"}, "ColumnHeader", True], "Mouse"], 
                ImageSize -> {{1, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
               GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
              Item[
               Pane[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["exact", 
                    Style[
                    "exact", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["exact"]}, 1]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["exact"]}, "RowHeader", False], "Mouse"], 
                ImageSize -> {{56.00000000000001, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
               GrayLevel[0.95], Alignment -> {Left, Baseline}], 
              Item[
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   RowBox[{"2", "+", 
                    RowBox[{"Ceiling", "[", 
                    RowBox[{
                    RowBox[{"34670.995851624786`", " ", "t"}], "+", 
                    RowBox[{"Log", "[", 
                    FractionBox["2.9552401942122875`", "\[Epsilon]"], "]"}]}],
                     "]"}]}], FontFamily -> Dynamic[
                    CurrentValue[{"StyleHints", "CodeFont"}]], 
                   ShowStringCharacters -> True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["exact"], 
                   Key["query"]}, "Item", False], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}], 
              Item[
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   TagBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"\"1.8517\"", "\[Times]", 
                    SuperscriptBox["10", "\"5\""]}], ShowStringCharacters -> 
                    False], 185171., AutoDelete -> True], 
                    ScientificForm[#, 5]& ], FontFamily -> Dynamic[
                    CurrentValue[{"StyleHints", "CodeFont"}]], 
                   ShowStringCharacters -> True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["exact"], 
                   Key["compilation"]}, "Item", False], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}], 
              Item[
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   RowBox[{"185171", " ", 
                    RowBox[{"(", 
                    RowBox[{"2", "+", 
                    RowBox[{"Ceiling", "[", 
                    RowBox[{
                    RowBox[{"34670.995851624786`", " ", "t"}], "+", 
                    RowBox[{"Log", "[", 
                    FractionBox["2.9552401942122875`", "\[Epsilon]"], "]"}]}],
                     "]"}]}], ")"}]}], FontFamily -> Dynamic[
                    CurrentValue[{"StyleHints", "CodeFont"}]], 
                   ShowStringCharacters -> True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["exact"], 
                   Key["total"]}, "Item", False], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}]}, {
              Item[
               Pane[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["bound", 
                    Style[
                    "bound", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["bound"]}, 1]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["bound"]}, "RowHeader", False], "Mouse"], 
                ImageSize -> {{56.00000000000001, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
               GrayLevel[0.95], Alignment -> {Left, Baseline}], 
              Item[
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   RowBox[{"2", "+", 
                    RowBox[{"Ceiling", "[", 
                    RowBox[{
                    RowBox[{"40971.821000473414`", " ", "t"}], "+", 
                    RowBox[{"Log", "[", 
                    FractionBox["2.9552401942122875`", "\[Epsilon]"], "]"}]}],
                     "]"}]}], FontFamily -> Dynamic[
                    CurrentValue[{"StyleHints", "CodeFont"}]], 
                   ShowStringCharacters -> True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["bound"], 
                   Key["query"]}, "Item", False], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}], 
              Item[
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   TagBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"\"1.8517\"", "\[Times]", 
                    SuperscriptBox["10", "\"5\""]}], ShowStringCharacters -> 
                    False], 185171., AutoDelete -> True], 
                    ScientificForm[#, 5]& ], FontFamily -> Dynamic[
                    CurrentValue[{"StyleHints", "CodeFont"}]], 
                   ShowStringCharacters -> True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["bound"], 
                   Key["compilation"]}, "Item", False], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}], 
              Item[
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   RowBox[{"185171", " ", 
                    RowBox[{"(", 
                    RowBox[{"2", "+", 
                    RowBox[{"Ceiling", "[", 
                    RowBox[{
                    RowBox[{"40971.821000473414`", " ", "t"}], "+", 
                    RowBox[{"Log", "[", 
                    FractionBox["2.9552401942122875`", "\[Epsilon]"], "]"}]}],
                     "]"}]}], ")"}]}], FontFamily -> Dynamic[
                    CurrentValue[{"StyleHints", "CodeFont"}]], 
                   ShowStringCharacters -> True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["bound"], 
                   Key["total"]}, "Item", False], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}]}}, 
            BaseStyle -> {
             ContextMenu -> 
              Dynamic[TypeSystem`NestedGrid`PackagePrivate`$\
contextMenuTrigger; 
                Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                  TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                  TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger, TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu,
                   True, TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger = 
                   TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                  TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                   Block[{TypeSystem`NestedGrid`PackagePrivate`$\
globalScrollPos = {TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                    
                    With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
              "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, 
            Dividers -> All, FrameStyle -> GrayLevel[0.7490196078431373], 
            Spacings -> {0, 0}, Alignment -> Left, 
            BaseStyle -> {
             FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
              Plain}], LineBreakWithin -> False, ContextMenu -> {}, 
           NumberMarks -> False, ShowAutoStyles -> False]], 
        TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
       Dynamic[
        TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
        TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
           Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
           
           Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
             TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
             TypeSystem`NestedGrid`PackagePrivate`datasetData[
              TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
               FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
               TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
               TypeSystem`NestedGrid`PackagePrivate`renderGrid[
               TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
               TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
              Not[
               FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
              TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
              TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
         TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
         TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
         TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
           FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
           TypeSystem`SparseGrid[
            TypeSystem`H["(data no longer present)"]], 
           TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
        TrackedSymbols :> {
         TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
          TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
       DynamicModuleValues :> {}], 
      TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
       TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
        TypeSystem`PackageScope`SubViewPathbar[
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
         TypeSystem`NestedGrid`PackagePrivate`updateState[
         TypeSystem`NestedGrid`PackagePrivate`$state$$, 
          TypeSystem`NestedGrid`PackagePrivate`$path$$, 
          TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
          TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
       TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
      TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
       Framed[
        Dynamic[
         Replace[
         TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
          TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
             TypeSystem`NestedGrid`PackagePrivate`localHold[
             TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
             Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
             TypeSystem`NestedGrid`PackagePrivate`localHold[
             TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
              Blank[]], 
             Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
              Blank[]], 
             Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
              Blank[]]] :> (
            Increment[
             TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
            TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
             TypeSystem`NestedGrid`PackagePrivate`path$; 
            TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
             TypeSystem`NestedGrid`PackagePrivate`pathType$; 
            TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
             TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
            TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
             TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
            TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
             TypeSystem`NestedGrid`PackagePrivate`path$, 
              TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
           Spacer[10], Blank[] :> Spacer[10]}], 
         TrackedSymbols :> {
          TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], 
        FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
        Top, ImageSize -> {Automatic, 15}], FontSize -> 1], 
      TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
      DynamicWrapperBox[
       DynamicBox[ToBoxes[
         Dataset`DatasetContent[
         2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
          "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], 
          "State" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], 
          "VPos" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], 
          "HPos" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], 
          "TopBar" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], 
          "BottomBar" -> 
          Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
          Hold[
            TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
        ImageSizeCache->{797., {51.3544921875, 56.6455078125}},
        TrackedSymbols:>{
         TypeSystem`NestedGrid`PackagePrivate`$state$$, 
          TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
       MouseAnnotation[],
       ImageSizeCache->{797., {51.3544921875, 56.6455078125}}],
      BaseStyle->{LineBreakWithin -> False},
      DynamicModuleValues:>{},
      Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
       CreateUUID[]),
      UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
     Deploy,
     DefaultBaseStyle->"Deploy"],
    Dataset`InterpretDataset[1],
    Editable->False,
    SelectWithContents->True,
    Selectable->False]}],
  SequenceForm["Time Evolution Cost:", 
   Dataset[<|
    "exact" -> <|
      "query" -> 2 + 
        Ceiling[34670.995851624786` $CellContext`t + 
          Log[2.9552401942122875`/$CellContext`\[Epsilon]]], "compilation" -> 
       ScientificForm[185171., 5], "total" -> 
       185171 (2 + 
         Ceiling[34670.995851624786` $CellContext`t + 
           Log[2.9552401942122875`/$CellContext`\[Epsilon]]])|>, 
     "bound" -> <|
      "query" -> 2 + 
        Ceiling[40971.821000473414` $CellContext`t + 
          Log[2.9552401942122875`/$CellContext`\[Epsilon]]], "compilation" -> 
       ScientificForm[185171., 5], "total" -> 
       185171 (2 + 
         Ceiling[40971.821000473414` $CellContext`t + 
           Log[2.9552401942122875`/$CellContext`\[Epsilon]]])|>|>, 
    TypeSystem`Assoc[
     TypeSystem`Atom[String], 
     TypeSystem`Struct[{"query", "compilation", "total"}, {
      TypeSystem`AnyType, TypeSystem`AnyType, TypeSystem`AnyType}], 2], <||>]],
  Editable->False]], "Print",
 CellChangeTimes->{3.962646870100178*^9, 3.962800486339282*^9, 
  3.962989231338521*^9, 3.962989474948533*^9, 3.9633253303912477`*^9, 
  3.963325531856776*^9, 3.963325719713619*^9},
 CellLabel->
  "During evaluation of \
In[16]:=",ExpressionUUID->"15ab13cd-2430-4645-a061-df6fc89f1f50"]
}, Open  ]]
}, Open  ]],

Cell[TextData[{
 "First, the \[OpenCurlyDoubleQuote]particle count\[CloseCurlyDoubleQuote] \
shows that we are considering 32 electrons (5 x 1 + 3 x 1 + 7 x 3 + 1 x 3 = \
32), 8 ions (1 + 1 + 3 + 3 = 8), and 40 total charged particles (32 + 8 = \
40).\n\nNext, we can see the \[OpenCurlyDoubleQuote]rescaling factors\
\[CloseCurlyDoubleQuote] for each part of the Hamiltonian (Tel and Tion are \
the kinetic terms for electrons and ions, Vel and Vion are the Coulomb \
interaction terms for electrons and ions, Loc and NL are the local and \
non-local terms). In the right table, the first row shows the exact rescaling \
factors for each terms. The second row shows the approximated rescaling \
factor numbers using theoretical bound we derived in the paper (see Appendix \
D). The third row shows the difference between the two. ",
 StyleBox["(@Karthik maybe you can add a little more setences explaining the \
left table?)\n\n",
  FontWeight->"Bold",
  FontSlant->"Italic",
  FontVariations->{"Underline"->True}],
 "The \[OpenCurlyDoubleQuote]Compilation Cost\[CloseCurlyDoubleQuote] shows \
the required number of Toffoli gates for each terms to complete a single \
block encoding of the Hamiltonian, with a total sum at the end (in this case \
185171 Toffoli gates)\n\nNext we have the logical qubit cost. Note that this \
is the system qubit numbers required to set up all the wavefunction \
encodings. We will also require some additional ancilla qubits that scales at \
most linearly to the number of system qubits. ",
 StyleBox["(Need to check this statement with @Sam)\n\n",
  FontWeight->"Bold",
  FontSlant->"Italic",
  FontVariations->{"Underline"->True}],
 "Lastly, we have the exact and theoretically bounded time evolution cost. \
The \[OpenCurlyDoubleQuote]query\[CloseCurlyDoubleQuote] column shows the \
number of walk operators we need to perform, essentially the number of block \
encodings, as a function of t and \[Epsilon]. The \
\[OpenCurlyDoubleQuote]compilation\[CloseCurlyDoubleQuote] column shows the \
Toffoli gate cost for one single block encoding. Multiplying them together, \
we obtain the \[OpenCurlyDoubleQuote]total\[CloseCurlyDoubleQuote] Toffoli \
gate costs at the 3rd column.\n\n"
}], "Text",
 CellChangeTimes->{{3.963402931320961*^9, 3.963403098444588*^9}, {
  3.963403203707141*^9, 3.96340320511495*^9}, {3.963403527421728*^9, 
  3.963403580467669*^9}, {3.963403644631979*^9, 3.963403708314402*^9}, {
  3.96340382469312*^9, 3.963403918541669*^9}, {3.963403984631577*^9, 
  3.963404104997596*^9}, {3.963404155606146*^9, 3.96340422754868*^9}, {
  3.963404387134117*^9, 3.963404592241539*^9}, {3.9634048341168623`*^9, 
  3.963404857118403*^9}, {3.963405244215431*^9, 
  3.963405285858595*^9}},ExpressionUUID->"ccc46f65-4a4a-4933-8ab3-\
4919abd6ca78"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Instance 2: DMTM Small", "Subsection",
 CellChangeTimes->{{3.946122056249242*^9, 3.94612205901908*^9}, {
   3.9461221675446*^9, 3.946122237927978*^9}, {3.9461223745665283`*^9, 
   3.94612256081662*^9}, {3.946124542921606*^9, 3.946124550073524*^9}, {
   3.946125969271934*^9, 3.946125995186101*^9}, 3.9461260258636*^9, {
   3.946126116624103*^9, 3.946126142297975*^9}, {3.946128690954178*^9, 
   3.946128764645544*^9}, {3.946166852196194*^9, 3.946167001273471*^9}, {
   3.946167036517096*^9, 3.946167086297594*^9}, {3.946490055591479*^9, 
   3.9464901287549057`*^9}, {3.946492902799545*^9, 3.946492926667141*^9}, {
   3.9464931480328207`*^9, 3.946493148492016*^9}, {3.94649320360962*^9, 
   3.946493328090327*^9}, 3.94649336892379*^9, {3.94649446982141*^9, 
   3.946494469878873*^9}, 3.946494576213092*^9, {3.946494995955134*^9, 
   3.946494996053494*^9}, {3.946495041072632*^9, 3.946495041173824*^9}, {
   3.9464951594898763`*^9, 3.946495181022932*^9}, {3.946497980355174*^9, 
   3.946497981240966*^9}, {3.94649815633422*^9, 3.946498163453021*^9}, {
   3.94649824824883*^9, 3.9464982663052588`*^9}, {3.946499433282394*^9, 
   3.946499564280864*^9}, {3.946501865983119*^9, 3.946501875250986*^9}, 
   3.946501992008497*^9, {3.946503639212558*^9, 3.946503639624648*^9}, {
   3.9465643107086763`*^9, 3.94656432284638*^9}, {3.946564529145935*^9, 
   3.946564559829351*^9}, 3.946564832060857*^9, {3.946565176755971*^9, 
   3.946565202241859*^9}, {3.946565313675543*^9, 3.946565370593363*^9}, {
   3.9467288407929296`*^9, 3.946728840877693*^9}, {3.947951264999652*^9, 
   3.947951333281031*^9}, {3.947952104631193*^9, 3.947952112701625*^9}, {
   3.962621368637846*^9, 3.962621369590816*^9}, {3.962621491030655*^9, 
   3.962621499458574*^9}, {3.962635550807879*^9, 3.96263558334223*^9}, {
   3.963405879234735*^9, 3.963405900824876*^9}, {3.9634062078511066`*^9, 
   3.9634062082052794`*^9}},ExpressionUUID->"f8ec3eae-112b-482d-a58f-\
ed24da7fef92"],

Cell[TextData[{
 "Now we repeat the same process as we have done for the ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["NH", "3"], TraditionalForm]],ExpressionUUID->
  "1c594e84-8a2c-42e4-9015-fef619603a03"],
 Cell[BoxData[
  FormBox[
   SubscriptBox["BF", "3"], TraditionalForm]],ExpressionUUID->
  "c9915a6e-f77f-4241-b982-4f81aa632314"],
 " instance:"
}], "Text",
 CellChangeTimes->{{3.963406178019058*^9, 
  3.9634062256564217`*^9}},ExpressionUUID->"a7da4110-56d3-44c3-92c1-\
85f99c24b8ae"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "Construct", " ", "Basis", " ", "and", " ", "Input", " ", "for", " ", 
     RowBox[{"Cell", ":", " ", 
      RowBox[{"17", "x17x17", " ", 
       RowBox[{
        SuperscriptBox["Angstrom", "3"], ".", " ", "Cutoff"}]}], ":", " ", 
      "50"}]}], ",", "450", ",", 
    RowBox[{"1", " ", "Ha"}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"Instance2Cell", "=", 
     RowBox[{"SimulationCell`aVecsRectCuboid", "[", 
      RowBox[{"SimulationCell`convertAngstromtoAUCellSpec", "[", 
       RowBox[{"{", 
        RowBox[{"17", ",", "17", ",", "17"}], "}"}], "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Instance2Basis", "=", 
     RowBox[{"EchoTiming", "@", 
      RowBox[{"BasisGeneration`constructBasis", "[", 
       RowBox[{"Instance2Cell", ",", 
        RowBox[{"{", 
         RowBox[{"50", ",", "450", ",", "1"}], "}"}], ",", "True", ",", 
        "True"}], "]"}]}]}], ";"}], " ", "\[IndentingNewLine]", 
   RowBox[{"Instance2Input", "=", 
    RowBox[{"CostAnalysis`constructInput", "[", 
     RowBox[{
      RowBox[{"<|", 
       RowBox[{
        RowBox[{"\"\<N5\>\"", "->", "3"}], ",", 
        RowBox[{"\"\<Pd18\>\"", "->", "1"}], " ", ",", 
        RowBox[{"\"\<C4\>\"", "->", "1"}], ",", 
        RowBox[{"\"\<O6\>\"", "->", "1"}], ",", 
        RowBox[{"\"\<H1\>\"", "->", "10"}]}], "|>"}], ",", "Instance2Basis"}],
      "]"}]}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
    "Save", " ", "basis", " ", "in", " ", "present", " ", "current", " ", 
     "notebook", " ", "directory", " ", "and", " ", "inspect", " ", "basis"}],
     " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"EchoTiming", "@", 
     RowBox[{"DumpSave", "[", 
      RowBox[{
       RowBox[{"FileNameJoin", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"NotebookDirectory", "[", "]"}], ",", 
          "\"\<Instance2Basis.mx\>\""}], "}"}], "]"}], ",", 
       "Instance2Basis"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
   "BasisGeneration`viewBasisInfo", "[", "Instance2Basis", "]"}]}]}]], "Input",\

 CellChangeTimes->{{3.962635600706689*^9, 3.962635692245409*^9}, 
   3.962636092402772*^9, 3.96263708549627*^9, {3.962646378504951*^9, 
   3.962646383485881*^9}, {3.963405991765571*^9, 3.963405992451954*^9}, 
   3.963406236334569*^9},ExpressionUUID->"3cbb3006-161b-46b4-af43-\
66970030e72f"],

Cell[BoxData["352.891619`"], "EchoTiming",
 CellChangeTimes->{
  3.962989901582923*^9},ExpressionUUID->"6a0f4a61-2614-417d-a68b-\
2634ab2d4971"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"N5\"\>", "\[Rule]", "3"}], ",", 
     RowBox[{"\<\"Pd18\"\>", "\[Rule]", "1"}], ",", 
     RowBox[{"\<\"C4\"\>", "\[Rule]", "1"}], ",", 
     RowBox[{"\<\"O6\"\>", "\[Rule]", "1"}], ",", 
     RowBox[{"\<\"H1\"\>", "\[Rule]", "10"}]}], "\[RightAssociation]"}], ",", 
   
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"Kmax\"\>", "\[Rule]", "21.338816049814334`"}], ",", 
     RowBox[{"\<\"Qmax\"\>", "\[Rule]", "42.67763209962867`"}], ",", 
     RowBox[{"\<\"Kbarmax\"\>", "\[Rule]", "86.37139829686753`"}], ",", 
     RowBox[{"\<\"Qbarmax\"\>", "\[Rule]", "172.74279659373505`"}], ",", 
     RowBox[{"\<\"Kbartruncmax\"\>", "\[Rule]", "2.7096909269605503`"}], ",", 
     
     RowBox[{"\<\"Qbartruncmax\"\>", "\[Rule]", "5.4193818539211005`"}]}], 
    "\[RightAssociation]"}]}], "}"}]], "Output",
 CellChangeTimes->{3.96264164873698*^9, 3.96264725658965*^9, 
  3.962800879945011*^9, 3.962989262251158*^9, 3.962989901587326*^9},
 CellLabel->"Out[18]=",ExpressionUUID->"74c607d0-76ea-4498-9053-bf73b4aab22c"],

Cell[CellGroupData[{

Cell[BoxData["1.569216`"], "EchoTiming",
 CellChangeTimes->{
  3.962989903156268*^9},ExpressionUUID->"96c3f9bf-b72d-44f4-b8c1-\
9eda2faf11d9"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"nqubits\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"7", ",", "7", ",", "7"}], "}"}]}], ",", 
   RowBox[{"\<\"nqubits\[CapitalLambda]bar\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"9", ",", "9", ",", "9"}], "}"}]}], ",", 
   RowBox[{"\<\"pmax\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"63", ",", "63", ",", "63"}], "}"}]}], ",", 
   RowBox[{"\<\"pmax\[CapitalLambda]bar\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"255", ",", "255", ",", "255"}], "}"}]}], ",", 
   RowBox[{"\<\"pmax\[CapitalLambda]bartrunc\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"8", ",", "8", ",", "8"}], "}"}]}], ",", 
   RowBox[{"\<\"cutoff\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "12.319971190548213`", ",", "12.319971190548213`", ",", 
        "12.319971190548213`"}], "}"}], ",", "21.338816049814334`", ",", 
      "227.6725352039069`", ",", "75.89084506796897`"}], "}"}]}], ",", 
   RowBox[{"\<\"cutoff\[CapitalLambda]bar\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "49.866550056980856`", ",", "49.866550056980856`", ",", 
        "49.866550056980856`"}], "}"}], ",", "86.37139829686753`", ",", 
      "3730.009221878065`", ",", "1243.3364072926886`"}], "}"}]}], ",", 
   RowBox[{"\<\"cutoff\[CapitalLambda]bartrunc\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "1.5644407861013603`", ",", "1.5644407861013603`", ",", 
        "1.5644407861013603`"}], "}"}], ",", "2.7096909269605503`", ",", 
      "3.671212459826163`", ",", "1.223737486608721`"}], "}"}]}], ",", 
   RowBox[{"\<\"Kmax\"\>", "\[Rule]", "21.338816049814334`"}], ",", 
   RowBox[{"\<\"Qmax\"\>", "\[Rule]", "42.67763209962867`"}], ",", 
   RowBox[{"\<\"Kbarmax\"\>", "\[Rule]", "86.37139829686753`"}], ",", 
   RowBox[{"\<\"Qbarmax\"\>", "\[Rule]", "172.74279659373505`"}], ",", 
   RowBox[{"\<\"Kbartruncmax\"\>", "\[Rule]", "2.7096909269605503`"}], ",", 
   RowBox[{"\<\"Qbartruncmax\"\>", "\[Rule]", "5.4193818539211005`"}], ",", 
   RowBox[{"\<\"maxCheck\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"True", ",", "True"}], "}"}]}], ",", 
   RowBox[{"\<\"aVecs\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"32.129999999999995`", ",", "0.`", ",", "0.`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.`", ",", "32.129999999999995`", ",", "0.`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.`", ",", "0.`", ",", "32.129999999999995`"}], "}"}]}], 
     "}"}]}], ",", 
   RowBox[{"\<\"bVecs\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0.19555509826267004`", ",", "0.`", ",", "0.`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.`", ",", "0.19555509826267004`", ",", "0.`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.`", ",", "0.`", ",", "0.19555509826267004`"}], "}"}]}], 
     "}"}]}], ",", 
   RowBox[{"\<\"basisSize\"\>", "\[Rule]", "2048383"}], ",", 
   RowBox[{"\<\"basistruncSize\"\>", "\[Rule]", "4912"}]}], 
  "\[RightAssociation]"}]], "Print",
 CellChangeTimes->{3.962641648740757*^9, 3.962647258352184*^9, 
  3.9628008815612507`*^9, 3.962989263785693*^9, 3.96298990315874*^9},
 CellLabel->
  "During evaluation of \
In[16]:=",ExpressionUUID->"00997bbe-b16a-42de-a594-c4d3bc8ed5b0"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Run", " ", "QRE"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"Instance2Result", "=", 
     RowBox[{"EchoTiming", "@", 
      RowBox[{"CostAnalysis`fullBlockEncodingCost", "[", 
       RowBox[{"Instance2Input", ",", "Instance2Basis", ",", "True"}], 
       "]"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"EchoTiming", "@", 
     RowBox[{"DumpSave", "[", 
      RowBox[{
       RowBox[{"FileNameJoin", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"NotebookDirectory", "[", "]"}], ",", 
          "\"\<Instance2Result.mx\>\""}], "}"}], "]"}], ",", 
       "Instance2Result"}], "]"}]}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.962635600706689*^9, 3.962635710998269*^9}, {
  3.962644122193857*^9, 3.962644122329007*^9}, {3.962646406356275*^9, 
  3.962646415160009*^9}},
 CellLabel->"In[21]:=",ExpressionUUID->"fe25159d-e858-4f94-8eef-91e262f450ce"],

Cell[CellGroupData[{

Cell[BoxData["599.647061`"], "EchoTiming",
 CellChangeTimes->{
  3.962990502848362*^9},ExpressionUUID->"872eb089-1cf8-4712-8ac9-\
42dfb72a8bec"],

Cell[BoxData["0.010562`"], "EchoTiming",
 CellChangeTimes->{
  3.962990502861484*^9},ExpressionUUID->"5304ecdf-c5c6-4b8a-be8c-\
4bf45d6f8902"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"View", " ", "Results"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"CostAnalysis`viewAllResults", "[", 
   RowBox[{"Instance2Result", ",", "t", ",", "\[Epsilon]"}], "]"}], 
  " "}]], "Input",
 CellChangeTimes->{{3.946122056249242*^9, 3.94612205901908*^9}, {
   3.9461221675446*^9, 3.946122237927978*^9}, {3.9461223745665283`*^9, 
   3.94612256081662*^9}, {3.946124542921606*^9, 3.946124550073524*^9}, {
   3.946125969271934*^9, 3.946125995186101*^9}, 3.9461260258636*^9, {
   3.946126116624103*^9, 3.946126142297975*^9}, {3.946128690954178*^9, 
   3.946128764645544*^9}, {3.946166852196194*^9, 3.946167001273471*^9}, {
   3.946167036517096*^9, 3.946167086297594*^9}, {3.946490055591479*^9, 
   3.9464901287549057`*^9}, {3.946492902799545*^9, 3.946492926667141*^9}, {
   3.9464931480328207`*^9, 3.946493148492016*^9}, {3.94649320360962*^9, 
   3.946493328090327*^9}, 3.94649336892379*^9, {3.94649446982141*^9, 
   3.946494469878873*^9}, 3.946494576213092*^9, {3.946494995955134*^9, 
   3.946494996053494*^9}, {3.946495041072632*^9, 3.946495041173824*^9}, {
   3.9464951594898763`*^9, 3.946495181022932*^9}, {3.946497980355174*^9, 
   3.946497981240966*^9}, {3.94649815633422*^9, 3.946498163453021*^9}, {
   3.94649824824883*^9, 3.9464982663052588`*^9}, {3.946499433282394*^9, 
   3.946499564280864*^9}, {3.946501865983119*^9, 3.946501875250986*^9}, 
   3.946501992008497*^9, {3.946503639212558*^9, 3.946503639624648*^9}, {
   3.9465643107086763`*^9, 3.94656432284638*^9}, {3.946564529145935*^9, 
   3.946564559829351*^9}, 3.946564832060857*^9, {3.946565176755971*^9, 
   3.946565202241859*^9}, {3.946565313675543*^9, 3.946565370593363*^9}, {
   3.9467288407929296`*^9, 3.946728840877693*^9}, {3.947951264999652*^9, 
   3.947951333281031*^9}, 3.947952104631193*^9, {3.9626211958369913`*^9, 
   3.962621209861579*^9}, {3.962621386821911*^9, 3.9626214379074*^9}, {
   3.962621473145152*^9, 3.962621473566862*^9}, {3.962621507823801*^9, 
   3.962621518402524*^9}, {3.962621563952813*^9, 3.962621566087644*^9}, {
   3.9626216145155153`*^9, 3.962621652237782*^9}, 3.962621790820737*^9, {
   3.962635721584044*^9, 3.962635723756446*^9}, {3.962636834521516*^9, 
   3.962636834947459*^9}, {3.962646421729789*^9, 3.962646426282873*^9}, {
   3.962722641393477*^9, 3.962722642317967*^9}},
 CellLabel->"In[23]:=",ExpressionUUID->"fb43b075-5ad6-4764-8669-f41022ccddc4"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Particle Count:\"\>", "\[InvisibleSpace]", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"\[Eta]el\"\>", "\[Rule]", "53"}], ",", 
     RowBox[{"\<\"\[Eta]ion\"\>", "\[Rule]", "16"}], ",", 
     RowBox[{"\<\"\[Eta]\"\>", "\[Rule]", "69"}]}], "\[RightAssociation]"}]}],
  
  SequenceForm[
  "Particle Count:", <|"\[Eta]el" -> 53, "\[Eta]ion" -> 16, "\[Eta]" -> 69|>],
  
  Editable->False]], "Print",
 CellChangeTimes->{3.962643660691084*^9, 3.962648029413474*^9, 
  3.962801657193111*^9, 3.962990502890081*^9},
 CellLabel->
  "During evaluation of \
In[23]:=",ExpressionUUID->"01239dcb-ab5c-46eb-a05e-ce3b7b4077cf"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Rescaling Factors:\"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
     TagBox[
      TagBox[
       DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
        "InitialData" -> {<|"Ion" -> Row[{"N5", 
               Style["N5", 
                GrayLevel[0.5]]}, "\n"], "Tel" -> Row[{227.6725352039069, 
               Style[227.6725352039069, 
                GrayLevel[0.5]]}, "\n"], "Tion" -> Row[{3730.009221878065, 
               Style[3730.009221878065, 
                GrayLevel[0.5]]}, "\n"], "Vel" -> Row[{9.573304442969683, 
               Style[13.584712216226492`, 
                GrayLevel[0.5]]}, "\n"], "Vion" -> Row[{1.2105543930460256`, 
               Style[1.7250428211081261`, 
                GrayLevel[0.5]]}, "\n"], "Loc" -> Row[{25.588971989553414`, 
               Style[26.030506422645928`, 
                GrayLevel[0.5]]}, "\n"], "NL" -> Row[{13.551668496241454`, 
               Style[13.55224300000034, 
                GrayLevel[0.5]]}, "\n"]|>, <|"Ion" -> Row[{"Pd18", 
               Style["Pd18", 
                GrayLevel[0.5]]}, "\n"], "Tel" -> Row[{227.6725352039069, 
               Style[227.6725352039069, 
                GrayLevel[0.5]]}, "\n"], "Tion" -> Row[{3730.009221878065, 
               Style[3730.009221878065, 
                GrayLevel[0.5]]}, "\n"], "Vel" -> Row[{9.573304442969683, 
               Style[13.584712216226492`, 
                GrayLevel[0.5]]}, "\n"], "Vion" -> Row[{1.2105543930460256`, 
               Style[1.7250428211081261`, 
                GrayLevel[0.5]]}, "\n"], "Loc" -> Row[{50.004449780881906`, 
               Style[51.593927279150186`, 
                GrayLevel[0.5]]}, "\n"], "NL" -> Row[{34.16549646027537, 
               Style[33.87906539367532, 
                GrayLevel[0.5]]}, "\n"]|>, <|"Ion" -> Row[{"C4", 
               Style["C4", 
                GrayLevel[0.5]]}, "\n"], "Tel" -> Row[{227.6725352039069, 
               Style[227.6725352039069, 
                GrayLevel[0.5]]}, "\n"], "Tion" -> Row[{3730.009221878065, 
               Style[3730.009221878065, 
                GrayLevel[0.5]]}, "\n"], "Vel" -> Row[{9.573304442969683, 
               Style[13.584712216226492`, 
                GrayLevel[0.5]]}, "\n"], "Vion" -> Row[{1.2105543930460256`, 
               Style[1.7250428211081261`, 
                GrayLevel[0.5]]}, "\n"], "Loc" -> Row[{17.309804066438343`, 
               Style[17.66303638202409, 
                GrayLevel[0.5]]}, "\n"], "NL" -> Row[{9.522478211507899, 
               Style[9.52284200000024, 
                GrayLevel[0.5]]}, "\n"]|>, <|"Ion" -> Row[{"O6", 
               Style["O6", 
                GrayLevel[0.5]]}, "\n"], "Tel" -> Row[{227.6725352039069, 
               Style[227.6725352039069, 
                GrayLevel[0.5]]}, "\n"], "Tion" -> Row[{3730.009221878065, 
               Style[3730.009221878065, 
                GrayLevel[0.5]]}, "\n"], "Vel" -> Row[{9.573304442969683, 
               Style[13.584712216226492`, 
                GrayLevel[0.5]]}, "\n"], "Vion" -> Row[{1.2105543930460256`, 
               Style[1.7250428211081261`, 
                GrayLevel[0.5]]}, "\n"], "Loc" -> Row[{35.38368310748223, 
               Style[35.913522230728375`, 
                GrayLevel[0.5]]}, "\n"], "NL" -> Row[{18.26127898623506, 
               Style[18.266917000000458`, 
                GrayLevel[0.5]]}, "\n"]|>, <|"Ion" -> Row[{"H1", 
               Style["H1", 
                GrayLevel[0.5]]}, "\n"], "Tel" -> Row[{227.6725352039069, 
               Style[227.6725352039069, 
                GrayLevel[0.5]]}, "\n"], "Tion" -> Row[{3730.009221878065, 
               Style[3730.009221878065, 
                GrayLevel[0.5]]}, "\n"], "Vel" -> Row[{9.573304442969683, 
               Style[13.584712216226492`, 
                GrayLevel[0.5]]}, "\n"], "Vion" -> Row[{1.2105543930460256`, 
               Style[1.7250428211081261`, 
                GrayLevel[0.5]]}, "\n"], "Loc" -> Row[{8.081301753752047, 
               Style[8.169659804014326, 
                GrayLevel[0.5]]}, "\n"], "NL" -> Row[{0., 
               Style[0., 
                GrayLevel[0.5]]}, "\n"]|>}, "AllowEmbedding" -> True, 
         "InitialShape" -> 
         TypeSystem`PackageScope`HeaderShape[<|{All, "Ion"} -> 
            1, {All, "Tel"} -> 1, {All, "Tion"} -> 1, {All, "Vel"} -> 
            1, {All, "Vion"} -> 1, {All, "Loc"} -> 1, {All, "NL"} -> 1|>, 
           TypeSystem`PackageScope`Limited[
            TypeSystem`PackageScope`ColumnShape[
             TypeSystem`PackageScope`Limited[
              
              TypeSystem`PackageScope`RowShape[<|
               "Ion" -> TypeSystem`PackageScope`UnknownShape[False], "Tel" -> 
                TypeSystem`PackageScope`UnknownShape[False], "Tion" -> 
                TypeSystem`PackageScope`UnknownShape[False], "Vel" -> 
                TypeSystem`PackageScope`UnknownShape[False], "Vion" -> 
                TypeSystem`PackageScope`UnknownShape[False], "Loc" -> 
                TypeSystem`PackageScope`UnknownShape[False], "NL" -> 
                TypeSystem`PackageScope`UnknownShape[False]|>], 
              DirectedInfinity[1], 7, {All}]], 5, 
            DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Vector[
           
           TypeSystem`Struct[{
            "Ion", "Tel", "Tion", "Vel", "Vion", "Loc", "NL"}, {
            TypeSystem`AnyType, TypeSystem`AnyType, TypeSystem`AnyType, 
             TypeSystem`AnyType, TypeSystem`AnyType, TypeSystem`AnyType, 
             TypeSystem`AnyType}], 5], "Meta" -> <||>, "RowTarget" -> 20, 
         "ColumnTarget" -> 10, "Shape" -> 
         TypeSystem`PackageScope`HeaderShape[<|{All, "Ion"} -> 
            1, {All, "Tel"} -> 1, {All, "Tion"} -> 1, {All, "Vel"} -> 
            1, {All, "Vion"} -> 1, {All, "Loc"} -> 1, {All, "NL"} -> 1|>, 
           TypeSystem`PackageScope`Limited[
            TypeSystem`PackageScope`ColumnShape[
             TypeSystem`PackageScope`Limited[
              
              TypeSystem`PackageScope`RowShape[<|
               "Ion" -> TypeSystem`PackageScope`UnknownShape[False], "Tel" -> 
                TypeSystem`PackageScope`UnknownShape[False], "Tion" -> 
                TypeSystem`PackageScope`UnknownShape[False], "Vel" -> 
                TypeSystem`PackageScope`UnknownShape[False], "Vion" -> 
                TypeSystem`PackageScope`UnknownShape[False], "Loc" -> 
                TypeSystem`PackageScope`UnknownShape[False], "NL" -> 
                TypeSystem`PackageScope`UnknownShape[False]|>], 
              DirectedInfinity[1], 7, {All}]], 5, 
            DirectedInfinity[1], {}]], "Type" -> TypeSystem`Vector[
           
           TypeSystem`Struct[{
            "Ion", "Tel", "Tion", "Vel", "Vion", "Loc", "NL"}, {
            TypeSystem`AnyType, TypeSystem`AnyType, TypeSystem`AnyType, 
             TypeSystem`AnyType, TypeSystem`AnyType, TypeSystem`AnyType, 
             TypeSystem`AnyType}], 5], "Path" -> {}, "DisplayedRowCount" -> 5,
          "DisplayedColumnCount" -> 7, "DataRowCount" -> 5, "DataColumnCount" -> 
         7, "SortPaths" -> {}, "SortDirections" -> {}, "HiddenItemsMap" -> 
         Null, "UpdateType" -> 1|>, 
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
        DynamicModule[{
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
            Style[
             Grid[{{
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["Ion", 
                    Style[
                    "Ion", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "Ion"}, 1]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "Ion"}, "ColumnHeader", True], "Mouse"], 
                  ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["Tel", 
                    Style[
                    "Tel", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "Tel"}, 1]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "Tel"}, "ColumnHeader", True], "Mouse"], 
                  ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["Tion", 
                    Style[
                    "Tion", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "Tion"}, 1]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "Tion"}, "ColumnHeader", True], "Mouse"], 
                  ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["Vel", 
                    Style[
                    "Vel", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "Vel"}, 1]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "Vel"}, "ColumnHeader", True], "Mouse"], 
                  ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["Vion", 
                    Style[
                    "Vion", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "Vion"}, 1]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "Vion"}, "ColumnHeader", True], "Mouse"], 
                  ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["Loc", 
                    Style[
                    "Loc", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "Loc"}, 1]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "Loc"}, "ColumnHeader", True], "Mouse"], 
                  ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["NL", 
                    Style[
                    "NL", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "NL"}, 1]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "NL"}, "ColumnHeader", True], "Mouse"], 
                  ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
                Item[
                 Pane[
                  Annotation[
                   Row[{"N5", 
                    Style["N5", 
                    GrayLevel[0.5]]}, "\n"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                    Key["Ion"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   Row[{227.6725352039069, 
                    Style[227.6725352039069, 
                    GrayLevel[0.5]]}, "\n"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                    Key["Tel"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   Row[{3730.009221878065, 
                    Style[3730.009221878065, 
                    GrayLevel[0.5]]}, "\n"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                    Key["Tion"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   Row[{9.573304442969683, 
                    Style[13.584712216226492`, 
                    GrayLevel[0.5]]}, "\n"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                    Key["Vel"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   Row[{1.2105543930460256`, 
                    Style[1.7250428211081261`, 
                    GrayLevel[0.5]]}, "\n"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                    Key["Vion"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   Row[{25.588971989553414`, 
                    Style[26.030506422645928`, 
                    GrayLevel[0.5]]}, "\n"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                    Key["Loc"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   Row[{13.551668496241454`, 
                    Style[13.55224300000034, 
                    GrayLevel[0.5]]}, "\n"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                    Key["NL"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   Row[{"Pd18", 
                    Style["Pd18", 
                    GrayLevel[0.5]]}, "\n"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                    Key["Ion"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   Row[{227.6725352039069, 
                    Style[227.6725352039069, 
                    GrayLevel[0.5]]}, "\n"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                    Key["Tel"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   Row[{3730.009221878065, 
                    Style[3730.009221878065, 
                    GrayLevel[0.5]]}, "\n"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                    Key["Tion"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   Row[{9.573304442969683, 
                    Style[13.584712216226492`, 
                    GrayLevel[0.5]]}, "\n"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                    Key["Vel"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   Row[{1.2105543930460256`, 
                    Style[1.7250428211081261`, 
                    GrayLevel[0.5]]}, "\n"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                    Key["Vion"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   Row[{50.004449780881906`, 
                    Style[51.593927279150186`, 
                    GrayLevel[0.5]]}, "\n"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                    Key["Loc"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   Row[{34.16549646027537, 
                    Style[33.87906539367532, 
                    GrayLevel[0.5]]}, "\n"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                    Key["NL"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   Row[{"C4", 
                    Style["C4", 
                    GrayLevel[0.5]]}, "\n"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                    Key["Ion"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   Row[{227.6725352039069, 
                    Style[227.6725352039069, 
                    GrayLevel[0.5]]}, "\n"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                    Key["Tel"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   Row[{3730.009221878065, 
                    Style[3730.009221878065, 
                    GrayLevel[0.5]]}, "\n"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                    Key["Tion"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   Row[{9.573304442969683, 
                    Style[13.584712216226492`, 
                    GrayLevel[0.5]]}, "\n"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                    Key["Vel"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   Row[{1.2105543930460256`, 
                    Style[1.7250428211081261`, 
                    GrayLevel[0.5]]}, "\n"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                    Key["Vion"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   Row[{17.309804066438343`, 
                    Style[17.66303638202409, 
                    GrayLevel[0.5]]}, "\n"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                    Key["Loc"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   Row[{9.522478211507899, 
                    Style[9.52284200000024, 
                    GrayLevel[0.5]]}, "\n"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                    Key["NL"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   Row[{"O6", 
                    Style["O6", 
                    GrayLevel[0.5]]}, "\n"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                    Key["Ion"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   Row[{227.6725352039069, 
                    Style[227.6725352039069, 
                    GrayLevel[0.5]]}, "\n"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                    Key["Tel"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   Row[{3730.009221878065, 
                    Style[3730.009221878065, 
                    GrayLevel[0.5]]}, "\n"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                    Key["Tion"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   Row[{9.573304442969683, 
                    Style[13.584712216226492`, 
                    GrayLevel[0.5]]}, "\n"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                    Key["Vel"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   Row[{1.2105543930460256`, 
                    Style[1.7250428211081261`, 
                    GrayLevel[0.5]]}, "\n"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                    Key["Vion"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   Row[{35.38368310748223, 
                    Style[35.913522230728375`, 
                    GrayLevel[0.5]]}, "\n"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                    Key["Loc"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   Row[{18.26127898623506, 
                    Style[18.266917000000458`, 
                    GrayLevel[0.5]]}, "\n"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                    Key["NL"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   Row[{"H1", 
                    Style["H1", 
                    GrayLevel[0.5]]}, "\n"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                    Key["Ion"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   Row[{227.6725352039069, 
                    Style[227.6725352039069, 
                    GrayLevel[0.5]]}, "\n"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                    Key["Tel"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   Row[{3730.009221878065, 
                    Style[3730.009221878065, 
                    GrayLevel[0.5]]}, "\n"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                    Key["Tion"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   Row[{9.573304442969683, 
                    Style[13.584712216226492`, 
                    GrayLevel[0.5]]}, "\n"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                    Key["Vel"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   Row[{1.2105543930460256`, 
                    Style[1.7250428211081261`, 
                    GrayLevel[0.5]]}, "\n"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                    Key["Vion"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   Row[{8.081301753752047, 
                    Style[8.169659804014326, 
                    GrayLevel[0.5]]}, "\n"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                    Key["Loc"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   Row[{0., 
                    Style[0., 
                    GrayLevel[0.5]]}, "\n"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                    Key["NL"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}}, 
              BaseStyle -> {
               ContextMenu -> 
                Dynamic[
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                  Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger, TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu,
                     True, TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger = 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                    TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                    Block[{TypeSystem`NestedGrid`PackagePrivate`$\
globalScrollPos = {TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                    
                    With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
                "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, 
              Dividers -> All, FrameStyle -> GrayLevel[0.7490196078431373], 
              Spacings -> {0, 0}, Alignment -> Left, 
              BaseStyle -> {
               FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
                Plain}], LineBreakWithin -> False, ContextMenu -> {}, 
             NumberMarks -> False, ShowAutoStyles -> False]], 
          TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
         Dynamic[
          TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
          TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
             Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
             
             Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
               TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
               TypeSystem`NestedGrid`PackagePrivate`datasetData[
                TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
              TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
                 FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
                 TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                 TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                 TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
                Not[
                 FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
                TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
                TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
           TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
           TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
           TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
             TypeSystem`SparseGrid[
              TypeSystem`H["(data no longer present)"]], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
          TrackedSymbols :> {
           TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
         DynamicModuleValues :> {}], 
        TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
         TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
          TypeSystem`PackageScope`SubViewPathbar[
          TypeSystem`NestedGrid`PackagePrivate`$path$$, 
           TypeSystem`NestedGrid`PackagePrivate`updateState[
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
            TypeSystem`NestedGrid`PackagePrivate`$path$$, 
            TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
            TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
         TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
        TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
         Framed[
          Dynamic[
           Replace[
           TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
            TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               TypeSystem`NestedGrid`PackagePrivate`localHold[
               TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
               Blank[]] -> "", 
             TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               TypeSystem`NestedGrid`PackagePrivate`localHold[
               TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
               Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
                Blank[]], 
               Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
                Blank[]], 
               Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                Blank[]]] :> (
              Increment[
               TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
              TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
               TypeSystem`NestedGrid`PackagePrivate`path$; 
              TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
               TypeSystem`NestedGrid`PackagePrivate`pathType$; 
              TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
               TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
              TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
               TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
              TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
               TypeSystem`NestedGrid`PackagePrivate`path$, 
                TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
             Spacer[10], Blank[] :> Spacer[10]}], 
           TrackedSymbols :> {
            TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], 
          FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
          Top, ImageSize -> {Automatic, 15}], FontSize -> 1], 
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
        DynamicWrapperBox[
         DynamicBox[ToBoxes[
           Dataset`DatasetContent[
           2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
            "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], 
            "State" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], 
            "VPos" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], 
            "HPos" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], 
            "TopBar" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], 
            "BottomBar" -> 
            Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], 
            "OutputID" -> Hold[
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], 
           StandardForm],
          ImageSizeCache->{478., {142.8544921875, 148.1455078125}},
          
          TrackedSymbols:>{
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
            TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
         TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
         MouseAnnotation[],
         ImageSizeCache->{478., {142.8544921875, 148.1455078125}}],
        BaseStyle->{LineBreakWithin -> False},
        DynamicModuleValues:>{},
        Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
         CreateUUID[]),
        UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
       
       Deploy,
       DefaultBaseStyle->"Deploy"],
      Dataset`InterpretDataset[1],
      Editable->False,
      SelectWithContents->True,
      Selectable->False], ",", 
     TagBox[
      TagBox[
       DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
        "InitialData" -> {<|
           "Tel" -> 12066.644365807066`, "Tion" -> 21.068557972037382`, "Vel" -> 
            26384.027044824445`, "Vion" -> 2842.381714872068, "Loc" -> 
            13794.727134432109`, "NL" -> 5438.025734777362, "Total" -> 
            60546.87455268508|>, <|
           "Tel" -> 12066.644365807066`, "Tion" -> 21.068557972037382`, "Vel" -> 
            37439.466867920215`, "Vion" -> 4050.40054396188, "Loc" -> 
            14042.805969599136`, "NL" -> 5423.254329864883, "Total" -> 
            73043.64063512522|>, <|
           "Tel" -> 1., "Tion" -> 1., "Vel" -> 1.4190201823365867`, "Vion" -> 
            1.4250023220910648`, "Loc" -> 1.0179835985699068`, "NL" -> 
            0.9972836824184165, "Total" -> 1.206398202628379|>}, 
         "AllowEmbedding" -> True, "InitialShape" -> 
         TypeSystem`PackageScope`HeaderShape[<|{All, "Tel"} -> 
            1, {All, "Tion"} -> 1, {All, "Vel"} -> 1, {All, "Vion"} -> 
            1, {All, "Loc"} -> 1, {All, "NL"} -> 1, {All, "Total"} -> 1|>, 
           TypeSystem`PackageScope`Limited[
            TypeSystem`PackageScope`ColumnShape[
             TypeSystem`PackageScope`Limited[
              
              TypeSystem`PackageScope`RowShape[<|
               "Tel" -> TypeSystem`PackageScope`AtomShape[60], "Tion" -> 
                TypeSystem`PackageScope`AtomShape[60], "Vel" -> 
                TypeSystem`PackageScope`AtomShape[60], "Vion" -> 
                TypeSystem`PackageScope`AtomShape[60], "Loc" -> 
                TypeSystem`PackageScope`AtomShape[60], "NL" -> 
                TypeSystem`PackageScope`AtomShape[60], "Total" -> 
                TypeSystem`PackageScope`AtomShape[60]|>], 
              DirectedInfinity[1], 7, {All}]], 3, 
            DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Vector[
           
           TypeSystem`Struct[{
            "Tel", "Tion", "Vel", "Vion", "Loc", "NL", "Total"}, {
             TypeSystem`Atom[Real], 
             TypeSystem`Atom[Real], 
             TypeSystem`Atom[Real], 
             TypeSystem`Atom[Real], 
             TypeSystem`Atom[Real], 
             TypeSystem`Atom[Real], 
             TypeSystem`Atom[Real]}], 3], "Meta" -> <||>, "RowTarget" -> 20, 
         "ColumnTarget" -> 10, "Shape" -> 
         TypeSystem`PackageScope`HeaderShape[<|{All, "Tel"} -> 
            1, {All, "Tion"} -> 1, {All, "Vel"} -> 1, {All, "Vion"} -> 
            1, {All, "Loc"} -> 1, {All, "NL"} -> 1, {All, "Total"} -> 1|>, 
           TypeSystem`PackageScope`Limited[
            TypeSystem`PackageScope`ColumnShape[
             TypeSystem`PackageScope`Limited[
              
              TypeSystem`PackageScope`RowShape[<|
               "Tel" -> TypeSystem`PackageScope`AtomShape[60], "Tion" -> 
                TypeSystem`PackageScope`AtomShape[60], "Vel" -> 
                TypeSystem`PackageScope`AtomShape[60], "Vion" -> 
                TypeSystem`PackageScope`AtomShape[60], "Loc" -> 
                TypeSystem`PackageScope`AtomShape[60], "NL" -> 
                TypeSystem`PackageScope`AtomShape[60], "Total" -> 
                TypeSystem`PackageScope`AtomShape[60]|>], 
              DirectedInfinity[1], 7, {All}]], 3, 
            DirectedInfinity[1], {}]], "Type" -> TypeSystem`Vector[
           
           TypeSystem`Struct[{
            "Tel", "Tion", "Vel", "Vion", "Loc", "NL", "Total"}, {
             TypeSystem`Atom[Real], 
             TypeSystem`Atom[Real], 
             TypeSystem`Atom[Real], 
             TypeSystem`Atom[Real], 
             TypeSystem`Atom[Real], 
             TypeSystem`Atom[Real], 
             TypeSystem`Atom[Real]}], 3], "Path" -> {}, "DisplayedRowCount" -> 
         3, "DisplayedColumnCount" -> 7, "DataRowCount" -> 3, 
         "DataColumnCount" -> 7, "SortPaths" -> {}, "SortDirections" -> {}, 
         "HiddenItemsMap" -> Null, "UpdateType" -> 1|>, 
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
        DynamicModule[{
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
            Style[
             Grid[{{
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["Tel", 
                    Style[
                    "Tel", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "Tel"}, 1]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "Tel"}, "ColumnHeader", True], "Mouse"], 
                  ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["Tion", 
                    Style[
                    "Tion", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "Tion"}, 1]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "Tion"}, "ColumnHeader", True], "Mouse"], 
                  ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["Vel", 
                    Style[
                    "Vel", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "Vel"}, 1]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "Vel"}, "ColumnHeader", True], "Mouse"], 
                  ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["Vion", 
                    Style[
                    "Vion", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "Vion"}, 1]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "Vion"}, "ColumnHeader", True], "Mouse"], 
                  ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["Loc", 
                    Style[
                    "Loc", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "Loc"}, 1]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "Loc"}, "ColumnHeader", True], "Mouse"], 
                  ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["NL", 
                    Style[
                    "NL", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "NL"}, 1]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "NL"}, "ColumnHeader", True], "Mouse"], 
                  ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["Total", 
                    Style[
                    "Total", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "Total"}, 1]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "Total"}, "ColumnHeader", True], "Mouse"], 
                  ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["12066.6"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                    Key["Tel"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["21.0686"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                    Key["Tion"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["26384.0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                    Key["Vel"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["2842.38"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                    Key["Vion"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["13794.7"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                    Key["Loc"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["5438.03"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                    Key["NL"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["60546.9"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                    Key["Total"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["12066.6"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                    Key["Tel"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["21.0686"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                    Key["Tion"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["37439.5"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                    Key["Vel"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["4050.4"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                    Key["Vion"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["14042.8"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                    Key["Loc"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["5423.25"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                    Key["NL"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["73043.6"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                    Key["Total"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["1.0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                    Key["Tel"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["1.0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                    Key["Tion"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["1.41902"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                    Key["Vel"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["1.425"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                    Key["Vion"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["1.01798"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                    Key["Loc"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0.997284"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                    Key["NL"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["1.2064"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                    Key["Total"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}}, 
              BaseStyle -> {
               ContextMenu -> 
                Dynamic[
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                  Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger, TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu,
                     True, TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger = 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                    TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                    Block[{TypeSystem`NestedGrid`PackagePrivate`$\
globalScrollPos = {TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                    
                    With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
                "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, 
              Dividers -> All, FrameStyle -> GrayLevel[0.7490196078431373], 
              Spacings -> {0, 0}, Alignment -> Left, 
              BaseStyle -> {
               FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
                Plain}], LineBreakWithin -> False, ContextMenu -> {}, 
             NumberMarks -> False, ShowAutoStyles -> False]], 
          TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
         Dynamic[
          TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
          TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
             Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
             
             Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
               TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
               TypeSystem`NestedGrid`PackagePrivate`datasetData[
                TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
              TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
                 FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
                 TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                 TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                 TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
                Not[
                 FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
                TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
                TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
           TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
           TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
           TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
             TypeSystem`SparseGrid[
              TypeSystem`H["(data no longer present)"]], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
          TrackedSymbols :> {
           TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
         DynamicModuleValues :> {}], 
        TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
         TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
          TypeSystem`PackageScope`SubViewPathbar[
          TypeSystem`NestedGrid`PackagePrivate`$path$$, 
           TypeSystem`NestedGrid`PackagePrivate`updateState[
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
            TypeSystem`NestedGrid`PackagePrivate`$path$$, 
            TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
            TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
         TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
        TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
         Framed[
          Dynamic[
           Replace[
           TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
            TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               TypeSystem`NestedGrid`PackagePrivate`localHold[
               TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
               Blank[]] -> "", 
             TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               TypeSystem`NestedGrid`PackagePrivate`localHold[
               TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
               Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
                Blank[]], 
               Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
                Blank[]], 
               Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                Blank[]]] :> (
              Increment[
               TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
              TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
               TypeSystem`NestedGrid`PackagePrivate`path$; 
              TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
               TypeSystem`NestedGrid`PackagePrivate`pathType$; 
              TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
               TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
              TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
               TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
              TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
               TypeSystem`NestedGrid`PackagePrivate`path$, 
                TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
             Spacer[10], Blank[] :> Spacer[10]}], 
           TrackedSymbols :> {
            TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], 
          FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
          Top, ImageSize -> {Automatic, 15}], FontSize -> 1], 
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
        DynamicWrapperBox[
         DynamicBox[ToBoxes[
           Dataset`DatasetContent[
           2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
            "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], 
            "State" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], 
            "VPos" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], 
            "HPos" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], 
            "TopBar" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], 
            "BottomBar" -> 
            Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], 
            "OutputID" -> Hold[
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], 
           StandardForm],
          ImageSizeCache->{478., {60.8544921875, 66.1455078125}},
          
          TrackedSymbols:>{
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
            TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
         TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
         MouseAnnotation[],
         ImageSizeCache->{478., {60.8544921875, 66.1455078125}}],
        BaseStyle->{LineBreakWithin -> False},
        DynamicModuleValues:>{},
        Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
         CreateUUID[]),
        UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
       
       Deploy,
       DefaultBaseStyle->"Deploy"],
      Dataset`InterpretDataset[1],
      Editable->False,
      SelectWithContents->True,
      Selectable->False]}], "}"}]}],
  SequenceForm["Rescaling Factors:", {
    Dataset[{<|"Ion" -> Row[{"N5", 
          Style["N5", 
           GrayLevel[0.5]]}, "\n"], "Tel" -> Row[{227.6725352039069, 
          Style[227.6725352039069, 
           GrayLevel[0.5]]}, "\n"], "Tion" -> Row[{3730.009221878065, 
          Style[3730.009221878065, 
           GrayLevel[0.5]]}, "\n"], "Vel" -> Row[{9.573304442969683, 
          Style[13.584712216226492`, 
           GrayLevel[0.5]]}, "\n"], "Vion" -> Row[{1.2105543930460256`, 
          Style[1.7250428211081261`, 
           GrayLevel[0.5]]}, "\n"], "Loc" -> Row[{25.588971989553414`, 
          Style[26.030506422645928`, 
           GrayLevel[0.5]]}, "\n"], "NL" -> Row[{13.551668496241454`, 
          Style[13.55224300000034, 
           GrayLevel[0.5]]}, "\n"]|>, <|"Ion" -> Row[{"Pd18", 
          Style["Pd18", 
           GrayLevel[0.5]]}, "\n"], "Tel" -> Row[{227.6725352039069, 
          Style[227.6725352039069, 
           GrayLevel[0.5]]}, "\n"], "Tion" -> Row[{3730.009221878065, 
          Style[3730.009221878065, 
           GrayLevel[0.5]]}, "\n"], "Vel" -> Row[{9.573304442969683, 
          Style[13.584712216226492`, 
           GrayLevel[0.5]]}, "\n"], "Vion" -> Row[{1.2105543930460256`, 
          Style[1.7250428211081261`, 
           GrayLevel[0.5]]}, "\n"], "Loc" -> Row[{50.004449780881906`, 
          Style[51.593927279150186`, 
           GrayLevel[0.5]]}, "\n"], "NL" -> Row[{34.16549646027537, 
          Style[33.87906539367532, 
           GrayLevel[0.5]]}, "\n"]|>, <|"Ion" -> Row[{"C4", 
          Style["C4", 
           GrayLevel[0.5]]}, "\n"], "Tel" -> Row[{227.6725352039069, 
          Style[227.6725352039069, 
           GrayLevel[0.5]]}, "\n"], "Tion" -> Row[{3730.009221878065, 
          Style[3730.009221878065, 
           GrayLevel[0.5]]}, "\n"], "Vel" -> Row[{9.573304442969683, 
          Style[13.584712216226492`, 
           GrayLevel[0.5]]}, "\n"], "Vion" -> Row[{1.2105543930460256`, 
          Style[1.7250428211081261`, 
           GrayLevel[0.5]]}, "\n"], "Loc" -> Row[{17.309804066438343`, 
          Style[17.66303638202409, 
           GrayLevel[0.5]]}, "\n"], "NL" -> Row[{9.522478211507899, 
          Style[9.52284200000024, 
           GrayLevel[0.5]]}, "\n"]|>, <|"Ion" -> Row[{"O6", 
          Style["O6", 
           GrayLevel[0.5]]}, "\n"], "Tel" -> Row[{227.6725352039069, 
          Style[227.6725352039069, 
           GrayLevel[0.5]]}, "\n"], "Tion" -> Row[{3730.009221878065, 
          Style[3730.009221878065, 
           GrayLevel[0.5]]}, "\n"], "Vel" -> Row[{9.573304442969683, 
          Style[13.584712216226492`, 
           GrayLevel[0.5]]}, "\n"], "Vion" -> Row[{1.2105543930460256`, 
          Style[1.7250428211081261`, 
           GrayLevel[0.5]]}, "\n"], "Loc" -> Row[{35.38368310748223, 
          Style[35.913522230728375`, 
           GrayLevel[0.5]]}, "\n"], "NL" -> Row[{18.26127898623506, 
          Style[18.266917000000458`, 
           GrayLevel[0.5]]}, "\n"]|>, <|"Ion" -> Row[{"H1", 
          Style["H1", 
           GrayLevel[0.5]]}, "\n"], "Tel" -> Row[{227.6725352039069, 
          Style[227.6725352039069, 
           GrayLevel[0.5]]}, "\n"], "Tion" -> Row[{3730.009221878065, 
          Style[3730.009221878065, 
           GrayLevel[0.5]]}, "\n"], "Vel" -> Row[{9.573304442969683, 
          Style[13.584712216226492`, 
           GrayLevel[0.5]]}, "\n"], "Vion" -> Row[{1.2105543930460256`, 
          Style[1.7250428211081261`, 
           GrayLevel[0.5]]}, "\n"], "Loc" -> Row[{8.081301753752047, 
          Style[8.169659804014326, 
           GrayLevel[0.5]]}, "\n"], "NL" -> Row[{0., 
          Style[0., 
           GrayLevel[0.5]]}, "\n"]|>}, 
     TypeSystem`Vector[
      TypeSystem`Struct[{"Ion", "Tel", "Tion", "Vel", "Vion", "Loc", "NL"}, {
       TypeSystem`AnyType, TypeSystem`AnyType, TypeSystem`AnyType, 
        TypeSystem`AnyType, TypeSystem`AnyType, TypeSystem`AnyType, 
        TypeSystem`AnyType}], 5], <||>], 
    Dataset[{<|
      "Tel" -> 12066.644365807066`, "Tion" -> 21.068557972037382`, "Vel" -> 
       26384.027044824445`, "Vion" -> 2842.381714872068, "Loc" -> 
       13794.727134432109`, "NL" -> 5438.025734777362, "Total" -> 
       60546.87455268508|>, <|
      "Tel" -> 12066.644365807066`, "Tion" -> 21.068557972037382`, "Vel" -> 
       37439.466867920215`, "Vion" -> 4050.40054396188, "Loc" -> 
       14042.805969599136`, "NL" -> 5423.254329864883, "Total" -> 
       73043.64063512522|>, <|
      "Tel" -> 1., "Tion" -> 1., "Vel" -> 1.4190201823365867`, "Vion" -> 
       1.4250023220910648`, "Loc" -> 1.0179835985699068`, "NL" -> 
       0.9972836824184165, "Total" -> 1.206398202628379|>}, 
     TypeSystem`Vector[
      TypeSystem`Struct[{"Tel", "Tion", "Vel", "Vion", "Loc", "NL", "Total"}, {
        TypeSystem`Atom[Real], 
        TypeSystem`Atom[Real], 
        TypeSystem`Atom[Real], 
        TypeSystem`Atom[Real], 
        TypeSystem`Atom[Real], 
        TypeSystem`Atom[Real], 
        TypeSystem`Atom[Real]}], 3], <||>]}],
  Editable->False]], "Print",
 CellChangeTimes->{3.962643660691084*^9, 3.962648029413474*^9, 
  3.962801657193111*^9, 3.962990502917489*^9},
 CellLabel->
  "During evaluation of \
In[23]:=",ExpressionUUID->"30f1f1b2-a227-4c3c-bb5c-8e6ed29a5d0e"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Compilation Cost:\"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"6488", ",", "8992", ",", "13172", ",", "1400", ",", "178848"}],
       "}"}], ",", "208900"}], "}"}]}],
  SequenceForm[
  "Compilation Cost:", {{6488, 8992, 13172, 1400, 178848}, 208900}],
  Editable->False]], "Print",
 CellChangeTimes->{3.962643660691084*^9, 3.962648029413474*^9, 
  3.962801657193111*^9, 3.9629905030035*^9},
 CellLabel->
  "During evaluation of \
In[23]:=",ExpressionUUID->"50501bef-457a-4be3-92bb-19c0db5e5c76"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Qubit Cost:\"\>", "\[InvisibleSpace]", "1545"}],
  SequenceForm["Qubit Cost:", 1545],
  Editable->False]], "Print",
 CellChangeTimes->{3.962643660691084*^9, 3.962648029413474*^9, 
  3.962801657193111*^9, 3.9629905030038643`*^9},
 CellLabel->
  "During evaluation of \
In[23]:=",ExpressionUUID->"e89f3a25-b7c5-4723-939c-63051d9bace7"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Time Evolution Cost:\"\>", "\[InvisibleSpace]", 
   TagBox[
    TagBox[
     DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
      "InitialData" -> <|
        "exact" -> <|
          "query" -> 2 + 
            Ceiling[82291.73443327662 $CellContext`t + 
              Log[2.9552401942122875`/$CellContext`\[Epsilon]]], 
           "compilation" -> ScientificForm[208900., 5], "total" -> 
           208900 (2 + 
             Ceiling[82291.73443327662 $CellContext`t + 
               Log[2.9552401942122875`/$CellContext`\[Epsilon]]])|>, 
         "bound" -> <|
          "query" -> 2 + 
            Ceiling[99276.6005114768 $CellContext`t + 
              Log[2.9552401942122875`/$CellContext`\[Epsilon]]], 
           "compilation" -> ScientificForm[208900., 5], "total" -> 
           208900 (2 + 
             Ceiling[99276.6005114768 $CellContext`t + 
               Log[2.9552401942122875`/$CellContext`\[Epsilon]]])|>|>, 
       "AllowEmbedding" -> True, "InitialShape" -> 
       TypeSystem`PackageScope`HeaderShape[<|{All, 
            TypeSystem`PackageScope`KeyDummy[1]} -> 1, {All, "query"} -> 
          1, {All, "compilation"} -> 1, {All, "total"} -> 1|>, 
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`ColumnShape[
           TypeSystem`PackageScope`KeyValueShape[
            TypeSystem`PackageScope`AtomShape[56.00000000000001], 
            TypeSystem`PackageScope`Limited[
             
             TypeSystem`PackageScope`RowShape[<|
              "query" -> TypeSystem`PackageScope`UnknownShape[False], 
               "compilation" -> TypeSystem`PackageScope`UnknownShape[False], 
               "total" -> TypeSystem`PackageScope`UnknownShape[False]|>], 
             DirectedInfinity[1], 3, {All}]]], 2, 
          DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Assoc[
         TypeSystem`Atom[String], 
         TypeSystem`Struct[{"query", "compilation", "total"}, {
          TypeSystem`AnyType, TypeSystem`AnyType, TypeSystem`AnyType}], 2], 
       "Meta" -> <||>, "RowTarget" -> 20, "ColumnTarget" -> 10, "Shape" -> 
       TypeSystem`PackageScope`HeaderShape[<|{
            Key["exact"], "query"} -> 1, {
            Key["exact"], "compilation"} -> 1, {
            Key["exact"], "total"} -> 1|>, 
         TypeSystem`PackageScope`Limited[
          
          TypeSystem`PackageScope`RowShape[<|
           "query" -> TypeSystem`PackageScope`UnknownShape[False], 
            "compilation" -> TypeSystem`PackageScope`UnknownShape[False], 
            "total" -> TypeSystem`PackageScope`UnknownShape[False]|>], 
          DirectedInfinity[1], 3, {}]], "Type" -> 
       TypeSystem`Struct[{"query", "compilation", "total"}, {
         TypeSystem`AnyType, TypeSystem`AnyType, TypeSystem`AnyType}], "Path" -> {
         Key["exact"]}, "DisplayedRowCount" -> DirectedInfinity[1], 
       "DisplayedColumnCount" -> 3, "DataRowCount" -> 3, "DataColumnCount" -> 
       3, "SortPaths" -> {}, "SortDirections" -> {}, "HiddenItemsMap" -> Null,
        "UpdateType" -> 1|>, TypeSystem`NestedGrid`PackagePrivate`$outputID$$,
       TypeSystem`NestedGrid`PackagePrivate`$path$$ = {
       Key["exact"]}, TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
      TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
      TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
      DynamicModule[{
       TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
          Style[
           Grid[{{
              Item[
               Pane[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["query", 
                    Style[
                    "query", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["exact"], "query"}, 1]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["exact"], "query"}, "ColumnHeader", True], "Mouse"], 
                ImageSize -> {{1, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
               GrayLevel[0.95], Alignment -> {Left, Baseline}], 
              Item[
               Pane[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["compilation", 
                    Style[
                    "compilation", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["exact"], "compilation"}, 1]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["exact"], "compilation"}, "ColumnHeader", True], 
                 "Mouse"], ImageSize -> {{1, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
               GrayLevel[0.95], Alignment -> {Left, Baseline}], 
              Item[
               Pane[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["total", 
                    Style[
                    "total", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["exact"], "total"}, 1]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["exact"], "total"}, "ColumnHeader", True], "Mouse"], 
                ImageSize -> {{1, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
               GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
              Item[
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   RowBox[{"2", "+", 
                    RowBox[{"Ceiling", "[", 
                    RowBox[{
                    RowBox[{"82291.73443327662`", " ", "t"}], "+", 
                    RowBox[{"Log", "[", 
                    FractionBox["2.9552401942122875`", "\[Epsilon]"], "]"}]}],
                     "]"}]}], FontFamily -> Dynamic[
                    CurrentValue[{"StyleHints", "CodeFont"}]], 
                   ShowStringCharacters -> True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["exact"], 
                   Key["query"]}, "Item", False], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}], 
              Item[
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   TagBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"\"2.089\"", "\[Times]", 
                    SuperscriptBox["10", "\"5\""]}], ShowStringCharacters -> 
                    False], 208900., AutoDelete -> True], 
                    ScientificForm[#, 5]& ], FontFamily -> Dynamic[
                    CurrentValue[{"StyleHints", "CodeFont"}]], 
                   ShowStringCharacters -> True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["exact"], 
                   Key["compilation"]}, "Item", False], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}], 
              Item[
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   RowBox[{"208900", " ", 
                    RowBox[{"(", 
                    RowBox[{"2", "+", 
                    RowBox[{"Ceiling", "[", 
                    RowBox[{
                    RowBox[{"82291.73443327662`", " ", "t"}], "+", 
                    RowBox[{"Log", "[", 
                    FractionBox["2.9552401942122875`", "\[Epsilon]"], "]"}]}],
                     "]"}]}], ")"}]}], FontFamily -> Dynamic[
                    CurrentValue[{"StyleHints", "CodeFont"}]], 
                   ShowStringCharacters -> True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["exact"], 
                   Key["total"]}, "Item", False], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}]}}, 
            BaseStyle -> {
             ContextMenu -> 
              Dynamic[TypeSystem`NestedGrid`PackagePrivate`$\
contextMenuTrigger; 
                Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                  TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                  TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger, TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu,
                   True, TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger = 
                   TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                  TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                   Block[{TypeSystem`NestedGrid`PackagePrivate`$\
globalScrollPos = {TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                    
                    With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
              "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, 
            Dividers -> All, FrameStyle -> GrayLevel[0.7490196078431373], 
            Spacings -> {0, 0}, Alignment -> Left, 
            BaseStyle -> {
             FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
              Plain}], LineBreakWithin -> False, ContextMenu -> {}, 
           NumberMarks -> False, ShowAutoStyles -> False]], 
        TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
       Dynamic[
        TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
        TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
           Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
           
           Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
             TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
             TypeSystem`NestedGrid`PackagePrivate`datasetData[
              TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
               FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
               TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
               TypeSystem`NestedGrid`PackagePrivate`renderGrid[
               TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
               TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
              Not[
               FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
              TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
              TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
         TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
         TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
         TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
           FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
           TypeSystem`SparseGrid[
            TypeSystem`H["(data no longer present)"]], 
           TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
        TrackedSymbols :> {
         TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
          TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
       DynamicModuleValues :> {}], 
      TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
       TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
        TypeSystem`PackageScope`SubViewPathbar[
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
         TypeSystem`NestedGrid`PackagePrivate`updateState[
         TypeSystem`NestedGrid`PackagePrivate`$state$$, 
          TypeSystem`NestedGrid`PackagePrivate`$path$$, 
          TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
          TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
       TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
      TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
       Framed[
        Dynamic[
         Replace[
         TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
          TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
             TypeSystem`NestedGrid`PackagePrivate`localHold[
             TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
             Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
             TypeSystem`NestedGrid`PackagePrivate`localHold[
             TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
              Blank[]], 
             Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
              Blank[]], 
             Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
              Blank[]]] :> (
            Increment[
             TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
            TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
             TypeSystem`NestedGrid`PackagePrivate`path$; 
            TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
             TypeSystem`NestedGrid`PackagePrivate`pathType$; 
            TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
             TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
            TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
             TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
            TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
             TypeSystem`NestedGrid`PackagePrivate`path$, 
              TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
           Spacer[10], Blank[] :> Spacer[10]}], 
         TrackedSymbols :> {
          TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], 
        FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
        Top, ImageSize -> {Automatic, 15}], FontSize -> 1], 
      TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
      DynamicWrapperBox[
       DynamicBox[ToBoxes[
         Dataset`DatasetContent[
         2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
          "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], 
          "State" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], 
          "VPos" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], 
          "HPos" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], 
          "TopBar" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], 
          "BottomBar" -> 
          Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
          Hold[
            TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
        ImageSizeCache->{725., {47.3544921875, 52.6455078125}},
        TrackedSymbols:>{
         TypeSystem`NestedGrid`PackagePrivate`$state$$, 
          TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
       MouseAnnotation[],
       ImageSizeCache->{725., {47.3544921875, 52.6455078125}}],
      BaseStyle->{LineBreakWithin -> False},
      DynamicModuleValues:>{},
      Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
       CreateUUID[]),
      UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
     Deploy,
     DefaultBaseStyle->"Deploy"],
    Dataset`InterpretDataset[1],
    Editable->False,
    SelectWithContents->True,
    Selectable->False]}],
  SequenceForm["Time Evolution Cost:", 
   Dataset[<|
    "exact" -> <|
      "query" -> 2 + 
        Ceiling[82291.73443327662 $CellContext`t + 
          Log[2.9552401942122875`/$CellContext`\[Epsilon]]], "compilation" -> 
       ScientificForm[208900., 5], "total" -> 
       208900 (2 + 
         Ceiling[82291.73443327662 $CellContext`t + 
           Log[2.9552401942122875`/$CellContext`\[Epsilon]]])|>, 
     "bound" -> <|
      "query" -> 2 + 
        Ceiling[99276.6005114768 $CellContext`t + 
          Log[2.9552401942122875`/$CellContext`\[Epsilon]]], "compilation" -> 
       ScientificForm[208900., 5], "total" -> 
       208900 (2 + 
         Ceiling[99276.6005114768 $CellContext`t + 
           Log[2.9552401942122875`/$CellContext`\[Epsilon]]])|>|>, 
    TypeSystem`Assoc[
     TypeSystem`Atom[String], 
     TypeSystem`Struct[{"query", "compilation", "total"}, {
      TypeSystem`AnyType, TypeSystem`AnyType, TypeSystem`AnyType}], 2], <||>]],
  Editable->False]], "Print",
 CellChangeTimes->{3.962643660691084*^9, 3.962648029413474*^9, 
  3.962801657193111*^9, 3.962990503005365*^9},
 CellLabel->
  "During evaluation of \
In[23]:=",ExpressionUUID->"b4b6c182-71b9-4f6f-8c41-4a3633f67168"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Instance Class 3: DMTM ", "Subsection",
 CellChangeTimes->{{3.946122056249242*^9, 3.94612205901908*^9}, {
   3.9461221675446*^9, 3.946122237927978*^9}, {3.9461223745665283`*^9, 
   3.94612256081662*^9}, {3.946124542921606*^9, 3.946124550073524*^9}, {
   3.946125969271934*^9, 3.946125995186101*^9}, 3.9461260258636*^9, {
   3.946126116624103*^9, 3.946126142297975*^9}, {3.946128690954178*^9, 
   3.946128764645544*^9}, {3.946166852196194*^9, 3.946167001273471*^9}, {
   3.946167036517096*^9, 3.946167086297594*^9}, {3.946490055591479*^9, 
   3.9464901287549057`*^9}, {3.946492902799545*^9, 3.946492926667141*^9}, {
   3.9464931480328207`*^9, 3.946493148492016*^9}, {3.94649320360962*^9, 
   3.946493328090327*^9}, 3.94649336892379*^9, {3.94649446982141*^9, 
   3.946494469878873*^9}, 3.946494576213092*^9, {3.946494995955134*^9, 
   3.946494996053494*^9}, {3.946495041072632*^9, 3.946495041173824*^9}, {
   3.9464951594898763`*^9, 3.946495181022932*^9}, {3.946497980355174*^9, 
   3.946497981240966*^9}, {3.94649815633422*^9, 3.946498163453021*^9}, {
   3.94649824824883*^9, 3.9464982663052588`*^9}, {3.946499433282394*^9, 
   3.946499564280864*^9}, {3.946501865983119*^9, 3.946501875250986*^9}, 
   3.946501992008497*^9, {3.946503639212558*^9, 3.946503639624648*^9}, {
   3.9465643107086763`*^9, 3.94656432284638*^9}, {3.946564529145935*^9, 
   3.946564559829351*^9}, 3.946564832060857*^9, {3.946565176755971*^9, 
   3.946565202241859*^9}, {3.946565313675543*^9, 3.946565370593363*^9}, {
   3.9467288407929296`*^9, 3.946728840877693*^9}, {3.947951264999652*^9, 
   3.947951333281031*^9}, {3.947952104631193*^9, 3.947952112701625*^9}, {
   3.962621368637846*^9, 3.962621369590816*^9}, {3.962621491030655*^9, 
   3.962621499458574*^9}, {3.962635550807879*^9, 3.96263558334223*^9}, {
   3.962635785507848*^9, 3.962635805811306*^9}, {3.96263639680842*^9, 
   3.9626364072158*^9}, {3.963405876845327*^9, 3.9634058769816523`*^9}, 
   3.963405908567973*^9, {3.96340601168438*^9, 
   3.9634060125617743`*^9}},ExpressionUUID->"cebeba67-c49b-4140-ab79-\
7e5720dee79e"],

Cell[TextData[{
 "Repeat the same process as we have done for the ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["NH", "3"], TraditionalForm]],ExpressionUUID->
  "e28219dd-7169-40ec-9dc8-1550ba2cbaba"],
 Cell[BoxData[
  FormBox[
   SubscriptBox["BF", "3"], TraditionalForm]],ExpressionUUID->
  "a56cd928-76d9-447d-9117-5186a18250b2"],
 " and DMTM small instance, but this time with 3 sub instance with different \
DMTM sizes:"
}], "Text",
 CellChangeTimes->{{3.96340627308148*^9, 
  3.9634063088876667`*^9}},ExpressionUUID->"6caea3cc-4ad7-4dc1-adc9-\
05948fbb3815"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
     RowBox[{
     "Construct", " ", "Cell", " ", "for", " ", "different", " ", "sizes", 
      " ", "n", " ", "x", " ", "n", " ", "lattice", " ", "of", " ", "h"}], 
     "-", "BN"}], ",", " ", 
    RowBox[{
     RowBox[{"1", " ", "Pd"}], "-", "O"}], ",", " ", 
    RowBox[{"1", " ", "CH4"}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"DMTMExtendedCellSpec", "[", "n_", "]"}], ":=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"2.5", " ", "n"}], ",", 
       RowBox[{"2.5", " ", "n"}], ",", "20"}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"constructDMTMInputPart", "[", "n_", "]"}], ":=", 
    RowBox[{"<|", 
     RowBox[{
      RowBox[{"\"\<B3\>\"", "->", 
       RowBox[{
        SuperscriptBox["n", "2"], "-", "1"}]}], ",", 
      RowBox[{"\"\<N5\>\"", "->", 
       SuperscriptBox["n", "2"]}], " ", ",", 
      RowBox[{"\"\<C4\>\"", "->", "1"}], ",", 
      RowBox[{"\"\<O6\>\"", "->", "1"}], ",", 
      RowBox[{"\"\<H1\>\"", "->", "4"}], ",", 
      RowBox[{"\"\<Pd18\>\"", "->", "1"}]}], "|>"}]}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"realSpaceCellSpecDMTMClass", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"SimulationCell`convertAngstromtoAUCellSpec", "[", 
        RowBox[{"DMTMExtendedCellSpec", "[", "n", "]"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"n", ",", "1", ",", "9"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"InstanceCellDMTMClass", "=", 
     RowBox[{"Map", "[", 
      RowBox[{
      "SimulationCell`aVecsInPlane120deg", ",", 
       "realSpaceCellSpecDMTMClass"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{
      RowBox[{
      "Construct", " ", "Basis", " ", "and", " ", "Input", " ", "for", " ", 
       "n"}], "=", "3"}], ",", "5", ",", 
     RowBox[{
     "9", " ", "as", " ", "representative", " ", "cases", " ", "of", " ", 
      "interest"}]}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"InstanceBasisDMTMClass3", "=", 
     RowBox[{"EchoTiming", "@", 
      RowBox[{"BasisGeneration`constructBasis", "[", 
       RowBox[{
        RowBox[{"InstanceCellDMTMClass", "[", 
         RowBox[{"[", "3", "]"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"50", ",", "450", ",", "1"}], "}"}], ",", "True", ",", 
        "True"}], "]"}]}]}], ";"}], " ", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"InstanceBasisDMTMClass5", "=", 
     RowBox[{"EchoTiming", "@", 
      RowBox[{"BasisGeneration`constructBasis", "[", 
       RowBox[{
        RowBox[{"InstanceCellDMTMClass", "[", 
         RowBox[{"[", "5", "]"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"30", ",", "450", ",", "1"}], "}"}], ",", "True", ",", 
        "True"}], "]"}]}]}], ";"}], " ", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"InstanceBasisDMTMClass9", "=", 
     RowBox[{"EchoTiming", "@", 
      RowBox[{"BasisGeneration`constructBasis", "[", 
       RowBox[{
        RowBox[{"InstanceCellDMTMClass", "[", 
         RowBox[{"[", "9", "]"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"50", ",", "450", ",", "1"}], "}"}], ",", "True", ",", 
        "True"}], "]"}]}]}], ";"}], " ", "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"InstanceInputDMTMClass3", "=", 
    RowBox[{"CostAnalysis`constructInput", "[", 
     RowBox[{
      RowBox[{"constructDMTMInputPart", "[", "3", "]"}], ",", 
      "InstanceBasisDMTMClass3"}], "]"}]}], "\[IndentingNewLine]", 
   RowBox[{"InstanceInputDMTMClass5", "=", 
    RowBox[{"CostAnalysis`constructInput", "[", 
     RowBox[{
      RowBox[{"constructDMTMInputPart", "[", "5", "]"}], ",", 
      "InstanceBasisDMTMClass5"}], "]"}]}], "\[IndentingNewLine]", 
   RowBox[{"InstanceInputDMTMClass9", "=", 
    RowBox[{"CostAnalysis`constructInput", "[", 
     RowBox[{
      RowBox[{"constructDMTMInputPart", "[", "9", "]"}], ",", 
      "InstanceBasisDMTMClass9"}], "]"}]}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
    "Save", " ", "basis", " ", "in", " ", "present", " ", "current", " ", 
     "notebook", " ", "directory", " ", "and", " ", "inspect", " ", "basis"}],
     " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"EchoTiming", "@", 
     RowBox[{"DumpSave", "[", 
      RowBox[{
       RowBox[{"FileNameJoin", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"NotebookDirectory", "[", "]"}], ",", 
          "\"\<InstanceBasisDMTMClass3.mx\>\""}], "}"}], "]"}], ",", 
       "InstanceBasisDMTMClass3"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"EchoTiming", "@", 
     RowBox[{"DumpSave", "[", 
      RowBox[{
       RowBox[{"FileNameJoin", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"NotebookDirectory", "[", "]"}], ",", 
          "\"\<InstanceBasisDMTMClass5.mx\>\""}], "}"}], "]"}], ",", 
       "InstanceBasisDMTMClass5"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"EchoTiming", "@", 
     RowBox[{"DumpSave", "[", 
      RowBox[{
       RowBox[{"FileNameJoin", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"NotebookDirectory", "[", "]"}], ",", 
          "\"\<InstanceBasisDMTMClass9.mx\>\""}], "}"}], "]"}], ",", 
       "InstanceBasisDMTMClass9"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
   "BasisGeneration`viewBasisInfo", "[", "InstanceBasisDMTMClass3", "]"}], 
   "\[IndentingNewLine]", 
   RowBox[{
   "BasisGeneration`viewBasisInfo", "[", "InstanceBasisDMTMClass5", "]"}], 
   "\[IndentingNewLine]", 
   RowBox[{
   "BasisGeneration`viewBasisInfo", "[", "InstanceBasisDMTMClass9", 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.962635832413024*^9, 3.962635955513928*^9}, {
   3.962635998282971*^9, 3.962636042050081*^9}, {3.962636111490693*^9, 
   3.962636129585559*^9}, {3.962636456258621*^9, 3.962636457628304*^9}, 
   3.962637042419959*^9, {3.96265973388913*^9, 3.962659848850097*^9}, {
   3.962709408069025*^9, 3.962709409043333*^9}, {3.962709454225931*^9, 
   3.96270951520982*^9}, {3.9628018897845583`*^9, 3.962801961612602*^9}, {
   3.9634060038797827`*^9, 3.9634060046705112`*^9}, 
   3.963406307197864*^9},ExpressionUUID->"c36924c2-f23e-4ee5-b8ef-\
4c5df5e52d26"],

Cell[CellGroupData[{

Cell[BoxData["82.509827`"], "EchoTiming",
 CellChangeTimes->{
  3.962990585581495*^9},ExpressionUUID->"fd115ca3-2872-4b8a-89ea-\
238ece9de010"],

Cell[BoxData["81.701899`"], "EchoTiming",
 CellChangeTimes->{
  3.962990667286447*^9},ExpressionUUID->"93c8da42-ecfb-4033-b023-\
2559357910b3"],

Cell[BoxData["352.419174`"], "EchoTiming",
 CellChangeTimes->{
  3.9629910197090893`*^9},ExpressionUUID->"232d113f-6a29-4770-a799-\
61adb0bfb7cd"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"B3\"\>", "\[Rule]", "8"}], ",", 
     RowBox[{"\<\"N5\"\>", "\[Rule]", "9"}], ",", 
     RowBox[{"\<\"C4\"\>", "\[Rule]", "1"}], ",", 
     RowBox[{"\<\"O6\"\>", "\[Rule]", "1"}], ",", 
     RowBox[{"\<\"H1\"\>", "\[Rule]", "4"}], ",", 
     RowBox[{"\<\"Pd18\"\>", "\[Rule]", "1"}]}], "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"Kmax\"\>", "\[Rule]", "29.40957555414752`"}], ",", 
     RowBox[{"\<\"Qmax\"\>", "\[Rule]", "58.81915110829504`"}], ",", 
     RowBox[{"\<\"Kbarmax\"\>", "\[Rule]", "70.11350431374709`"}], ",", 
     RowBox[{"\<\"Qbarmax\"\>", "\[Rule]", "140.22700862749417`"}], ",", 
     RowBox[{"\<\"Kbartruncmax\"\>", "\[Rule]", "3.0514272407719707`"}], ",", 
     
     RowBox[{"\<\"Qbartruncmax\"\>", "\[Rule]", "6.102854481543941`"}]}], 
    "\[RightAssociation]"}]}], "}"}]], "Output",
 CellChangeTimes->{3.962643660900917*^9, 3.962660420387637*^9, 
  3.962802235083891*^9, 3.962991019712886*^9},
 CellLabel->"Out[31]=",ExpressionUUID->"a14d4130-86a9-44ae-a10e-c7f145f2d082"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"B3\"\>", "\[Rule]", "24"}], ",", 
     RowBox[{"\<\"N5\"\>", "\[Rule]", "25"}], ",", 
     RowBox[{"\<\"C4\"\>", "\[Rule]", "1"}], ",", 
     RowBox[{"\<\"O6\"\>", "\[Rule]", "1"}], ",", 
     RowBox[{"\<\"H1\"\>", "\[Rule]", "4"}], ",", 
     RowBox[{"\<\"Pd18\"\>", "\[Rule]", "1"}]}], "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"Kmax\"\>", "\[Rule]", "19.533463130174784`"}], ",", 
     RowBox[{"\<\"Qmax\"\>", "\[Rule]", "39.06692626034957`"}], ",", 
     RowBox[{"\<\"Kbarmax\"\>", "\[Rule]", "79.74941093695628`"}], ",", 
     RowBox[{"\<\"Qbarmax\"\>", "\[Rule]", "159.49882187391256`"}], ",", 
     RowBox[{"\<\"Kbartruncmax\"\>", "\[Rule]", "3.0514272407719707`"}], ",", 
     
     RowBox[{"\<\"Qbartruncmax\"\>", "\[Rule]", "6.102854481543941`"}]}], 
    "\[RightAssociation]"}]}], "}"}]], "Output",
 CellChangeTimes->{3.962643660900917*^9, 3.962660420387637*^9, 
  3.962802235083891*^9, 3.962991019714333*^9},
 CellLabel->"Out[32]=",ExpressionUUID->"cbb1dae3-c337-47a4-a353-4f62165ca8bb"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"B3\"\>", "\[Rule]", "80"}], ",", 
     RowBox[{"\<\"N5\"\>", "\[Rule]", "81"}], ",", 
     RowBox[{"\<\"C4\"\>", "\[Rule]", "1"}], ",", 
     RowBox[{"\<\"O6\"\>", "\[Rule]", "1"}], ",", 
     RowBox[{"\<\"H1\"\>", "\[Rule]", "4"}], ",", 
     RowBox[{"\<\"Pd18\"\>", "\[Rule]", "1"}]}], "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"Kmax\"\>", "\[Rule]", "21.359990685403794`"}], ",", 
     RowBox[{"\<\"Qmax\"\>", "\[Rule]", "42.71998137080759`"}], ",", 
     RowBox[{"\<\"Kbarmax\"\>", "\[Rule]", "86.45710515520584`"}], ",", 
     RowBox[{"\<\"Qbarmax\"\>", "\[Rule]", "172.91421031041168`"}], ",", 
     RowBox[{"\<\"Kbartruncmax\"\>", "\[Rule]", "3.0514272407719707`"}], ",", 
     
     RowBox[{"\<\"Qbartruncmax\"\>", "\[Rule]", "6.102854481543941`"}]}], 
    "\[RightAssociation]"}]}], "}"}]], "Output",
 CellChangeTimes->{3.962643660900917*^9, 3.962660420387637*^9, 
  3.962802235083891*^9, 3.9629910197148733`*^9},
 CellLabel->"Out[33]=",ExpressionUUID->"d20331de-c75b-436c-8e1d-84e966dbf1be"],

Cell[CellGroupData[{

Cell[BoxData["0.497955`"], "EchoTiming",
 CellChangeTimes->{
  3.9629910202103786`*^9},ExpressionUUID->"8e8eb68a-6592-48bb-ac1b-\
fdf473e4c909"],

Cell[BoxData["0.471183`"], "EchoTiming",
 CellChangeTimes->{
  3.9629910206846457`*^9},ExpressionUUID->"455ba11b-2243-4606-9793-\
483e90cd0b2a"],

Cell[BoxData["2.421365`"], "EchoTiming",
 CellChangeTimes->{
  3.962991023109181*^9},ExpressionUUID->"d69f80ee-0544-4357-a799-\
f56b33235de3"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"nqubits\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"6", ",", "6", ",", "7"}], "}"}]}], ",", 
   RowBox[{"\<\"nqubits\[CapitalLambda]bar\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"7", ",", "7", ",", "9"}], "}"}]}], ",", 
   RowBox[{"\<\"pmax\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"31", ",", "31", ",", "63"}], "}"}]}], ",", 
   RowBox[{"\<\"pmax\[CapitalLambda]bar\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"63", ",", "63", ",", "255"}], "}"}]}], ",", 
   RowBox[{"\<\"pmax\[CapitalLambda]bartrunc\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"3", ",", "3", ",", "9"}], "}"}]}], ",", 
   RowBox[{"\<\"cutoff\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "15.866745761202331`", ",", "15.866745761202331`", ",", 
        "10.471975511965978`"}], "}"}], ",", "24.7622598569775`", ",", 
      "306.5847566122397`", ",", "54.83113556160755`"}], "}"}]}], ",", 
   RowBox[{"\<\"cutoff\[CapitalLambda]bar\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "32.24532203083054`", ",", "32.24532203083054`", ",", 
        "42.386567548433725`"}], "}"}], ",", "62.25867565473799`", ",", 
      "1938.0713471409326`", ",", "519.8803964359828`"}], "}"}]}], ",", 
   RowBox[{"\<\"cutoff\[CapitalLambda]bartrunc\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "1.5354915252776449`", ",", "1.5354915252776449`", ",", 
        "1.4959965017094254`"}], "}"}], ",", "2.636944061129431`", ",", 
      "3.4767369907628884`", ",", "1.1190027665634195`"}], "}"}]}], ",", 
   RowBox[{"\<\"Kmax\"\>", "\[Rule]", "29.40957555414752`"}], ",", 
   RowBox[{"\<\"Qmax\"\>", "\[Rule]", "58.81915110829504`"}], ",", 
   RowBox[{"\<\"Kbarmax\"\>", "\[Rule]", "70.11350431374709`"}], ",", 
   RowBox[{"\<\"Qbarmax\"\>", "\[Rule]", "140.22700862749417`"}], ",", 
   RowBox[{"\<\"Kbartruncmax\"\>", "\[Rule]", "3.0514272407719707`"}], ",", 
   RowBox[{"\<\"Qbartruncmax\"\>", "\[Rule]", "6.102854481543941`"}], ",", 
   RowBox[{"\<\"maxCheck\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"True", ",", "True"}], "}"}]}], ",", 
   RowBox[{"\<\"aVecs\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"14.174999999999999`", ",", "0.`", ",", "0.`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "7.0874999999999995`"}], ",", "12.275910098644417`", ",",
         "0.`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.`", ",", "0.`", ",", "37.8`"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"\<\"bVecs\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "0.4432582227287186`", ",", "0.2559152542129408`", ",", "0.`"}], "}"}],
       ",", 
      RowBox[{"{", 
       RowBox[{"0.`", ",", "0.5118305084258816`", ",", "0.`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.`", ",", "0.`", ",", "0.1662218335232695`"}], "}"}]}], 
     "}"}]}], ",", 
   RowBox[{"\<\"basisSize\"\>", "\[Rule]", "504063"}], ",", 
   RowBox[{"\<\"basistruncSize\"\>", "\[Rule]", "930"}]}], 
  "\[RightAssociation]"}]], "Print",
 CellChangeTimes->{3.9626604242173157`*^9, 3.962802239275663*^9, 
  3.962991023111494*^9},
 CellLabel->
  "During evaluation of \
In[24]:=",ExpressionUUID->"97f19757-b824-4061-8895-73e327fec1c6"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"nqubits\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"6", ",", "6", ",", "7"}], "}"}]}], ",", 
   RowBox[{"\<\"nqubits\[CapitalLambda]bar\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"8", ",", "8", ",", "9"}], "}"}]}], ",", 
   RowBox[{"\<\"pmax\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"31", ",", "31", ",", "63"}], "}"}]}], ",", 
   RowBox[{"\<\"pmax\[CapitalLambda]bar\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"127", ",", "127", ",", "255"}], "}"}]}], ",", 
   RowBox[{"\<\"pmax\[CapitalLambda]bartrunc\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"5", ",", "5", ",", "9"}], "}"}]}], ",", 
   RowBox[{"\<\"cutoff\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "9.520047456721397`", ",", "9.520047456721397`", ",", 
        "10.471975511965978`"}], "}"}], ",", "17.05652011049353`", ",", 
      "145.4624391398351`", ",", "45.315651789113765`"}], "}"}]}], ",", 
   RowBox[{"\<\"cutoff\[CapitalLambda]bar\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "39.00148474205218`", ",", "39.00148474205218`", ",", 
        "42.386567548433725`"}], "}"}], ",", "69.56186263109257`", ",", 
      "2419.426366353496`", ",", "760.5579060422644`"}], "}"}]}], ",", 
   RowBox[{"\<\"cutoff\[CapitalLambda]bartrunc\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "1.5354915252776447`", ",", "1.5354915252776447`", ",", 
        "1.4959965017094254`"}], "}"}], ",", "2.6369440611294306`", ",", 
      "3.476736990762887`", ",", "1.1190027665634195`"}], "}"}]}], ",", 
   RowBox[{"\<\"Kmax\"\>", "\[Rule]", "19.533463130174784`"}], ",", 
   RowBox[{"\<\"Qmax\"\>", "\[Rule]", "39.06692626034957`"}], ",", 
   RowBox[{"\<\"Kbarmax\"\>", "\[Rule]", "79.74941093695628`"}], ",", 
   RowBox[{"\<\"Qbarmax\"\>", "\[Rule]", "159.49882187391256`"}], ",", 
   RowBox[{"\<\"Kbartruncmax\"\>", "\[Rule]", "3.0514272407719707`"}], ",", 
   RowBox[{"\<\"Qbartruncmax\"\>", "\[Rule]", "6.102854481543941`"}], ",", 
   RowBox[{"\<\"maxCheck\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"True", ",", "True"}], "}"}]}], ",", 
   RowBox[{"\<\"aVecs\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"23.625`", ",", "0.`", ",", "0.`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "11.8125`"}], ",", "20.459850164407364`", ",", "0.`"}], 
       "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.`", ",", "0.`", ",", "37.8`"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"\<\"bVecs\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "0.26595493363723116`", ",", "0.15354915252776447`", ",", "0.`"}], 
       "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.`", ",", "0.30709830505552893`", ",", "0.`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.`", ",", "0.`", ",", "0.1662218335232695`"}], "}"}]}], 
     "}"}]}], ",", 
   RowBox[{"\<\"basisSize\"\>", "\[Rule]", "504063"}], ",", 
   RowBox[{"\<\"basistruncSize\"\>", "\[Rule]", "2298"}]}], 
  "\[RightAssociation]"}]], "Print",
 CellChangeTimes->{3.9626604242173157`*^9, 3.962802239275663*^9, 
  3.962991023112829*^9},
 CellLabel->
  "During evaluation of \
In[24]:=",ExpressionUUID->"23a81392-0fe3-4758-a229-b7bfcc69bad6"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"nqubits\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"7", ",", "7", ",", "7"}], "}"}]}], ",", 
   RowBox[{"\<\"nqubits\[CapitalLambda]bar\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"9", ",", "9", ",", "9"}], "}"}]}], ",", 
   RowBox[{"\<\"pmax\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"63", ",", "63", ",", "63"}], "}"}]}], ",", 
   RowBox[{"\<\"pmax\[CapitalLambda]bar\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"255", ",", "255", ",", "255"}], "}"}]}], ",", 
   RowBox[{"\<\"pmax\[CapitalLambda]bartrunc\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"9", ",", "9", ",", "9"}], "}"}]}], ",", 
   RowBox[{"\<\"cutoff\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "10.748440676943513`", ",", "10.748440676943513`", ",", 
        "10.471975511965976`"}], "}"}], ",", "18.45860842790601`", ",", 
      "170.36011254738142`", ",", "54.83113556160753`"}], "}"}]}], ",", 
   RowBox[{"\<\"cutoff\[CapitalLambda]bar\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "43.505593216199934`", ",", "43.505593216199934`", ",", 
        "42.38656754843372`"}], "}"}], ",", "74.71341506533386`", ",", 
      "2791.0471953624283`", ",", "898.3105542689672`"}], "}"}]}], ",", 
   RowBox[{"\<\"cutoff\[CapitalLambda]bartrunc\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "1.5354915252776449`", ",", "1.5354915252776449`", ",", 
        "1.4959965017094252`"}], "}"}], ",", "2.6369440611294306`", ",", 
      "3.476736990762887`", ",", "1.1190027665634192`"}], "}"}]}], ",", 
   RowBox[{"\<\"Kmax\"\>", "\[Rule]", "21.359990685403794`"}], ",", 
   RowBox[{"\<\"Qmax\"\>", "\[Rule]", "42.71998137080759`"}], ",", 
   RowBox[{"\<\"Kbarmax\"\>", "\[Rule]", "86.45710515520584`"}], ",", 
   RowBox[{"\<\"Qbarmax\"\>", "\[Rule]", "172.91421031041168`"}], ",", 
   RowBox[{"\<\"Kbartruncmax\"\>", "\[Rule]", "3.0514272407719707`"}], ",", 
   RowBox[{"\<\"Qbartruncmax\"\>", "\[Rule]", "6.102854481543941`"}], ",", 
   RowBox[{"\<\"maxCheck\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"True", ",", "True"}], "}"}]}], ",", 
   RowBox[{"\<\"aVecs\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"42.525`", ",", "0.`", ",", "0.`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "21.2625`"}], ",", "36.82773029593325`", ",", "0.`"}], 
       "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.`", ",", "0.`", ",", "37.8`"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"\<\"bVecs\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "0.14775274090957285`", ",", "0.08530508473764693`", ",", "0.`"}], 
       "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.`", ",", "0.17061016947529387`", ",", "0.`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.`", ",", "0.`", ",", "0.16622183352326947`"}], "}"}]}], 
     "}"}]}], ",", 
   RowBox[{"\<\"basisSize\"\>", "\[Rule]", "2048383"}], ",", 
   RowBox[{"\<\"basistruncSize\"\>", "\[Rule]", "6858"}]}], 
  "\[RightAssociation]"}]], "Print",
 CellChangeTimes->{3.9626604242173157`*^9, 3.962802239275663*^9, 
  3.962991023113554*^9},
 CellLabel->
  "During evaluation of \
In[24]:=",ExpressionUUID->"4bad45e3-0b48-4aee-bad8-90cc96055b28"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Run", " ", "QRE"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"InstanceDMTMClass3Result", "=", 
     RowBox[{"EchoTiming", "@", 
      RowBox[{"CostAnalysis`fullBlockEncodingCost", "[", 
       RowBox[{
       "InstanceInputDMTMClass3", ",", "InstanceBasisDMTMClass3", ",", 
        "True"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"InstanceDMTMClass5Result", "=", 
     RowBox[{"EchoTiming", "@", 
      RowBox[{"CostAnalysis`fullBlockEncodingCost", "[", 
       RowBox[{
       "InstanceInputDMTMClass5", ",", "InstanceBasisDMTMClass5", ",", 
        "True"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"InstanceDMTMClass9Result", "=", 
     RowBox[{"EchoTiming", "@", 
      RowBox[{"CostAnalysis`fullBlockEncodingCost", "[", 
       RowBox[{
       "InstanceInputDMTMClass9", ",", "InstanceBasisDMTMClass9", ",", 
        "True"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"EchoTiming", "@", 
     RowBox[{"DumpSave", "[", 
      RowBox[{
       RowBox[{"FileNameJoin", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"NotebookDirectory", "[", "]"}], ",", 
          "\"\<InstanceDMTMClass3Result.mx\>\""}], "}"}], "]"}], ",", 
       "InstanceDMTMClass3Result"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"EchoTiming", "@", 
     RowBox[{"DumpSave", "[", 
      RowBox[{
       RowBox[{"FileNameJoin", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"NotebookDirectory", "[", "]"}], ",", 
          "\"\<InstanceDMTMClass5Result.mx\>\""}], "}"}], "]"}], ",", 
       "InstanceDMTMClass5Result"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"EchoTiming", "@", 
     RowBox[{"DumpSave", "[", 
      RowBox[{
       RowBox[{"FileNameJoin", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"NotebookDirectory", "[", "]"}], ",", 
          "\"\<InstanceDMTMClass9Result.mx\>\""}], "}"}], "]"}], ",", 
       "InstanceDMTMClass9Result"}], "]"}]}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.9626361602944813`*^9, 3.9626361717236147`*^9}, {
  3.962671473707263*^9, 3.962671547849067*^9}},
 CellLabel->"In[40]:=",ExpressionUUID->"348cf9a6-ab4d-44a0-bb89-3ff3133b4a60"],

Cell[CellGroupData[{

Cell[BoxData["127.163753`"], "EchoTiming",
 CellChangeTimes->{
  3.96299115034665*^9},ExpressionUUID->"adb06251-cf85-41eb-b0dc-af35d65a9c06"],

Cell[BoxData["127.617658`"], "EchoTiming",
 CellChangeTimes->{
  3.96299127796882*^9},ExpressionUUID->"cfd5d34e-50d9-4c4a-a534-34e48335df6c"],

Cell[BoxData["827.471774`"], "EchoTiming",
 CellChangeTimes->{
  3.962992105457994*^9},ExpressionUUID->"7c057133-9694-4e5f-9dc6-\
427934f4b5ab"],

Cell[BoxData["0.054632`"], "EchoTiming",
 CellChangeTimes->{
  3.962992105524336*^9},ExpressionUUID->"129c36a9-e3ed-4852-b86d-\
512936d3b902"],

Cell[BoxData["0.01581`"], "EchoTiming",
 CellChangeTimes->{
  3.962992105561638*^9},ExpressionUUID->"ed80b5c3-ce21-4103-a8ea-\
649a8d2929a4"],

Cell[BoxData["0.008893`"], "EchoTiming",
 CellChangeTimes->{
  3.962992105575139*^9},ExpressionUUID->"1d0560ee-4be4-45ed-8660-\
243923fa6d84"]
}, Open  ]]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"View", " ", "Results"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"viewAllResults", "[", 
   RowBox[{"InstanceDMTMClass3Result", ",", "t", ",", "\[Epsilon]"}], "]"}], 
  " "}]], "Input",
 CellChangeTimes->{{3.962636353689249*^9, 3.9626363737763166`*^9}, {
  3.9626368407445*^9, 3.962636850192977*^9}, {3.963406370401781*^9, 
  3.963406375697187*^9}},ExpressionUUID->"adbb1c29-5fc5-4c72-8afb-\
f9eb5cde685b"],

Cell[BoxData[
 RowBox[{
  RowBox[{"viewAllResults", "[", 
   RowBox[{"InstanceDMTMClass5Result", ",", "t", ",", "\[Epsilon]"}], "]"}], 
  " "}]], "Input",ExpressionUUID->"61a92703-513e-4dc9-9c23-366d0cd1ab40"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"viewAllResults", "[", 
   RowBox[{"InstanceDMTMClass9Result", ",", "t", ",", "\[Epsilon]"}], "]"}], 
  " "}]], "Input",ExpressionUUID->"e9086cc6-9119-49b8-b30a-2aadd8421d9d"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Particle Count:\"\>", "\[InvisibleSpace]", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"\[Eta]el\"\>", "\[Rule]", "101"}], ",", 
     RowBox[{"\<\"\[Eta]ion\"\>", "\[Rule]", "24"}], ",", 
     RowBox[{"\<\"\[Eta]\"\>", "\[Rule]", "125"}]}], "\[RightAssociation]"}]}],
  SequenceForm[
  "Particle Count:", <|
   "\[Eta]el" -> 101, "\[Eta]ion" -> 24, "\[Eta]" -> 125|>],
  Editable->False]], "Print",
 CellChangeTimes->{3.962708745528565*^9, 3.962803641722584*^9, 
  3.962992105609642*^9},
 CellLabel->
  "During evaluation of \
In[46]:=",ExpressionUUID->"e6c804ec-b1a3-42c8-8098-cb3dabaf8f79"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Rescaling Factors:\"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
     TagBox[
      TagBox[
       DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
        "InitialData" -> {<|"Ion" -> Row[{"B3", 
               Style["B3", 
                GrayLevel[0.5]]}, "\n"], "Tel" -> Row[{432.4615671375557, 
               Style[432.4615671375557, 
                GrayLevel[0.5]]}, "\n"], "Tion" -> Row[{2457.9517435769158`, 
               Style[2457.9517435769158`, 
                GrayLevel[0.5]]}, "\n"], "Vel" -> Row[{9.9791099723898, 
               Style[18.72271729470858, 
                GrayLevel[0.5]]}, "\n"], "Vion" -> Row[{1.1481875307645215`, 
               Style[1.9425989154164889`, 
                GrayLevel[0.5]]}, "\n"], "Loc" -> Row[{10.885494029714216`, 
               Style[11.094862778486384`, 
                GrayLevel[0.5]]}, "\n"], "NL" -> Row[{6.231722002993324, 
               Style[6.233928000000156, 
                GrayLevel[0.5]]}, "\n"]|>, <|"Ion" -> Row[{"N5", 
               Style["N5", 
                GrayLevel[0.5]]}, "\n"], "Tel" -> Row[{432.4615671375557, 
               Style[432.4615671375557, 
                GrayLevel[0.5]]}, "\n"], "Tion" -> Row[{2457.9517435769158`, 
               Style[2457.9517435769158`, 
                GrayLevel[0.5]]}, "\n"], "Vel" -> Row[{9.9791099723898, 
               Style[18.72271729470858, 
                GrayLevel[0.5]]}, "\n"], "Vion" -> Row[{1.1481875307645215`, 
               Style[1.9425989154164889`, 
                GrayLevel[0.5]]}, "\n"], "Loc" -> Row[{25.681689190702887`, 
               Style[26.030506422645928`, 
                GrayLevel[0.5]]}, "\n"], "NL" -> Row[{13.548951719971065`, 
               Style[13.55224300000034, 
                GrayLevel[0.5]]}, "\n"]|>, <|"Ion" -> Row[{"C4", 
               Style["C4", 
                GrayLevel[0.5]]}, "\n"], "Tel" -> Row[{432.4615671375557, 
               Style[432.4615671375557, 
                GrayLevel[0.5]]}, "\n"], "Tion" -> Row[{2457.9517435769158`, 
               Style[2457.9517435769158`, 
                GrayLevel[0.5]]}, "\n"], "Vel" -> Row[{9.9791099723898, 
               Style[18.72271729470858, 
                GrayLevel[0.5]]}, "\n"], "Vion" -> Row[{1.1481875307645215`, 
               Style[1.9425989154164889`, 
                GrayLevel[0.5]]}, "\n"], "Loc" -> Row[{17.383958622131388`, 
               Style[17.66303638202409, 
                GrayLevel[0.5]]}, "\n"], "NL" -> Row[{9.520968363802446, 
               Style[9.52284200000024, 
                GrayLevel[0.5]]}, "\n"]|>, <|"Ion" -> Row[{"O6", 
               Style["O6", 
                GrayLevel[0.5]]}, "\n"], "Tel" -> Row[{432.4615671375557, 
               Style[432.4615671375557, 
                GrayLevel[0.5]]}, "\n"], "Tion" -> Row[{2457.9517435769158`, 
               Style[2457.9517435769158`, 
                GrayLevel[0.5]]}, "\n"], "Vel" -> Row[{9.9791099723898, 
               Style[18.72271729470858, 
                GrayLevel[0.5]]}, "\n"], "Vion" -> Row[{1.1481875307645215`, 
               Style[1.9425989154164889`, 
                GrayLevel[0.5]]}, "\n"], "Loc" -> Row[{35.49493803501931, 
               Style[35.913522230728375`, 
                GrayLevel[0.5]]}, "\n"], "NL" -> Row[{18.24816072640366, 
               Style[18.266917000000458`, 
                GrayLevel[0.5]]}, "\n"]|>, <|"Ion" -> Row[{"H1", 
               Style["H1", 
                GrayLevel[0.5]]}, "\n"], "Tel" -> Row[{432.4615671375557, 
               Style[432.4615671375557, 
                GrayLevel[0.5]]}, "\n"], "Tion" -> Row[{2457.9517435769158`, 
               Style[2457.9517435769158`, 
                GrayLevel[0.5]]}, "\n"], "Vel" -> Row[{9.9791099723898, 
               Style[18.72271729470858, 
                GrayLevel[0.5]]}, "\n"], "Vion" -> Row[{1.1481875307645215`, 
               Style[1.9425989154164889`, 
                GrayLevel[0.5]]}, "\n"], "Loc" -> Row[{8.099430124617879, 
               Style[8.169659804014326, 
                GrayLevel[0.5]]}, "\n"], "NL" -> Row[{0., 
               Style[0., 
                GrayLevel[0.5]]}, "\n"]|>, <|"Ion" -> Row[{"Pd18", 
               Style["Pd18", 
                GrayLevel[0.5]]}, "\n"], "Tel" -> Row[{432.4615671375557, 
               Style[432.4615671375557, 
                GrayLevel[0.5]]}, "\n"], "Tion" -> Row[{2457.9517435769158`, 
               Style[2457.9517435769158`, 
                GrayLevel[0.5]]}, "\n"], "Vel" -> Row[{9.9791099723898, 
               Style[18.72271729470858, 
                GrayLevel[0.5]]}, "\n"], "Vion" -> Row[{1.1481875307645215`, 
               Style[1.9425989154164889`, 
                GrayLevel[0.5]]}, "\n"], "Loc" -> Row[{50.338419869684635`, 
               Style[51.593927279150186`, 
                GrayLevel[0.5]]}, "\n"], "NL" -> Row[{34.16056892676622, 
               Style[33.87906539367532, 
                GrayLevel[0.5]]}, "\n"]|>}, "AllowEmbedding" -> True, 
         "InitialShape" -> 
         TypeSystem`PackageScope`HeaderShape[<|{All, "Ion"} -> 
            1, {All, "Tel"} -> 1, {All, "Tion"} -> 1, {All, "Vel"} -> 
            1, {All, "Vion"} -> 1, {All, "Loc"} -> 1, {All, "NL"} -> 1|>, 
           TypeSystem`PackageScope`Limited[
            TypeSystem`PackageScope`ColumnShape[
             TypeSystem`PackageScope`Limited[
              
              TypeSystem`PackageScope`RowShape[<|
               "Ion" -> TypeSystem`PackageScope`UnknownShape[False], "Tel" -> 
                TypeSystem`PackageScope`UnknownShape[False], "Tion" -> 
                TypeSystem`PackageScope`UnknownShape[False], "Vel" -> 
                TypeSystem`PackageScope`UnknownShape[False], "Vion" -> 
                TypeSystem`PackageScope`UnknownShape[False], "Loc" -> 
                TypeSystem`PackageScope`UnknownShape[False], "NL" -> 
                TypeSystem`PackageScope`UnknownShape[False]|>], 
              DirectedInfinity[1], 7, {All}]], 6, 
            DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Vector[
           
           TypeSystem`Struct[{
            "Ion", "Tel", "Tion", "Vel", "Vion", "Loc", "NL"}, {
            TypeSystem`AnyType, TypeSystem`AnyType, TypeSystem`AnyType, 
             TypeSystem`AnyType, TypeSystem`AnyType, TypeSystem`AnyType, 
             TypeSystem`AnyType}], 6], "Meta" -> <||>, "RowTarget" -> 20, 
         "ColumnTarget" -> 10, "Shape" -> 
         TypeSystem`PackageScope`HeaderShape[<|{All, "Ion"} -> 
            1, {All, "Tel"} -> 1, {All, "Tion"} -> 1, {All, "Vel"} -> 
            1, {All, "Vion"} -> 1, {All, "Loc"} -> 1, {All, "NL"} -> 1|>, 
           TypeSystem`PackageScope`Limited[
            TypeSystem`PackageScope`ColumnShape[
             TypeSystem`PackageScope`Limited[
              
              TypeSystem`PackageScope`RowShape[<|
               "Ion" -> TypeSystem`PackageScope`UnknownShape[False], "Tel" -> 
                TypeSystem`PackageScope`UnknownShape[False], "Tion" -> 
                TypeSystem`PackageScope`UnknownShape[False], "Vel" -> 
                TypeSystem`PackageScope`UnknownShape[False], "Vion" -> 
                TypeSystem`PackageScope`UnknownShape[False], "Loc" -> 
                TypeSystem`PackageScope`UnknownShape[False], "NL" -> 
                TypeSystem`PackageScope`UnknownShape[False]|>], 
              DirectedInfinity[1], 7, {All}]], 6, 
            DirectedInfinity[1], {}]], "Type" -> TypeSystem`Vector[
           
           TypeSystem`Struct[{
            "Ion", "Tel", "Tion", "Vel", "Vion", "Loc", "NL"}, {
            TypeSystem`AnyType, TypeSystem`AnyType, TypeSystem`AnyType, 
             TypeSystem`AnyType, TypeSystem`AnyType, TypeSystem`AnyType, 
             TypeSystem`AnyType}], 6], "Path" -> {}, "DisplayedRowCount" -> 6,
          "DisplayedColumnCount" -> 7, "DataRowCount" -> 6, "DataColumnCount" -> 
         7, "SortPaths" -> {}, "SortDirections" -> {}, "HiddenItemsMap" -> 
         Null, "UpdateType" -> 1|>, 
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
        DynamicModule[{
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
            Style[
             Grid[{{
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["Ion", 
                    Style[
                    "Ion", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "Ion"}, 1]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "Ion"}, "ColumnHeader", True], "Mouse"], 
                  ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["Tel", 
                    Style[
                    "Tel", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "Tel"}, 1]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "Tel"}, "ColumnHeader", True], "Mouse"], 
                  ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["Tion", 
                    Style[
                    "Tion", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "Tion"}, 1]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "Tion"}, "ColumnHeader", True], "Mouse"], 
                  ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["Vel", 
                    Style[
                    "Vel", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "Vel"}, 1]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "Vel"}, "ColumnHeader", True], "Mouse"], 
                  ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["Vion", 
                    Style[
                    "Vion", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "Vion"}, 1]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "Vion"}, "ColumnHeader", True], "Mouse"], 
                  ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["Loc", 
                    Style[
                    "Loc", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "Loc"}, 1]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "Loc"}, "ColumnHeader", True], "Mouse"], 
                  ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["NL", 
                    Style[
                    "NL", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "NL"}, 1]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "NL"}, "ColumnHeader", True], "Mouse"], 
                  ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
                Item[
                 Pane[
                  Annotation[
                   Row[{"B3", 
                    Style["B3", 
                    GrayLevel[0.5]]}, "\n"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                    Key["Ion"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   Row[{432.4615671375557, 
                    Style[432.4615671375557, 
                    GrayLevel[0.5]]}, "\n"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                    Key["Tel"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   Row[{2457.9517435769158`, 
                    Style[2457.9517435769158`, 
                    GrayLevel[0.5]]}, "\n"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                    Key["Tion"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   Row[{9.9791099723898, 
                    Style[18.72271729470858, 
                    GrayLevel[0.5]]}, "\n"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                    Key["Vel"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   Row[{1.1481875307645215`, 
                    Style[1.9425989154164889`, 
                    GrayLevel[0.5]]}, "\n"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                    Key["Vion"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   Row[{10.885494029714216`, 
                    Style[11.094862778486384`, 
                    GrayLevel[0.5]]}, "\n"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                    Key["Loc"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   Row[{6.231722002993324, 
                    Style[6.233928000000156, 
                    GrayLevel[0.5]]}, "\n"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                    Key["NL"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   Row[{"N5", 
                    Style["N5", 
                    GrayLevel[0.5]]}, "\n"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                    Key["Ion"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   Row[{432.4615671375557, 
                    Style[432.4615671375557, 
                    GrayLevel[0.5]]}, "\n"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                    Key["Tel"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   Row[{2457.9517435769158`, 
                    Style[2457.9517435769158`, 
                    GrayLevel[0.5]]}, "\n"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                    Key["Tion"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   Row[{9.9791099723898, 
                    Style[18.72271729470858, 
                    GrayLevel[0.5]]}, "\n"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                    Key["Vel"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   Row[{1.1481875307645215`, 
                    Style[1.9425989154164889`, 
                    GrayLevel[0.5]]}, "\n"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                    Key["Vion"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   Row[{25.681689190702887`, 
                    Style[26.030506422645928`, 
                    GrayLevel[0.5]]}, "\n"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                    Key["Loc"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   Row[{13.548951719971065`, 
                    Style[13.55224300000034, 
                    GrayLevel[0.5]]}, "\n"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                    Key["NL"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   Row[{"C4", 
                    Style["C4", 
                    GrayLevel[0.5]]}, "\n"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                    Key["Ion"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   Row[{432.4615671375557, 
                    Style[432.4615671375557, 
                    GrayLevel[0.5]]}, "\n"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                    Key["Tel"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   Row[{2457.9517435769158`, 
                    Style[2457.9517435769158`, 
                    GrayLevel[0.5]]}, "\n"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                    Key["Tion"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   Row[{9.9791099723898, 
                    Style[18.72271729470858, 
                    GrayLevel[0.5]]}, "\n"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                    Key["Vel"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   Row[{1.1481875307645215`, 
                    Style[1.9425989154164889`, 
                    GrayLevel[0.5]]}, "\n"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                    Key["Vion"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   Row[{17.383958622131388`, 
                    Style[17.66303638202409, 
                    GrayLevel[0.5]]}, "\n"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                    Key["Loc"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   Row[{9.520968363802446, 
                    Style[9.52284200000024, 
                    GrayLevel[0.5]]}, "\n"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                    Key["NL"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   Row[{"O6", 
                    Style["O6", 
                    GrayLevel[0.5]]}, "\n"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                    Key["Ion"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   Row[{432.4615671375557, 
                    Style[432.4615671375557, 
                    GrayLevel[0.5]]}, "\n"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                    Key["Tel"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   Row[{2457.9517435769158`, 
                    Style[2457.9517435769158`, 
                    GrayLevel[0.5]]}, "\n"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                    Key["Tion"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   Row[{9.9791099723898, 
                    Style[18.72271729470858, 
                    GrayLevel[0.5]]}, "\n"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                    Key["Vel"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   Row[{1.1481875307645215`, 
                    Style[1.9425989154164889`, 
                    GrayLevel[0.5]]}, "\n"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                    Key["Vion"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   Row[{35.49493803501931, 
                    Style[35.913522230728375`, 
                    GrayLevel[0.5]]}, "\n"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                    Key["Loc"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   Row[{18.24816072640366, 
                    Style[18.266917000000458`, 
                    GrayLevel[0.5]]}, "\n"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                    Key["NL"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   Row[{"H1", 
                    Style["H1", 
                    GrayLevel[0.5]]}, "\n"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                    Key["Ion"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   Row[{432.4615671375557, 
                    Style[432.4615671375557, 
                    GrayLevel[0.5]]}, "\n"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                    Key["Tel"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   Row[{2457.9517435769158`, 
                    Style[2457.9517435769158`, 
                    GrayLevel[0.5]]}, "\n"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                    Key["Tion"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   Row[{9.9791099723898, 
                    Style[18.72271729470858, 
                    GrayLevel[0.5]]}, "\n"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                    Key["Vel"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   Row[{1.1481875307645215`, 
                    Style[1.9425989154164889`, 
                    GrayLevel[0.5]]}, "\n"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                    Key["Vion"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   Row[{8.099430124617879, 
                    Style[8.169659804014326, 
                    GrayLevel[0.5]]}, "\n"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                    Key["Loc"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   Row[{0., 
                    Style[0., 
                    GrayLevel[0.5]]}, "\n"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                    Key["NL"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   Row[{"Pd18", 
                    Style["Pd18", 
                    GrayLevel[0.5]]}, "\n"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                    Key["Ion"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   Row[{432.4615671375557, 
                    Style[432.4615671375557, 
                    GrayLevel[0.5]]}, "\n"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                    Key["Tel"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   Row[{2457.9517435769158`, 
                    Style[2457.9517435769158`, 
                    GrayLevel[0.5]]}, "\n"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                    Key["Tion"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   Row[{9.9791099723898, 
                    Style[18.72271729470858, 
                    GrayLevel[0.5]]}, "\n"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                    Key["Vel"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   Row[{1.1481875307645215`, 
                    Style[1.9425989154164889`, 
                    GrayLevel[0.5]]}, "\n"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                    Key["Vion"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   Row[{50.338419869684635`, 
                    Style[51.593927279150186`, 
                    GrayLevel[0.5]]}, "\n"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                    Key["Loc"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   Row[{34.16056892676622, 
                    Style[33.87906539367532, 
                    GrayLevel[0.5]]}, "\n"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                    Key["NL"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}}, 
              BaseStyle -> {
               ContextMenu -> 
                Dynamic[
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                  Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger, TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu,
                     True, TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger = 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                    TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                    Block[{TypeSystem`NestedGrid`PackagePrivate`$\
globalScrollPos = {TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                    
                    With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
                "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, 
              Dividers -> All, FrameStyle -> GrayLevel[0.7490196078431373], 
              Spacings -> {0, 0}, Alignment -> Left, 
              BaseStyle -> {
               FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
                Plain}], LineBreakWithin -> False, ContextMenu -> {}, 
             NumberMarks -> False, ShowAutoStyles -> False]], 
          TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
         Dynamic[
          TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
          TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
             Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
             
             Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
               TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
               TypeSystem`NestedGrid`PackagePrivate`datasetData[
                TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
              TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
                 FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
                 TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                 TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                 TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
                Not[
                 FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
                TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
                TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
           TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
           TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
           TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
             TypeSystem`SparseGrid[
              TypeSystem`H["(data no longer present)"]], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
          TrackedSymbols :> {
           TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
         DynamicModuleValues :> {}], 
        TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
         TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
          TypeSystem`PackageScope`SubViewPathbar[
          TypeSystem`NestedGrid`PackagePrivate`$path$$, 
           TypeSystem`NestedGrid`PackagePrivate`updateState[
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
            TypeSystem`NestedGrid`PackagePrivate`$path$$, 
            TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
            TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
         TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
        TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
         Framed[
          Dynamic[
           Replace[
           TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
            TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               TypeSystem`NestedGrid`PackagePrivate`localHold[
               TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
               Blank[]] -> "", 
             TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               TypeSystem`NestedGrid`PackagePrivate`localHold[
               TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
               Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
                Blank[]], 
               Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
                Blank[]], 
               Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                Blank[]]] :> (
              Increment[
               TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
              TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
               TypeSystem`NestedGrid`PackagePrivate`path$; 
              TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
               TypeSystem`NestedGrid`PackagePrivate`pathType$; 
              TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
               TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
              TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
               TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
              TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
               TypeSystem`NestedGrid`PackagePrivate`path$, 
                TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
             Spacer[10], Blank[] :> Spacer[10]}], 
           TrackedSymbols :> {
            TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], 
          FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
          Top, ImageSize -> {Automatic, 15}], FontSize -> 1], 
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
        DynamicWrapperBox[
         DynamicBox[ToBoxes[
           Dataset`DatasetContent[
           2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
            "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], 
            "State" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], 
            "VPos" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], 
            "HPos" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], 
            "TopBar" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], 
            "BottomBar" -> 
            Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], 
            "OutputID" -> Hold[
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], 
           StandardForm],
          ImageSizeCache->{478., {167.3544921875, 172.6455078125}},
          
          TrackedSymbols:>{
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
            TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
         TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
         MouseAnnotation[],
         ImageSizeCache->{478., {167.3544921875, 172.6455078125}}],
        BaseStyle->{LineBreakWithin -> False},
        DynamicModuleValues:>{},
        Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
         CreateUUID[]),
        UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
       
       Deploy,
       DefaultBaseStyle->"Deploy"],
      Dataset`InterpretDataset[1],
      Editable->False,
      SelectWithContents->True,
      Selectable->False], ",", 
     TagBox[
      TagBox[
       DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
        "InitialData" -> {<|
           "Tel" -> 43678.618280893126`, "Tion" -> 7.427778250633906, "Vel" -> 
            100789.01072113698`, "Vion" -> 10935.338043001302`, "Loc" -> 
            45837.253389914, "NL" -> 23606.127991586505`, "Total" -> 
            224853.77620478254`|>, <|
           "Tel" -> 43678.618280893126`, "Tion" -> 7.427778250633906, "Vel" -> 
            189099.44467655665`, "Vion" -> 18501.31207042664, "Loc" -> 
            46549.141099106106`, "NL" -> 23584.553974761715`, "Total" -> 
            321420.49787999486`|>, <|
           "Tel" -> 1., "Tion" -> 1., "Vel" -> 1.8761910978544774`, "Vion" -> 
            1.6918829575888252`, "Loc" -> 1.0155307671499518`, "NL" -> 
            0.9990860840527307, "Total" -> 1.4294645315952599`|>}, 
         "AllowEmbedding" -> True, "InitialShape" -> 
         TypeSystem`PackageScope`HeaderShape[<|{All, "Tel"} -> 
            1, {All, "Tion"} -> 1, {All, "Vel"} -> 1, {All, "Vion"} -> 
            1, {All, "Loc"} -> 1, {All, "NL"} -> 1, {All, "Total"} -> 1|>, 
           TypeSystem`PackageScope`Limited[
            TypeSystem`PackageScope`ColumnShape[
             TypeSystem`PackageScope`Limited[
              
              TypeSystem`PackageScope`RowShape[<|
               "Tel" -> TypeSystem`PackageScope`AtomShape[60], "Tion" -> 
                TypeSystem`PackageScope`AtomShape[60], "Vel" -> 
                TypeSystem`PackageScope`AtomShape[60], "Vion" -> 
                TypeSystem`PackageScope`AtomShape[60], "Loc" -> 
                TypeSystem`PackageScope`AtomShape[60], "NL" -> 
                TypeSystem`PackageScope`AtomShape[60], "Total" -> 
                TypeSystem`PackageScope`AtomShape[60]|>], 
              DirectedInfinity[1], 7, {All}]], 3, 
            DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Vector[
           
           TypeSystem`Struct[{
            "Tel", "Tion", "Vel", "Vion", "Loc", "NL", "Total"}, {
             TypeSystem`Atom[Real], 
             TypeSystem`Atom[Real], 
             TypeSystem`Atom[Real], 
             TypeSystem`Atom[Real], 
             TypeSystem`Atom[Real], 
             TypeSystem`Atom[Real], 
             TypeSystem`Atom[Real]}], 3], "Meta" -> <||>, "RowTarget" -> 20, 
         "ColumnTarget" -> 10, "Shape" -> 
         TypeSystem`PackageScope`HeaderShape[<|{All, "Tel"} -> 
            1, {All, "Tion"} -> 1, {All, "Vel"} -> 1, {All, "Vion"} -> 
            1, {All, "Loc"} -> 1, {All, "NL"} -> 1, {All, "Total"} -> 1|>, 
           TypeSystem`PackageScope`Limited[
            TypeSystem`PackageScope`ColumnShape[
             TypeSystem`PackageScope`Limited[
              
              TypeSystem`PackageScope`RowShape[<|
               "Tel" -> TypeSystem`PackageScope`AtomShape[60], "Tion" -> 
                TypeSystem`PackageScope`AtomShape[60], "Vel" -> 
                TypeSystem`PackageScope`AtomShape[60], "Vion" -> 
                TypeSystem`PackageScope`AtomShape[60], "Loc" -> 
                TypeSystem`PackageScope`AtomShape[60], "NL" -> 
                TypeSystem`PackageScope`AtomShape[60], "Total" -> 
                TypeSystem`PackageScope`AtomShape[60]|>], 
              DirectedInfinity[1], 7, {All}]], 3, 
            DirectedInfinity[1], {}]], "Type" -> TypeSystem`Vector[
           
           TypeSystem`Struct[{
            "Tel", "Tion", "Vel", "Vion", "Loc", "NL", "Total"}, {
             TypeSystem`Atom[Real], 
             TypeSystem`Atom[Real], 
             TypeSystem`Atom[Real], 
             TypeSystem`Atom[Real], 
             TypeSystem`Atom[Real], 
             TypeSystem`Atom[Real], 
             TypeSystem`Atom[Real]}], 3], "Path" -> {}, "DisplayedRowCount" -> 
         3, "DisplayedColumnCount" -> 7, "DataRowCount" -> 3, 
         "DataColumnCount" -> 7, "SortPaths" -> {}, "SortDirections" -> {}, 
         "HiddenItemsMap" -> Null, "UpdateType" -> 1|>, 
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
        DynamicModule[{
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
            Style[
             Grid[{{
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["Tel", 
                    Style[
                    "Tel", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "Tel"}, 1]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "Tel"}, "ColumnHeader", True], "Mouse"], 
                  ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["Tion", 
                    Style[
                    "Tion", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "Tion"}, 1]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "Tion"}, "ColumnHeader", True], "Mouse"], 
                  ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["Vel", 
                    Style[
                    "Vel", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "Vel"}, 1]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "Vel"}, "ColumnHeader", True], "Mouse"], 
                  ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["Vion", 
                    Style[
                    "Vion", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "Vion"}, 1]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "Vion"}, "ColumnHeader", True], "Mouse"], 
                  ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["Loc", 
                    Style[
                    "Loc", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "Loc"}, 1]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "Loc"}, "ColumnHeader", True], "Mouse"], 
                  ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["NL", 
                    Style[
                    "NL", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "NL"}, 1]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "NL"}, "ColumnHeader", True], "Mouse"], 
                  ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["Total", 
                    Style[
                    "Total", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "Total"}, 1]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "Total"}, "ColumnHeader", True], "Mouse"], 
                  ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["43678.6"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                    Key["Tel"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["7.42778"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                    Key["Tion"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["100789."], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                    Key["Vel"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["10935.3"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                    Key["Vion"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["45837.3"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                    Key["Loc"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["23606.1"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                    Key["NL"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["224854."], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                    Key["Total"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["43678.6"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                    Key["Tel"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["7.42778"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                    Key["Tion"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["189099."], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                    Key["Vel"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["18501.3"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                    Key["Vion"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["46549.1"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                    Key["Loc"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["23584.6"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                    Key["NL"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["321420."], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                    Key["Total"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["1.0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                    Key["Tel"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["1.0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                    Key["Tion"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["1.87619"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                    Key["Vel"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["1.69188"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                    Key["Vion"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["1.01553"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                    Key["Loc"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0.999086"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                    Key["NL"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["1.42946"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                    Key["Total"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}}, 
              BaseStyle -> {
               ContextMenu -> 
                Dynamic[
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                  Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger, TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu,
                     True, TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger = 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                    TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                    Block[{TypeSystem`NestedGrid`PackagePrivate`$\
globalScrollPos = {TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                    
                    With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
                "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, 
              Dividers -> All, FrameStyle -> GrayLevel[0.7490196078431373], 
              Spacings -> {0, 0}, Alignment -> Left, 
              BaseStyle -> {
               FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
                Plain}], LineBreakWithin -> False, ContextMenu -> {}, 
             NumberMarks -> False, ShowAutoStyles -> False]], 
          TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
         Dynamic[
          TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
          TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
             Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
             Module[{
              TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
               TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
               TypeSystem`NestedGrid`PackagePrivate`datasetData[
                TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
              TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
                 FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
                 TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                 TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                 TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
                Not[
                 FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
                TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
                TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
           TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
           TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
           TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
             TypeSystem`SparseGrid[
              TypeSystem`H["(data no longer present)"]], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
          TrackedSymbols :> {
           TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
         DynamicModuleValues :> {}], 
        TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
         TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
          TypeSystem`PackageScope`SubViewPathbar[
          TypeSystem`NestedGrid`PackagePrivate`$path$$, 
           TypeSystem`NestedGrid`PackagePrivate`updateState[
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
            TypeSystem`NestedGrid`PackagePrivate`$path$$, 
            TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
            TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
         TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
        TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
         Framed[
          Dynamic[
           Replace[
           TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
            TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               TypeSystem`NestedGrid`PackagePrivate`localHold[
               TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
               Blank[]] -> "", 
             TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               TypeSystem`NestedGrid`PackagePrivate`localHold[
               TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
               Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
                Blank[]], 
               Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
                Blank[]], 
               Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                Blank[]]] :> (
              Increment[
               TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
              TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
               TypeSystem`NestedGrid`PackagePrivate`path$; 
              TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
               TypeSystem`NestedGrid`PackagePrivate`pathType$; 
              TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
               TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
              TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
               TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
              TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
               TypeSystem`NestedGrid`PackagePrivate`path$, 
                TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
             Spacer[10], Blank[] :> Spacer[10]}], 
           TrackedSymbols :> {
            TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], 
          FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
          Top, ImageSize -> {Automatic, 15}], FontSize -> 1], 
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
        DynamicWrapperBox[
         DynamicBox[ToBoxes[
           Dataset`DatasetContent[
           2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
            "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], 
            "State" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], 
            "VPos" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], 
            "HPos" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], 
            "TopBar" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], 
            "BottomBar" -> 
            Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], 
            "OutputID" -> Hold[
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], 
           StandardForm],
          ImageSizeCache->{478., {60.8544921875, 66.1455078125}},
          
          TrackedSymbols:>{
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
            TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
         TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
         MouseAnnotation[],
         ImageSizeCache->{478., {60.8544921875, 66.1455078125}}],
        BaseStyle->{LineBreakWithin -> False},
        DynamicModuleValues:>{},
        Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
         CreateUUID[]),
        UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
       
       Deploy,
       DefaultBaseStyle->"Deploy"],
      Dataset`InterpretDataset[1],
      Editable->False,
      SelectWithContents->True,
      Selectable->False]}], "}"}]}],
  SequenceForm["Rescaling Factors:", {
    Dataset[{<|"Ion" -> Row[{"B3", 
          Style["B3", 
           GrayLevel[0.5]]}, "\n"], "Tel" -> Row[{432.4615671375557, 
          Style[432.4615671375557, 
           GrayLevel[0.5]]}, "\n"], "Tion" -> Row[{2457.9517435769158`, 
          Style[2457.9517435769158`, 
           GrayLevel[0.5]]}, "\n"], "Vel" -> Row[{9.9791099723898, 
          Style[18.72271729470858, 
           GrayLevel[0.5]]}, "\n"], "Vion" -> Row[{1.1481875307645215`, 
          Style[1.9425989154164889`, 
           GrayLevel[0.5]]}, "\n"], "Loc" -> Row[{10.885494029714216`, 
          Style[11.094862778486384`, 
           GrayLevel[0.5]]}, "\n"], "NL" -> Row[{6.231722002993324, 
          Style[6.233928000000156, 
           GrayLevel[0.5]]}, "\n"]|>, <|"Ion" -> Row[{"N5", 
          Style["N5", 
           GrayLevel[0.5]]}, "\n"], "Tel" -> Row[{432.4615671375557, 
          Style[432.4615671375557, 
           GrayLevel[0.5]]}, "\n"], "Tion" -> Row[{2457.9517435769158`, 
          Style[2457.9517435769158`, 
           GrayLevel[0.5]]}, "\n"], "Vel" -> Row[{9.9791099723898, 
          Style[18.72271729470858, 
           GrayLevel[0.5]]}, "\n"], "Vion" -> Row[{1.1481875307645215`, 
          Style[1.9425989154164889`, 
           GrayLevel[0.5]]}, "\n"], "Loc" -> Row[{25.681689190702887`, 
          Style[26.030506422645928`, 
           GrayLevel[0.5]]}, "\n"], "NL" -> Row[{13.548951719971065`, 
          Style[13.55224300000034, 
           GrayLevel[0.5]]}, "\n"]|>, <|"Ion" -> Row[{"C4", 
          Style["C4", 
           GrayLevel[0.5]]}, "\n"], "Tel" -> Row[{432.4615671375557, 
          Style[432.4615671375557, 
           GrayLevel[0.5]]}, "\n"], "Tion" -> Row[{2457.9517435769158`, 
          Style[2457.9517435769158`, 
           GrayLevel[0.5]]}, "\n"], "Vel" -> Row[{9.9791099723898, 
          Style[18.72271729470858, 
           GrayLevel[0.5]]}, "\n"], "Vion" -> Row[{1.1481875307645215`, 
          Style[1.9425989154164889`, 
           GrayLevel[0.5]]}, "\n"], "Loc" -> Row[{17.383958622131388`, 
          Style[17.66303638202409, 
           GrayLevel[0.5]]}, "\n"], "NL" -> Row[{9.520968363802446, 
          Style[9.52284200000024, 
           GrayLevel[0.5]]}, "\n"]|>, <|"Ion" -> Row[{"O6", 
          Style["O6", 
           GrayLevel[0.5]]}, "\n"], "Tel" -> Row[{432.4615671375557, 
          Style[432.4615671375557, 
           GrayLevel[0.5]]}, "\n"], "Tion" -> Row[{2457.9517435769158`, 
          Style[2457.9517435769158`, 
           GrayLevel[0.5]]}, "\n"], "Vel" -> Row[{9.9791099723898, 
          Style[18.72271729470858, 
           GrayLevel[0.5]]}, "\n"], "Vion" -> Row[{1.1481875307645215`, 
          Style[1.9425989154164889`, 
           GrayLevel[0.5]]}, "\n"], "Loc" -> Row[{35.49493803501931, 
          Style[35.913522230728375`, 
           GrayLevel[0.5]]}, "\n"], "NL" -> Row[{18.24816072640366, 
          Style[18.266917000000458`, 
           GrayLevel[0.5]]}, "\n"]|>, <|"Ion" -> Row[{"H1", 
          Style["H1", 
           GrayLevel[0.5]]}, "\n"], "Tel" -> Row[{432.4615671375557, 
          Style[432.4615671375557, 
           GrayLevel[0.5]]}, "\n"], "Tion" -> Row[{2457.9517435769158`, 
          Style[2457.9517435769158`, 
           GrayLevel[0.5]]}, "\n"], "Vel" -> Row[{9.9791099723898, 
          Style[18.72271729470858, 
           GrayLevel[0.5]]}, "\n"], "Vion" -> Row[{1.1481875307645215`, 
          Style[1.9425989154164889`, 
           GrayLevel[0.5]]}, "\n"], "Loc" -> Row[{8.099430124617879, 
          Style[8.169659804014326, 
           GrayLevel[0.5]]}, "\n"], "NL" -> Row[{0., 
          Style[0., 
           GrayLevel[0.5]]}, "\n"]|>, <|"Ion" -> Row[{"Pd18", 
          Style["Pd18", 
           GrayLevel[0.5]]}, "\n"], "Tel" -> Row[{432.4615671375557, 
          Style[432.4615671375557, 
           GrayLevel[0.5]]}, "\n"], "Tion" -> Row[{2457.9517435769158`, 
          Style[2457.9517435769158`, 
           GrayLevel[0.5]]}, "\n"], "Vel" -> Row[{9.9791099723898, 
          Style[18.72271729470858, 
           GrayLevel[0.5]]}, "\n"], "Vion" -> Row[{1.1481875307645215`, 
          Style[1.9425989154164889`, 
           GrayLevel[0.5]]}, "\n"], "Loc" -> Row[{50.338419869684635`, 
          Style[51.593927279150186`, 
           GrayLevel[0.5]]}, "\n"], "NL" -> Row[{34.16056892676622, 
          Style[33.87906539367532, 
           GrayLevel[0.5]]}, "\n"]|>}, 
     TypeSystem`Vector[
      TypeSystem`Struct[{"Ion", "Tel", "Tion", "Vel", "Vion", "Loc", "NL"}, {
       TypeSystem`AnyType, TypeSystem`AnyType, TypeSystem`AnyType, 
        TypeSystem`AnyType, TypeSystem`AnyType, TypeSystem`AnyType, 
        TypeSystem`AnyType}], 6], <||>], 
    Dataset[{<|
      "Tel" -> 43678.618280893126`, "Tion" -> 7.427778250633906, "Vel" -> 
       100789.01072113698`, "Vion" -> 10935.338043001302`, "Loc" -> 
       45837.253389914, "NL" -> 23606.127991586505`, "Total" -> 
       224853.77620478254`|>, <|
      "Tel" -> 43678.618280893126`, "Tion" -> 7.427778250633906, "Vel" -> 
       189099.44467655665`, "Vion" -> 18501.31207042664, "Loc" -> 
       46549.141099106106`, "NL" -> 23584.553974761715`, "Total" -> 
       321420.49787999486`|>, <|
      "Tel" -> 1., "Tion" -> 1., "Vel" -> 1.8761910978544774`, "Vion" -> 
       1.6918829575888252`, "Loc" -> 1.0155307671499518`, "NL" -> 
       0.9990860840527307, "Total" -> 1.4294645315952599`|>}, 
     TypeSystem`Vector[
      TypeSystem`Struct[{"Tel", "Tion", "Vel", "Vion", "Loc", "NL", "Total"}, {
        TypeSystem`Atom[Real], 
        TypeSystem`Atom[Real], 
        TypeSystem`Atom[Real], 
        TypeSystem`Atom[Real], 
        TypeSystem`Atom[Real], 
        TypeSystem`Atom[Real], 
        TypeSystem`Atom[Real]}], 3], <||>]}],
  Editable->False]], "Print",
 CellChangeTimes->{3.962708745528565*^9, 3.962803641722584*^9, 
  3.962992105637342*^9},
 CellLabel->
  "During evaluation of \
In[46]:=",ExpressionUUID->"55377e6d-1f1a-448c-a27c-1a2d1250ef63"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Compilation Cost:\"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "10416", ",", "7136", ",", "10846", ",", "1578", ",", "161314"}], "}"}],
      ",", "191290"}], "}"}]}],
  SequenceForm[
  "Compilation Cost:", {{10416, 7136, 10846, 1578, 161314}, 191290}],
  Editable->False]], "Print",
 CellChangeTimes->{3.962708745528565*^9, 3.962803641722584*^9, 
  3.962992105735529*^9},
 CellLabel->
  "During evaluation of \
In[46]:=",ExpressionUUID->"e871f002-e46c-4a62-8817-86c9d514aa9c"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Qubit Cost:\"\>", "\[InvisibleSpace]", "2471"}],
  SequenceForm["Qubit Cost:", 2471],
  Editable->False]], "Print",
 CellChangeTimes->{3.962708745528565*^9, 3.962803641722584*^9, 
  3.962992105735909*^9},
 CellLabel->
  "During evaluation of \
In[46]:=",ExpressionUUID->"f2f4d669-9249-42d9-8e43-8e436d6451f8"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Time Evolution Cost:\"\>", "\[InvisibleSpace]", 
   TagBox[
    TagBox[
     DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
      "InitialData" -> <|
        "exact" -> <|
          "query" -> 2 + 
            Ceiling[305607.9669589286 $CellContext`t + 
              Log[2.9552401942122875`/$CellContext`\[Epsilon]]], 
           "compilation" -> ScientificForm[191290., 5], "total" -> 
           191290 (2 + 
             Ceiling[305607.9669589286 $CellContext`t + 
               Log[2.9552401942122875`/$CellContext`\[Epsilon]]])|>, 
         "bound" -> <|
          "query" -> 2 + 
            Ceiling[436855.74934072455` $CellContext`t + 
              Log[2.9552401942122875`/$CellContext`\[Epsilon]]], 
           "compilation" -> ScientificForm[191290., 5], "total" -> 
           191290 (2 + 
             Ceiling[436855.74934072455` $CellContext`t + 
               Log[2.9552401942122875`/$CellContext`\[Epsilon]]])|>|>, 
       "AllowEmbedding" -> True, "InitialShape" -> 
       TypeSystem`PackageScope`HeaderShape[<|{All, 
            TypeSystem`PackageScope`KeyDummy[2]} -> 1, {All, "query"} -> 
          1, {All, "compilation"} -> 1, {All, "total"} -> 1|>, 
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`ColumnShape[
           TypeSystem`PackageScope`KeyValueShape[
            TypeSystem`PackageScope`AtomShape[56.00000000000001], 
            TypeSystem`PackageScope`Limited[
             
             TypeSystem`PackageScope`RowShape[<|
              "query" -> TypeSystem`PackageScope`UnknownShape[False], 
               "compilation" -> TypeSystem`PackageScope`UnknownShape[False], 
               "total" -> TypeSystem`PackageScope`UnknownShape[False]|>], 
             DirectedInfinity[1], 3, {All}]]], 2, 
          DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Assoc[
         TypeSystem`Atom[String], 
         TypeSystem`Struct[{"query", "compilation", "total"}, {
          TypeSystem`AnyType, TypeSystem`AnyType, TypeSystem`AnyType}], 2], 
       "Meta" -> <||>, "RowTarget" -> 20, "ColumnTarget" -> 10, "Shape" -> 
       TypeSystem`PackageScope`HeaderShape[<|{All, 
            TypeSystem`PackageScope`KeyDummy[2]} -> 1, {All, "query"} -> 
          1, {All, "compilation"} -> 1, {All, "total"} -> 1|>, 
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`ColumnShape[
           TypeSystem`PackageScope`KeyValueShape[
            TypeSystem`PackageScope`AtomShape[56.00000000000001], 
            TypeSystem`PackageScope`Limited[
             
             TypeSystem`PackageScope`RowShape[<|
              "query" -> TypeSystem`PackageScope`UnknownShape[False], 
               "compilation" -> TypeSystem`PackageScope`UnknownShape[False], 
               "total" -> TypeSystem`PackageScope`UnknownShape[False]|>], 
             DirectedInfinity[1], 3, {All}]]], 2, 
          DirectedInfinity[1], {}]], "Type" -> TypeSystem`Assoc[
         TypeSystem`Atom[String], 
         TypeSystem`Struct[{"query", "compilation", "total"}, {
          TypeSystem`AnyType, TypeSystem`AnyType, TypeSystem`AnyType}], 2], 
       "Path" -> {}, "DisplayedRowCount" -> 2, "DisplayedColumnCount" -> 3, 
       "DataRowCount" -> 2, "DataColumnCount" -> 3, "SortPaths" -> {}, 
       "SortDirections" -> {}, "HiddenItemsMap" -> Null, "UpdateType" -> 1|>, 
      TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
      TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
      TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
      TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
      TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
      DynamicModule[{
       TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
          Style[
           Grid[{{
              Item[
               Pane[
                Annotation[
                 Mouseover[
                  
                  Graphics[{}, ImageSize -> 6, BaselinePosition -> 
                   Scaled[-0.15]], 
                  Graphics[{
                    GrayLevel[0.6], 
                    
                    Polygon[{{2^Rational[-1, 2], -2^Rational[-1, 2]}, {
                    2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], -2^
                    Rational[-1, 2]}}]}, ImageSize -> 6, BaselinePosition -> 
                   Scaled[-0.15]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                  All, Keys}, "KeyDummy", True], "Mouse"], 
                ImageSize -> {{1, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
               GrayLevel[0.95], Alignment -> {Left, Baseline}], 
              Item[
               Pane[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["query", 
                    Style[
                    "query", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "query"}, 1]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                  All, "query"}, "ColumnHeader", True], "Mouse"], 
                ImageSize -> {{1, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
               GrayLevel[0.95], Alignment -> {Left, Baseline}], 
              Item[
               Pane[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["compilation", 
                    Style[
                    "compilation", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "compilation"}, 1]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                  All, "compilation"}, "ColumnHeader", True], "Mouse"], 
                ImageSize -> {{1, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
               GrayLevel[0.95], Alignment -> {Left, Baseline}], 
              Item[
               Pane[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["total", 
                    Style[
                    "total", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "total"}, 1]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                  All, "total"}, "ColumnHeader", True], "Mouse"], 
                ImageSize -> {{1, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
               GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
              Item[
               Pane[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["exact", 
                    Style[
                    "exact", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["exact"]}, 1]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["exact"]}, "RowHeader", False], "Mouse"], 
                ImageSize -> {{56.00000000000001, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
               GrayLevel[0.95], Alignment -> {Left, Baseline}], 
              Item[
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   RowBox[{"2", "+", 
                    RowBox[{"Ceiling", "[", 
                    RowBox[{
                    RowBox[{"305607.9669589286`", " ", "t"}], "+", 
                    RowBox[{"Log", "[", 
                    FractionBox["2.9552401942122875`", "\[Epsilon]"], "]"}]}],
                     "]"}]}], FontFamily -> Dynamic[
                    CurrentValue[{"StyleHints", "CodeFont"}]], 
                   ShowStringCharacters -> True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["exact"], 
                   Key["query"]}, "Item", False], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}], 
              Item[
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   TagBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"\"1.9129\"", "\[Times]", 
                    SuperscriptBox["10", "\"5\""]}], ShowStringCharacters -> 
                    False], 191290., AutoDelete -> True], 
                    ScientificForm[#, 5]& ], FontFamily -> Dynamic[
                    CurrentValue[{"StyleHints", "CodeFont"}]], 
                   ShowStringCharacters -> True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["exact"], 
                   Key["compilation"]}, "Item", False], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}], 
              Item[
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   RowBox[{"191290", " ", 
                    RowBox[{"(", 
                    RowBox[{"2", "+", 
                    RowBox[{"Ceiling", "[", 
                    RowBox[{
                    RowBox[{"305607.9669589286`", " ", "t"}], "+", 
                    RowBox[{"Log", "[", 
                    FractionBox["2.9552401942122875`", "\[Epsilon]"], "]"}]}],
                     "]"}]}], ")"}]}], FontFamily -> Dynamic[
                    CurrentValue[{"StyleHints", "CodeFont"}]], 
                   ShowStringCharacters -> True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["exact"], 
                   Key["total"]}, "Item", False], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}]}, {
              Item[
               Pane[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["bound", 
                    Style[
                    "bound", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["bound"]}, 1]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["bound"]}, "RowHeader", False], "Mouse"], 
                ImageSize -> {{56.00000000000001, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
               GrayLevel[0.95], Alignment -> {Left, Baseline}], 
              Item[
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   RowBox[{"2", "+", 
                    RowBox[{"Ceiling", "[", 
                    RowBox[{
                    RowBox[{"436855.74934072455`", " ", "t"}], "+", 
                    RowBox[{"Log", "[", 
                    FractionBox["2.9552401942122875`", "\[Epsilon]"], "]"}]}],
                     "]"}]}], FontFamily -> Dynamic[
                    CurrentValue[{"StyleHints", "CodeFont"}]], 
                   ShowStringCharacters -> True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["bound"], 
                   Key["query"]}, "Item", False], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}], 
              Item[
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   TagBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"\"1.9129\"", "\[Times]", 
                    SuperscriptBox["10", "\"5\""]}], ShowStringCharacters -> 
                    False], 191290., AutoDelete -> True], 
                    ScientificForm[#, 5]& ], FontFamily -> Dynamic[
                    CurrentValue[{"StyleHints", "CodeFont"}]], 
                   ShowStringCharacters -> True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["bound"], 
                   Key["compilation"]}, "Item", False], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}], 
              Item[
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   RowBox[{"191290", " ", 
                    RowBox[{"(", 
                    RowBox[{"2", "+", 
                    RowBox[{"Ceiling", "[", 
                    RowBox[{
                    RowBox[{"436855.74934072455`", " ", "t"}], "+", 
                    RowBox[{"Log", "[", 
                    FractionBox["2.9552401942122875`", "\[Epsilon]"], "]"}]}],
                     "]"}]}], ")"}]}], FontFamily -> Dynamic[
                    CurrentValue[{"StyleHints", "CodeFont"}]], 
                   ShowStringCharacters -> True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["bound"], 
                   Key["total"]}, "Item", False], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}]}}, 
            BaseStyle -> {
             ContextMenu -> 
              Dynamic[TypeSystem`NestedGrid`PackagePrivate`$\
contextMenuTrigger; 
                Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                  TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                  TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger, TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu,
                   True, TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger = 
                   TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                  TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                   Block[{TypeSystem`NestedGrid`PackagePrivate`$\
globalScrollPos = {TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                    
                    With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
              "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, 
            Dividers -> All, FrameStyle -> GrayLevel[0.7490196078431373], 
            Spacings -> {0, 0}, Alignment -> Left, 
            BaseStyle -> {
             FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
              Plain}], LineBreakWithin -> False, ContextMenu -> {}, 
           NumberMarks -> False, ShowAutoStyles -> False]], 
        TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
       Dynamic[
        TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
        TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
           Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
           
           Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
             TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
             TypeSystem`NestedGrid`PackagePrivate`datasetData[
              TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
               FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
               TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
               TypeSystem`NestedGrid`PackagePrivate`renderGrid[
               TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
               TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
              Not[
               FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
              TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
              TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
         TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
         TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
         TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
           FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
           TypeSystem`SparseGrid[
            TypeSystem`H["(data no longer present)"]], 
           TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
        TrackedSymbols :> {
         TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
          TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
       DynamicModuleValues :> {}], 
      TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
       TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
        TypeSystem`PackageScope`SubViewPathbar[
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
         TypeSystem`NestedGrid`PackagePrivate`updateState[
         TypeSystem`NestedGrid`PackagePrivate`$state$$, 
          TypeSystem`NestedGrid`PackagePrivate`$path$$, 
          TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
          TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
       TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
      TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
       Framed[
        Dynamic[
         Replace[
         TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
          TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
             TypeSystem`NestedGrid`PackagePrivate`localHold[
             TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
             Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
             TypeSystem`NestedGrid`PackagePrivate`localHold[
             TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
              Blank[]], 
             Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
              Blank[]], 
             Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
              Blank[]]] :> (
            Increment[
             TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
            TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
             TypeSystem`NestedGrid`PackagePrivate`path$; 
            TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
             TypeSystem`NestedGrid`PackagePrivate`pathType$; 
            TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
             TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
            TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
             TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
            TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
             TypeSystem`NestedGrid`PackagePrivate`path$, 
              TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
           Spacer[10], Blank[] :> Spacer[10]}], 
         TrackedSymbols :> {
          TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], 
        FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
        Top, ImageSize -> {Automatic, 15}], FontSize -> 1], 
      TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
      DynamicWrapperBox[
       DynamicBox[ToBoxes[
         Dataset`DatasetContent[
         2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
          "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], 
          "State" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], 
          "VPos" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], 
          "HPos" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], 
          "TopBar" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], 
          "BottomBar" -> 
          Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
          Hold[
            TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
        ImageSizeCache->{797., {51.3544921875, 56.6455078125}},
        TrackedSymbols:>{
         TypeSystem`NestedGrid`PackagePrivate`$state$$, 
          TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
       MouseAnnotation[],
       ImageSizeCache->{797., {51.3544921875, 56.6455078125}}],
      BaseStyle->{LineBreakWithin -> False},
      DynamicModuleValues:>{},
      Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
       CreateUUID[]),
      UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
     Deploy,
     DefaultBaseStyle->"Deploy"],
    Dataset`InterpretDataset[1],
    Editable->False,
    SelectWithContents->True,
    Selectable->False]}],
  SequenceForm["Time Evolution Cost:", 
   Dataset[<|
    "exact" -> <|
      "query" -> 2 + 
        Ceiling[305607.9669589286 $CellContext`t + 
          Log[2.9552401942122875`/$CellContext`\[Epsilon]]], "compilation" -> 
       ScientificForm[191290., 5], "total" -> 
       191290 (2 + 
         Ceiling[305607.9669589286 $CellContext`t + 
           Log[2.9552401942122875`/$CellContext`\[Epsilon]]])|>, 
     "bound" -> <|
      "query" -> 2 + 
        Ceiling[436855.74934072455` $CellContext`t + 
          Log[2.9552401942122875`/$CellContext`\[Epsilon]]], "compilation" -> 
       ScientificForm[191290., 5], "total" -> 
       191290 (2 + 
         Ceiling[436855.74934072455` $CellContext`t + 
           Log[2.9552401942122875`/$CellContext`\[Epsilon]]])|>|>, 
    TypeSystem`Assoc[
     TypeSystem`Atom[String], 
     TypeSystem`Struct[{"query", "compilation", "total"}, {
      TypeSystem`AnyType, TypeSystem`AnyType, TypeSystem`AnyType}], 2], <||>]],
  Editable->False]], "Print",
 CellChangeTimes->{3.962708745528565*^9, 3.962803641722584*^9, 
  3.962992105737418*^9},
 CellLabel->
  "During evaluation of \
In[46]:=",ExpressionUUID->"a5be1344-f851-47f6-9e4c-c57ef7bca4da"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Particle Count:\"\>", "\[InvisibleSpace]", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"\[Eta]el\"\>", "\[Rule]", "229"}], ",", 
     RowBox[{"\<\"\[Eta]ion\"\>", "\[Rule]", "56"}], ",", 
     RowBox[{"\<\"\[Eta]\"\>", "\[Rule]", "285"}]}], "\[RightAssociation]"}]}],
  SequenceForm[
  "Particle Count:", <|
   "\[Eta]el" -> 229, "\[Eta]ion" -> 56, "\[Eta]" -> 285|>],
  Editable->False]], "Print",
 CellChangeTimes->{3.962708745528565*^9, 3.962803641722584*^9, 
  3.9629921057718883`*^9},
 CellLabel->
  "During evaluation of \
In[46]:=",ExpressionUUID->"60c20695-b42a-4244-827e-c3bab0e8494a"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Rescaling Factors:\"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
     TagBox[
      TagBox[
       DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
        "InitialData" -> {<|"Ion" -> Row[{"B3", 
               Style["B3", 
                GrayLevel[0.5]]}, "\n"], "Tel" -> Row[{190.77809092894884`, 
               Style[190.77809092894884`, 
                GrayLevel[0.5]]}, "\n"], "Tion" -> Row[{3179.984272395761, 
               Style[3179.984272395761, 
                GrayLevel[0.5]]}, "\n"], "Vel" -> Row[{7.143091907100208, 
               Style[12.435388851482415`, 
                GrayLevel[0.5]]}, "\n"], "Vion" -> Row[{1.1096122875228194`, 
               Style[1.9425989154164889`, 
                GrayLevel[0.5]]}, "\n"], "Loc" -> Row[{10.8054887607522, 
               Style[11.094862778486384`, 
                GrayLevel[0.5]]}, "\n"], "NL" -> Row[{6.233018235858362, 
               Style[6.233928000000156, 
                GrayLevel[0.5]]}, "\n"]|>, <|"Ion" -> Row[{"N5", 
               Style["N5", 
                GrayLevel[0.5]]}, "\n"], "Tel" -> Row[{190.77809092894884`, 
               Style[190.77809092894884`, 
                GrayLevel[0.5]]}, "\n"], "Tion" -> Row[{3179.984272395761, 
               Style[3179.984272395761, 
                GrayLevel[0.5]]}, "\n"], "Vel" -> Row[{7.143091907100208, 
               Style[12.435388851482415`, 
                GrayLevel[0.5]]}, "\n"], "Vion" -> Row[{1.1096122875228194`, 
               Style[1.9425989154164889`, 
                GrayLevel[0.5]]}, "\n"], "Loc" -> Row[{25.54809535667385, 
               Style[26.030506422645928`, 
                GrayLevel[0.5]]}, "\n"], "NL" -> Row[{13.487971911111444`, 
               Style[13.55224300000034, 
                GrayLevel[0.5]]}, "\n"]|>, <|"Ion" -> Row[{"C4", 
               Style["C4", 
                GrayLevel[0.5]]}, "\n"], "Tel" -> Row[{190.77809092894884`, 
               Style[190.77809092894884`, 
                GrayLevel[0.5]]}, "\n"], "Tion" -> Row[{3179.984272395761, 
               Style[3179.984272395761, 
                GrayLevel[0.5]]}, "\n"], "Vel" -> Row[{7.143091907100208, 
               Style[12.435388851482415`, 
                GrayLevel[0.5]]}, "\n"], "Vion" -> Row[{1.1096122875228194`, 
               Style[1.9425989154164889`, 
                GrayLevel[0.5]]}, "\n"], "Loc" -> Row[{17.277232685974305`, 
               Style[17.66303638202409, 
                GrayLevel[0.5]]}, "\n"], "NL" -> Row[{9.516387213819993, 
               Style[9.52284200000024, 
                GrayLevel[0.5]]}, "\n"]|>, <|"Ion" -> Row[{"O6", 
               Style["O6", 
                GrayLevel[0.5]]}, "\n"], "Tel" -> Row[{190.77809092894884`, 
               Style[190.77809092894884`, 
                GrayLevel[0.5]]}, "\n"], "Tion" -> Row[{3179.984272395761, 
               Style[3179.984272395761, 
                GrayLevel[0.5]]}, "\n"], "Vel" -> Row[{7.143091907100208, 
               Style[12.435388851482415`, 
                GrayLevel[0.5]]}, "\n"], "Vion" -> Row[{1.1096122875228194`, 
               Style[1.9425989154164889`, 
                GrayLevel[0.5]]}, "\n"], "Loc" -> Row[{35.33022132441793, 
               Style[35.913522230728375`, 
                GrayLevel[0.5]]}, "\n"], "NL" -> Row[{17.951019658607592`, 
               Style[18.266917000000458`, 
                GrayLevel[0.5]]}, "\n"]|>, <|"Ion" -> Row[{"H1", 
               Style["H1", 
                GrayLevel[0.5]]}, "\n"], "Tel" -> Row[{190.77809092894884`, 
               Style[190.77809092894884`, 
                GrayLevel[0.5]]}, "\n"], "Tion" -> Row[{3179.984272395761, 
               Style[3179.984272395761, 
                GrayLevel[0.5]]}, "\n"], "Vel" -> Row[{7.143091907100208, 
               Style[12.435388851482415`, 
                GrayLevel[0.5]]}, "\n"], "Vion" -> Row[{1.1096122875228194`, 
               Style[1.9425989154164889`, 
                GrayLevel[0.5]]}, "\n"], "Loc" -> Row[{8.050137694253728, 
               Style[8.169659804014326, 
                GrayLevel[0.5]]}, "\n"], "NL" -> Row[{0., 
               Style[0., 
                GrayLevel[0.5]]}, "\n"]|>, <|"Ion" -> Row[{"Pd18", 
               Style["Pd18", 
                GrayLevel[0.5]]}, "\n"], "Tel" -> Row[{190.77809092894884`, 
               Style[190.77809092894884`, 
                GrayLevel[0.5]]}, "\n"], "Tion" -> Row[{3179.984272395761, 
               Style[3179.984272395761, 
                GrayLevel[0.5]]}, "\n"], "Vel" -> Row[{7.143091907100208, 
               Style[12.435388851482415`, 
                GrayLevel[0.5]]}, "\n"], "Vion" -> Row[{1.1096122875228194`, 
               Style[1.9425989154164889`, 
                GrayLevel[0.5]]}, "\n"], "Loc" -> Row[{49.85793700255364, 
               Style[51.593927279150186`, 
                GrayLevel[0.5]]}, "\n"], "NL" -> Row[{34.121710931520525`, 
               Style[33.87906539367532, 
                GrayLevel[0.5]]}, "\n"]|>}, "AllowEmbedding" -> True, 
         "InitialShape" -> 
         TypeSystem`PackageScope`HeaderShape[<|{All, "Ion"} -> 
            1, {All, "Tel"} -> 1, {All, "Tion"} -> 1, {All, "Vel"} -> 
            1, {All, "Vion"} -> 1, {All, "Loc"} -> 1, {All, "NL"} -> 1|>, 
           TypeSystem`PackageScope`Limited[
            TypeSystem`PackageScope`ColumnShape[
             TypeSystem`PackageScope`Limited[
              
              TypeSystem`PackageScope`RowShape[<|
               "Ion" -> TypeSystem`PackageScope`UnknownShape[False], "Tel" -> 
                TypeSystem`PackageScope`UnknownShape[False], "Tion" -> 
                TypeSystem`PackageScope`UnknownShape[False], "Vel" -> 
                TypeSystem`PackageScope`UnknownShape[False], "Vion" -> 
                TypeSystem`PackageScope`UnknownShape[False], "Loc" -> 
                TypeSystem`PackageScope`UnknownShape[False], "NL" -> 
                TypeSystem`PackageScope`UnknownShape[False]|>], 
              DirectedInfinity[1], 7, {All}]], 6, 
            DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Vector[
           
           TypeSystem`Struct[{
            "Ion", "Tel", "Tion", "Vel", "Vion", "Loc", "NL"}, {
            TypeSystem`AnyType, TypeSystem`AnyType, TypeSystem`AnyType, 
             TypeSystem`AnyType, TypeSystem`AnyType, TypeSystem`AnyType, 
             TypeSystem`AnyType}], 6], "Meta" -> <||>, "RowTarget" -> 20, 
         "ColumnTarget" -> 10, "Shape" -> 
         TypeSystem`PackageScope`HeaderShape[<|{All, "Ion"} -> 
            1, {All, "Tel"} -> 1, {All, "Tion"} -> 1, {All, "Vel"} -> 
            1, {All, "Vion"} -> 1, {All, "Loc"} -> 1, {All, "NL"} -> 1|>, 
           TypeSystem`PackageScope`Limited[
            TypeSystem`PackageScope`ColumnShape[
             TypeSystem`PackageScope`Limited[
              
              TypeSystem`PackageScope`RowShape[<|
               "Ion" -> TypeSystem`PackageScope`UnknownShape[False], "Tel" -> 
                TypeSystem`PackageScope`UnknownShape[False], "Tion" -> 
                TypeSystem`PackageScope`UnknownShape[False], "Vel" -> 
                TypeSystem`PackageScope`UnknownShape[False], "Vion" -> 
                TypeSystem`PackageScope`UnknownShape[False], "Loc" -> 
                TypeSystem`PackageScope`UnknownShape[False], "NL" -> 
                TypeSystem`PackageScope`UnknownShape[False]|>], 
              DirectedInfinity[1], 7, {All}]], 6, 
            DirectedInfinity[1], {}]], "Type" -> TypeSystem`Vector[
           
           TypeSystem`Struct[{
            "Ion", "Tel", "Tion", "Vel", "Vion", "Loc", "NL"}, {
            TypeSystem`AnyType, TypeSystem`AnyType, TypeSystem`AnyType, 
             TypeSystem`AnyType, TypeSystem`AnyType, TypeSystem`AnyType, 
             TypeSystem`AnyType}], 6], "Path" -> {}, "DisplayedRowCount" -> 6,
          "DisplayedColumnCount" -> 7, "DataRowCount" -> 6, "DataColumnCount" -> 
         7, "SortPaths" -> {}, "SortDirections" -> {}, "HiddenItemsMap" -> 
         Null, "UpdateType" -> 1|>, 
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
        DynamicModule[{
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
            Style[
             Grid[{{
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["Ion", 
                    Style[
                    "Ion", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "Ion"}, 1]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "Ion"}, "ColumnHeader", True], "Mouse"], 
                  ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["Tel", 
                    Style[
                    "Tel", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "Tel"}, 1]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "Tel"}, "ColumnHeader", True], "Mouse"], 
                  ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["Tion", 
                    Style[
                    "Tion", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "Tion"}, 1]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "Tion"}, "ColumnHeader", True], "Mouse"], 
                  ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["Vel", 
                    Style[
                    "Vel", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "Vel"}, 1]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "Vel"}, "ColumnHeader", True], "Mouse"], 
                  ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["Vion", 
                    Style[
                    "Vion", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "Vion"}, 1]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "Vion"}, "ColumnHeader", True], "Mouse"], 
                  ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["Loc", 
                    Style[
                    "Loc", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "Loc"}, 1]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "Loc"}, "ColumnHeader", True], "Mouse"], 
                  ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["NL", 
                    Style[
                    "NL", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "NL"}, 1]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "NL"}, "ColumnHeader", True], "Mouse"], 
                  ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
                Item[
                 Pane[
                  Annotation[
                   Row[{"B3", 
                    Style["B3", 
                    GrayLevel[0.5]]}, "\n"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                    Key["Ion"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   Row[{190.77809092894884`, 
                    Style[190.77809092894884`, 
                    GrayLevel[0.5]]}, "\n"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                    Key["Tel"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   Row[{3179.984272395761, 
                    Style[3179.984272395761, 
                    GrayLevel[0.5]]}, "\n"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                    Key["Tion"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   Row[{7.143091907100208, 
                    Style[12.435388851482415`, 
                    GrayLevel[0.5]]}, "\n"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                    Key["Vel"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   Row[{1.1096122875228194`, 
                    Style[1.9425989154164889`, 
                    GrayLevel[0.5]]}, "\n"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                    Key["Vion"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   Row[{10.8054887607522, 
                    Style[11.094862778486384`, 
                    GrayLevel[0.5]]}, "\n"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                    Key["Loc"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   Row[{6.233018235858362, 
                    Style[6.233928000000156, 
                    GrayLevel[0.5]]}, "\n"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                    Key["NL"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   Row[{"N5", 
                    Style["N5", 
                    GrayLevel[0.5]]}, "\n"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                    Key["Ion"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   Row[{190.77809092894884`, 
                    Style[190.77809092894884`, 
                    GrayLevel[0.5]]}, "\n"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                    Key["Tel"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   Row[{3179.984272395761, 
                    Style[3179.984272395761, 
                    GrayLevel[0.5]]}, "\n"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                    Key["Tion"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   Row[{7.143091907100208, 
                    Style[12.435388851482415`, 
                    GrayLevel[0.5]]}, "\n"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                    Key["Vel"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   Row[{1.1096122875228194`, 
                    Style[1.9425989154164889`, 
                    GrayLevel[0.5]]}, "\n"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                    Key["Vion"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   Row[{25.54809535667385, 
                    Style[26.030506422645928`, 
                    GrayLevel[0.5]]}, "\n"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                    Key["Loc"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   Row[{13.487971911111444`, 
                    Style[13.55224300000034, 
                    GrayLevel[0.5]]}, "\n"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                    Key["NL"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   Row[{"C4", 
                    Style["C4", 
                    GrayLevel[0.5]]}, "\n"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                    Key["Ion"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   Row[{190.77809092894884`, 
                    Style[190.77809092894884`, 
                    GrayLevel[0.5]]}, "\n"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                    Key["Tel"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   Row[{3179.984272395761, 
                    Style[3179.984272395761, 
                    GrayLevel[0.5]]}, "\n"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                    Key["Tion"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   Row[{7.143091907100208, 
                    Style[12.435388851482415`, 
                    GrayLevel[0.5]]}, "\n"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                    Key["Vel"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   Row[{1.1096122875228194`, 
                    Style[1.9425989154164889`, 
                    GrayLevel[0.5]]}, "\n"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                    Key["Vion"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   Row[{17.277232685974305`, 
                    Style[17.66303638202409, 
                    GrayLevel[0.5]]}, "\n"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                    Key["Loc"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   Row[{9.516387213819993, 
                    Style[9.52284200000024, 
                    GrayLevel[0.5]]}, "\n"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                    Key["NL"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   Row[{"O6", 
                    Style["O6", 
                    GrayLevel[0.5]]}, "\n"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                    Key["Ion"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   Row[{190.77809092894884`, 
                    Style[190.77809092894884`, 
                    GrayLevel[0.5]]}, "\n"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                    Key["Tel"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   Row[{3179.984272395761, 
                    Style[3179.984272395761, 
                    GrayLevel[0.5]]}, "\n"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                    Key["Tion"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   Row[{7.143091907100208, 
                    Style[12.435388851482415`, 
                    GrayLevel[0.5]]}, "\n"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                    Key["Vel"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   Row[{1.1096122875228194`, 
                    Style[1.9425989154164889`, 
                    GrayLevel[0.5]]}, "\n"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                    Key["Vion"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   Row[{35.33022132441793, 
                    Style[35.913522230728375`, 
                    GrayLevel[0.5]]}, "\n"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                    Key["Loc"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   Row[{17.951019658607592`, 
                    Style[18.266917000000458`, 
                    GrayLevel[0.5]]}, "\n"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                    Key["NL"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   Row[{"H1", 
                    Style["H1", 
                    GrayLevel[0.5]]}, "\n"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                    Key["Ion"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   Row[{190.77809092894884`, 
                    Style[190.77809092894884`, 
                    GrayLevel[0.5]]}, "\n"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                    Key["Tel"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   Row[{3179.984272395761, 
                    Style[3179.984272395761, 
                    GrayLevel[0.5]]}, "\n"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                    Key["Tion"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   Row[{7.143091907100208, 
                    Style[12.435388851482415`, 
                    GrayLevel[0.5]]}, "\n"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                    Key["Vel"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   Row[{1.1096122875228194`, 
                    Style[1.9425989154164889`, 
                    GrayLevel[0.5]]}, "\n"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                    Key["Vion"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   Row[{8.050137694253728, 
                    Style[8.169659804014326, 
                    GrayLevel[0.5]]}, "\n"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                    Key["Loc"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   Row[{0., 
                    Style[0., 
                    GrayLevel[0.5]]}, "\n"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                    Key["NL"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   Row[{"Pd18", 
                    Style["Pd18", 
                    GrayLevel[0.5]]}, "\n"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                    Key["Ion"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   Row[{190.77809092894884`, 
                    Style[190.77809092894884`, 
                    GrayLevel[0.5]]}, "\n"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                    Key["Tel"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   Row[{3179.984272395761, 
                    Style[3179.984272395761, 
                    GrayLevel[0.5]]}, "\n"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                    Key["Tion"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   Row[{7.143091907100208, 
                    Style[12.435388851482415`, 
                    GrayLevel[0.5]]}, "\n"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                    Key["Vel"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   Row[{1.1096122875228194`, 
                    Style[1.9425989154164889`, 
                    GrayLevel[0.5]]}, "\n"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                    Key["Vion"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   Row[{49.85793700255364, 
                    Style[51.593927279150186`, 
                    GrayLevel[0.5]]}, "\n"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                    Key["Loc"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   Row[{34.121710931520525`, 
                    Style[33.87906539367532, 
                    GrayLevel[0.5]]}, "\n"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                    Key["NL"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}}, 
              BaseStyle -> {
               ContextMenu -> 
                Dynamic[
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                  Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger, TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu,
                     True, TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger = 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                    TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                    Block[{TypeSystem`NestedGrid`PackagePrivate`$\
globalScrollPos = {TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                    
                    With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
                "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, 
              Dividers -> All, FrameStyle -> GrayLevel[0.7490196078431373], 
              Spacings -> {0, 0}, Alignment -> Left, 
              BaseStyle -> {
               FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
                Plain}], LineBreakWithin -> False, ContextMenu -> {}, 
             NumberMarks -> False, ShowAutoStyles -> False]], 
          TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
         Dynamic[
          TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
          TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
             Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
             
             Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
               TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
               TypeSystem`NestedGrid`PackagePrivate`datasetData[
                TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
              TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
                 FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
                 TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                 TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                 TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
                Not[
                 FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
                TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
                TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
           TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
           TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
           TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
             TypeSystem`SparseGrid[
              TypeSystem`H["(data no longer present)"]], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
          TrackedSymbols :> {
           TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
         DynamicModuleValues :> {}], 
        TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
         TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
          TypeSystem`PackageScope`SubViewPathbar[
          TypeSystem`NestedGrid`PackagePrivate`$path$$, 
           TypeSystem`NestedGrid`PackagePrivate`updateState[
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
            TypeSystem`NestedGrid`PackagePrivate`$path$$, 
            TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
            TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
         TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
        TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
         Framed[
          Dynamic[
           Replace[
           TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
            TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               TypeSystem`NestedGrid`PackagePrivate`localHold[
               TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
               Blank[]] -> "", 
             TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               TypeSystem`NestedGrid`PackagePrivate`localHold[
               TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
               Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
                Blank[]], 
               Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
                Blank[]], 
               Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                Blank[]]] :> (
              Increment[
               TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
              TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
               TypeSystem`NestedGrid`PackagePrivate`path$; 
              TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
               TypeSystem`NestedGrid`PackagePrivate`pathType$; 
              TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
               TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
              TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
               TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
              TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
               TypeSystem`NestedGrid`PackagePrivate`path$, 
                TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
             Spacer[10], Blank[] :> Spacer[10]}], 
           TrackedSymbols :> {
            TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], 
          FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
          Top, ImageSize -> {Automatic, 15}], FontSize -> 1], 
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
        DynamicWrapperBox[
         DynamicBox[ToBoxes[
           Dataset`DatasetContent[
           2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
            "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], 
            "State" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], 
            "VPos" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], 
            "HPos" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], 
            "TopBar" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], 
            "BottomBar" -> 
            Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], 
            "OutputID" -> Hold[
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], 
           StandardForm],
          ImageSizeCache->{478., {167.3544921875, 172.6455078125}},
          
          TrackedSymbols:>{
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
            TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
         TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
         MouseAnnotation[],
         ImageSizeCache->{478., {167.3544921875, 172.6455078125}}],
        BaseStyle->{LineBreakWithin -> False},
        DynamicModuleValues:>{},
        Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
         CreateUUID[]),
        UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
       
       Deploy,
       DefaultBaseStyle->"Deploy"],
      Dataset`InterpretDataset[1],
      Editable->False,
      SelectWithContents->True,
      Selectable->False], ",", 
     TagBox[
      TagBox[
       DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
        "InitialData" -> {<|
           "Tel" -> 43688.182822729286`, "Tion" -> 14.184687834209845`, "Vel" -> 
            372955.1146535161, "Vion" -> 56834.34136691881, "Loc" -> 
            236488.31281595293`, "NL" -> 125579.21539249469`, "Total" -> 
            835559.351739446|>, <|
           "Tel" -> 43688.182822729286`, "Tion" -> 14.184687834209845`, "Vel" -> 
            649276.5227135998, "Vion" -> 99499.91644763257, "Loc" -> 
            241569.46474993188`, "NL" -> 125970.42024915462`, "Total" -> 
            1.1600186916708823`*^6|>, <|
           "Tel" -> 1., "Tion" -> 0.9999999999999999, "Vel" -> 
            1.7408972211489653`, "Vion" -> 1.750700616116365, "Loc" -> 
            1.0214858479621076`, "NL" -> 1.0031152038610627`, "Total" -> 
            1.3883139351573113`|>}, "AllowEmbedding" -> True, "InitialShape" -> 
         TypeSystem`PackageScope`HeaderShape[<|{All, "Tel"} -> 
            1, {All, "Tion"} -> 1, {All, "Vel"} -> 1, {All, "Vion"} -> 
            1, {All, "Loc"} -> 1, {All, "NL"} -> 1, {All, "Total"} -> 1|>, 
           TypeSystem`PackageScope`Limited[
            TypeSystem`PackageScope`ColumnShape[
             TypeSystem`PackageScope`Limited[
              
              TypeSystem`PackageScope`RowShape[<|
               "Tel" -> TypeSystem`PackageScope`AtomShape[60], "Tion" -> 
                TypeSystem`PackageScope`AtomShape[60], "Vel" -> 
                TypeSystem`PackageScope`AtomShape[60], "Vion" -> 
                TypeSystem`PackageScope`AtomShape[60], "Loc" -> 
                TypeSystem`PackageScope`AtomShape[60], "NL" -> 
                TypeSystem`PackageScope`AtomShape[60], "Total" -> 
                TypeSystem`PackageScope`AtomShape[60]|>], 
              DirectedInfinity[1], 7, {All}]], 3, 
            DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Vector[
           
           TypeSystem`Struct[{
            "Tel", "Tion", "Vel", "Vion", "Loc", "NL", "Total"}, {
             TypeSystem`Atom[Real], 
             TypeSystem`Atom[Real], 
             TypeSystem`Atom[Real], 
             TypeSystem`Atom[Real], 
             TypeSystem`Atom[Real], 
             TypeSystem`Atom[Real], 
             TypeSystem`Atom[Real]}], 3], "Meta" -> <||>, "RowTarget" -> 20, 
         "ColumnTarget" -> 10, "Shape" -> 
         TypeSystem`PackageScope`HeaderShape[<|{All, "Tel"} -> 
            1, {All, "Tion"} -> 1, {All, "Vel"} -> 1, {All, "Vion"} -> 
            1, {All, "Loc"} -> 1, {All, "NL"} -> 1, {All, "Total"} -> 1|>, 
           TypeSystem`PackageScope`Limited[
            TypeSystem`PackageScope`ColumnShape[
             TypeSystem`PackageScope`Limited[
              
              TypeSystem`PackageScope`RowShape[<|
               "Tel" -> TypeSystem`PackageScope`AtomShape[60], "Tion" -> 
                TypeSystem`PackageScope`AtomShape[60], "Vel" -> 
                TypeSystem`PackageScope`AtomShape[60], "Vion" -> 
                TypeSystem`PackageScope`AtomShape[60], "Loc" -> 
                TypeSystem`PackageScope`AtomShape[60], "NL" -> 
                TypeSystem`PackageScope`AtomShape[60], "Total" -> 
                TypeSystem`PackageScope`AtomShape[60]|>], 
              DirectedInfinity[1], 7, {All}]], 3, 
            DirectedInfinity[1], {}]], "Type" -> TypeSystem`Vector[
           
           TypeSystem`Struct[{
            "Tel", "Tion", "Vel", "Vion", "Loc", "NL", "Total"}, {
             TypeSystem`Atom[Real], 
             TypeSystem`Atom[Real], 
             TypeSystem`Atom[Real], 
             TypeSystem`Atom[Real], 
             TypeSystem`Atom[Real], 
             TypeSystem`Atom[Real], 
             TypeSystem`Atom[Real]}], 3], "Path" -> {}, "DisplayedRowCount" -> 
         3, "DisplayedColumnCount" -> 7, "DataRowCount" -> 3, 
         "DataColumnCount" -> 7, "SortPaths" -> {}, "SortDirections" -> {}, 
         "HiddenItemsMap" -> Null, "UpdateType" -> 1|>, 
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
        DynamicModule[{
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
            Style[
             Grid[{{
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["Tel", 
                    Style[
                    "Tel", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "Tel"}, 1]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "Tel"}, "ColumnHeader", True], "Mouse"], 
                  ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["Tion", 
                    Style[
                    "Tion", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "Tion"}, 1]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "Tion"}, "ColumnHeader", True], "Mouse"], 
                  ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["Vel", 
                    Style[
                    "Vel", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "Vel"}, 1]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "Vel"}, "ColumnHeader", True], "Mouse"], 
                  ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["Vion", 
                    Style[
                    "Vion", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "Vion"}, 1]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "Vion"}, "ColumnHeader", True], "Mouse"], 
                  ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["Loc", 
                    Style[
                    "Loc", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "Loc"}, 1]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "Loc"}, "ColumnHeader", True], "Mouse"], 
                  ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["NL", 
                    Style[
                    "NL", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "NL"}, 1]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "NL"}, "ColumnHeader", True], "Mouse"], 
                  ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["Total", 
                    Style[
                    "Total", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "Total"}, 1]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "Total"}, "ColumnHeader", True], "Mouse"], 
                  ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["43688.2"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                    Key["Tel"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["14.1847"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                    Key["Tion"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["372955."], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                    Key["Vel"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["56834.3"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                    Key["Vion"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["236488."], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                    Key["Loc"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["125579."], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                    Key["NL"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["835559."], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                    Key["Total"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["43688.2"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                    Key["Tel"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["14.1847"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                    Key["Tion"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["649277."], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                    Key["Vel"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["99499.9"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                    Key["Vion"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["241569."], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                    Key["Loc"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["125970."], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                    Key["NL"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["1160019."], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                    Key["Total"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["1.0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                    Key["Tel"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["1.0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                    Key["Tion"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["1.7409"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                    Key["Vel"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["1.7507"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                    Key["Vion"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["1.02149"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                    Key["Loc"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["1.00312"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                    Key["NL"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["1.38831"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                    Key["Total"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}}, 
              BaseStyle -> {
               ContextMenu -> 
                Dynamic[
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                  Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger, TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu,
                     True, TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger = 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                    TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                    Block[{TypeSystem`NestedGrid`PackagePrivate`$\
globalScrollPos = {TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                    
                    With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
                "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, 
              Dividers -> All, FrameStyle -> GrayLevel[0.7490196078431373], 
              Spacings -> {0, 0}, Alignment -> Left, 
              BaseStyle -> {
               FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
                Plain}], LineBreakWithin -> False, ContextMenu -> {}, 
             NumberMarks -> False, ShowAutoStyles -> False]], 
          TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
         Dynamic[
          TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
          TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
             Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
             Module[{
              TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
               TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
               TypeSystem`NestedGrid`PackagePrivate`datasetData[
                TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
              TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
                 FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
                 TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                 TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                 TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
                Not[
                 FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
                TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
                TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
           TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
           TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
           TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
             TypeSystem`SparseGrid[
              TypeSystem`H["(data no longer present)"]], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
          TrackedSymbols :> {
           TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
         DynamicModuleValues :> {}], 
        TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
         TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
          TypeSystem`PackageScope`SubViewPathbar[
          TypeSystem`NestedGrid`PackagePrivate`$path$$, 
           TypeSystem`NestedGrid`PackagePrivate`updateState[
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
            TypeSystem`NestedGrid`PackagePrivate`$path$$, 
            TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
            TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
         TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
        TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
         Framed[
          Dynamic[
           Replace[
           TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
            TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               TypeSystem`NestedGrid`PackagePrivate`localHold[
               TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
               Blank[]] -> "", 
             TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               TypeSystem`NestedGrid`PackagePrivate`localHold[
               TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
               Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
                Blank[]], 
               Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
                Blank[]], 
               Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                Blank[]]] :> (
              Increment[
               TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
              TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
               TypeSystem`NestedGrid`PackagePrivate`path$; 
              TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
               TypeSystem`NestedGrid`PackagePrivate`pathType$; 
              TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
               TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
              TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
               TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
              TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
               TypeSystem`NestedGrid`PackagePrivate`path$, 
                TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
             Spacer[10], Blank[] :> Spacer[10]}], 
           TrackedSymbols :> {
            TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], 
          FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
          Top, ImageSize -> {Automatic, 15}], FontSize -> 1], 
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
        DynamicWrapperBox[
         DynamicBox[ToBoxes[
           Dataset`DatasetContent[
           2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
            "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], 
            "State" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], 
            "VPos" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], 
            "HPos" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], 
            "TopBar" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], 
            "BottomBar" -> 
            Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], 
            "OutputID" -> Hold[
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], 
           StandardForm],
          ImageSizeCache->{478., {60.8544921875, 66.1455078125}},
          
          TrackedSymbols:>{
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
            TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
         TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
         MouseAnnotation[],
         ImageSizeCache->{478., {60.8544921875, 66.1455078125}}],
        BaseStyle->{LineBreakWithin -> False},
        DynamicModuleValues:>{},
        Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
         CreateUUID[]),
        UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
       
       Deploy,
       DefaultBaseStyle->"Deploy"],
      Dataset`InterpretDataset[1],
      Editable->False,
      SelectWithContents->True,
      Selectable->False]}], "}"}]}],
  SequenceForm["Rescaling Factors:", {
    Dataset[{<|"Ion" -> Row[{"B3", 
          Style["B3", 
           GrayLevel[0.5]]}, "\n"], "Tel" -> Row[{190.77809092894884`, 
          Style[190.77809092894884`, 
           GrayLevel[0.5]]}, "\n"], "Tion" -> Row[{3179.984272395761, 
          Style[3179.984272395761, 
           GrayLevel[0.5]]}, "\n"], "Vel" -> Row[{7.143091907100208, 
          Style[12.435388851482415`, 
           GrayLevel[0.5]]}, "\n"], "Vion" -> Row[{1.1096122875228194`, 
          Style[1.9425989154164889`, 
           GrayLevel[0.5]]}, "\n"], "Loc" -> Row[{10.8054887607522, 
          Style[11.094862778486384`, 
           GrayLevel[0.5]]}, "\n"], "NL" -> Row[{6.233018235858362, 
          Style[6.233928000000156, 
           GrayLevel[0.5]]}, "\n"]|>, <|"Ion" -> Row[{"N5", 
          Style["N5", 
           GrayLevel[0.5]]}, "\n"], "Tel" -> Row[{190.77809092894884`, 
          Style[190.77809092894884`, 
           GrayLevel[0.5]]}, "\n"], "Tion" -> Row[{3179.984272395761, 
          Style[3179.984272395761, 
           GrayLevel[0.5]]}, "\n"], "Vel" -> Row[{7.143091907100208, 
          Style[12.435388851482415`, 
           GrayLevel[0.5]]}, "\n"], "Vion" -> Row[{1.1096122875228194`, 
          Style[1.9425989154164889`, 
           GrayLevel[0.5]]}, "\n"], "Loc" -> Row[{25.54809535667385, 
          Style[26.030506422645928`, 
           GrayLevel[0.5]]}, "\n"], "NL" -> Row[{13.487971911111444`, 
          Style[13.55224300000034, 
           GrayLevel[0.5]]}, "\n"]|>, <|"Ion" -> Row[{"C4", 
          Style["C4", 
           GrayLevel[0.5]]}, "\n"], "Tel" -> Row[{190.77809092894884`, 
          Style[190.77809092894884`, 
           GrayLevel[0.5]]}, "\n"], "Tion" -> Row[{3179.984272395761, 
          Style[3179.984272395761, 
           GrayLevel[0.5]]}, "\n"], "Vel" -> Row[{7.143091907100208, 
          Style[12.435388851482415`, 
           GrayLevel[0.5]]}, "\n"], "Vion" -> Row[{1.1096122875228194`, 
          Style[1.9425989154164889`, 
           GrayLevel[0.5]]}, "\n"], "Loc" -> Row[{17.277232685974305`, 
          Style[17.66303638202409, 
           GrayLevel[0.5]]}, "\n"], "NL" -> Row[{9.516387213819993, 
          Style[9.52284200000024, 
           GrayLevel[0.5]]}, "\n"]|>, <|"Ion" -> Row[{"O6", 
          Style["O6", 
           GrayLevel[0.5]]}, "\n"], "Tel" -> Row[{190.77809092894884`, 
          Style[190.77809092894884`, 
           GrayLevel[0.5]]}, "\n"], "Tion" -> Row[{3179.984272395761, 
          Style[3179.984272395761, 
           GrayLevel[0.5]]}, "\n"], "Vel" -> Row[{7.143091907100208, 
          Style[12.435388851482415`, 
           GrayLevel[0.5]]}, "\n"], "Vion" -> Row[{1.1096122875228194`, 
          Style[1.9425989154164889`, 
           GrayLevel[0.5]]}, "\n"], "Loc" -> Row[{35.33022132441793, 
          Style[35.913522230728375`, 
           GrayLevel[0.5]]}, "\n"], "NL" -> Row[{17.951019658607592`, 
          Style[18.266917000000458`, 
           GrayLevel[0.5]]}, "\n"]|>, <|"Ion" -> Row[{"H1", 
          Style["H1", 
           GrayLevel[0.5]]}, "\n"], "Tel" -> Row[{190.77809092894884`, 
          Style[190.77809092894884`, 
           GrayLevel[0.5]]}, "\n"], "Tion" -> Row[{3179.984272395761, 
          Style[3179.984272395761, 
           GrayLevel[0.5]]}, "\n"], "Vel" -> Row[{7.143091907100208, 
          Style[12.435388851482415`, 
           GrayLevel[0.5]]}, "\n"], "Vion" -> Row[{1.1096122875228194`, 
          Style[1.9425989154164889`, 
           GrayLevel[0.5]]}, "\n"], "Loc" -> Row[{8.050137694253728, 
          Style[8.169659804014326, 
           GrayLevel[0.5]]}, "\n"], "NL" -> Row[{0., 
          Style[0., 
           GrayLevel[0.5]]}, "\n"]|>, <|"Ion" -> Row[{"Pd18", 
          Style["Pd18", 
           GrayLevel[0.5]]}, "\n"], "Tel" -> Row[{190.77809092894884`, 
          Style[190.77809092894884`, 
           GrayLevel[0.5]]}, "\n"], "Tion" -> Row[{3179.984272395761, 
          Style[3179.984272395761, 
           GrayLevel[0.5]]}, "\n"], "Vel" -> Row[{7.143091907100208, 
          Style[12.435388851482415`, 
           GrayLevel[0.5]]}, "\n"], "Vion" -> Row[{1.1096122875228194`, 
          Style[1.9425989154164889`, 
           GrayLevel[0.5]]}, "\n"], "Loc" -> Row[{49.85793700255364, 
          Style[51.593927279150186`, 
           GrayLevel[0.5]]}, "\n"], "NL" -> Row[{34.121710931520525`, 
          Style[33.87906539367532, 
           GrayLevel[0.5]]}, "\n"]|>}, 
     TypeSystem`Vector[
      TypeSystem`Struct[{"Ion", "Tel", "Tion", "Vel", "Vion", "Loc", "NL"}, {
       TypeSystem`AnyType, TypeSystem`AnyType, TypeSystem`AnyType, 
        TypeSystem`AnyType, TypeSystem`AnyType, TypeSystem`AnyType, 
        TypeSystem`AnyType}], 6], <||>], 
    Dataset[{<|
      "Tel" -> 43688.182822729286`, "Tion" -> 14.184687834209845`, "Vel" -> 
       372955.1146535161, "Vion" -> 56834.34136691881, "Loc" -> 
       236488.31281595293`, "NL" -> 125579.21539249469`, "Total" -> 
       835559.351739446|>, <|
      "Tel" -> 43688.182822729286`, "Tion" -> 14.184687834209845`, "Vel" -> 
       649276.5227135998, "Vion" -> 99499.91644763257, "Loc" -> 
       241569.46474993188`, "NL" -> 125970.42024915462`, "Total" -> 
       1.1600186916708823`*^6|>, <|
      "Tel" -> 1., "Tion" -> 0.9999999999999999, "Vel" -> 1.7408972211489653`,
        "Vion" -> 1.750700616116365, "Loc" -> 1.0214858479621076`, "NL" -> 
       1.0031152038610627`, "Total" -> 1.3883139351573113`|>}, 
     TypeSystem`Vector[
      TypeSystem`Struct[{"Tel", "Tion", "Vel", "Vion", "Loc", "NL", "Total"}, {
        TypeSystem`Atom[Real], 
        TypeSystem`Atom[Real], 
        TypeSystem`Atom[Real], 
        TypeSystem`Atom[Real], 
        TypeSystem`Atom[Real], 
        TypeSystem`Atom[Real], 
        TypeSystem`Atom[Real]}], 3], <||>]}],
  Editable->False]], "Print",
 CellChangeTimes->{3.962708745528565*^9, 3.962803641722584*^9, 
  3.962992105775748*^9},
 CellLabel->
  "During evaluation of \
In[46]:=",ExpressionUUID->"d6bddac5-78e5-409b-9845-654f60640366"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Compilation Cost:\"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "24176", ",", "8094", ",", "12671", ",", "1622", ",", "161350"}], "}"}],
      ",", "207913"}], "}"}]}],
  SequenceForm[
  "Compilation Cost:", {{24176, 8094, 12671, 1622, 161350}, 207913}],
  Editable->False]], "Print",
 CellChangeTimes->{3.962708745528565*^9, 3.962803641722584*^9, 
  3.962992105865347*^9},
 CellLabel->
  "During evaluation of \
In[46]:=",ExpressionUUID->"649c16a7-301c-428e-9ca4-6927cecedbbe"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Qubit Cost:\"\>", "\[InvisibleSpace]", "5751"}],
  SequenceForm["Qubit Cost:", 5751],
  Editable->False]], "Print",
 CellChangeTimes->{3.962708745528565*^9, 3.962803641722584*^9, 
  3.962992105865761*^9},
 CellLabel->
  "During evaluation of \
In[46]:=",ExpressionUUID->"2309dcc8-2888-46a0-964c-1d82f2b81992"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Time Evolution Cost:\"\>", "\[InvisibleSpace]", 
   TagBox[
    TagBox[
     DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
      "InitialData" -> <|
        "exact" -> <|
          "query" -> 2 + 
            Ceiling[1.135642901216178*^6 $CellContext`t + 
              Log[2.9552401942122875`/$CellContext`\[Epsilon]]], 
           "compilation" -> ScientificForm[207913., 5], "total" -> 
           207913 (2 + 
             Ceiling[1.135642901216178*^6 $CellContext`t + 
               Log[2.9552401942122875`/$CellContext`\[Epsilon]]])|>, 
         "bound" -> <|
          "query" -> 2 + 
            Ceiling[1.5766288651208975`*^6 $CellContext`t + 
              Log[2.9552401942122875`/$CellContext`\[Epsilon]]], 
           "compilation" -> ScientificForm[207913., 5], "total" -> 
           207913 (2 + 
             Ceiling[1.5766288651208975`*^6 $CellContext`t + 
               Log[2.9552401942122875`/$CellContext`\[Epsilon]]])|>|>, 
       "AllowEmbedding" -> True, "InitialShape" -> 
       TypeSystem`PackageScope`HeaderShape[<|{All, 
            TypeSystem`PackageScope`KeyDummy[3]} -> 1, {All, "query"} -> 
          1, {All, "compilation"} -> 1, {All, "total"} -> 1|>, 
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`ColumnShape[
           TypeSystem`PackageScope`KeyValueShape[
            TypeSystem`PackageScope`AtomShape[56.00000000000001], 
            TypeSystem`PackageScope`Limited[
             
             TypeSystem`PackageScope`RowShape[<|
              "query" -> TypeSystem`PackageScope`UnknownShape[False], 
               "compilation" -> TypeSystem`PackageScope`UnknownShape[False], 
               "total" -> TypeSystem`PackageScope`UnknownShape[False]|>], 
             DirectedInfinity[1], 3, {All}]]], 2, 
          DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Assoc[
         TypeSystem`Atom[String], 
         TypeSystem`Struct[{"query", "compilation", "total"}, {
          TypeSystem`AnyType, TypeSystem`AnyType, TypeSystem`AnyType}], 2], 
       "Meta" -> <||>, "RowTarget" -> 20, "ColumnTarget" -> 10, "Shape" -> 
       TypeSystem`PackageScope`HeaderShape[<|{All, 
            TypeSystem`PackageScope`KeyDummy[3]} -> 1, {All, "query"} -> 
          1, {All, "compilation"} -> 1, {All, "total"} -> 1|>, 
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`ColumnShape[
           TypeSystem`PackageScope`KeyValueShape[
            TypeSystem`PackageScope`AtomShape[56.00000000000001], 
            TypeSystem`PackageScope`Limited[
             
             TypeSystem`PackageScope`RowShape[<|
              "query" -> TypeSystem`PackageScope`UnknownShape[False], 
               "compilation" -> TypeSystem`PackageScope`UnknownShape[False], 
               "total" -> TypeSystem`PackageScope`UnknownShape[False]|>], 
             DirectedInfinity[1], 3, {All}]]], 2, 
          DirectedInfinity[1], {}]], "Type" -> TypeSystem`Assoc[
         TypeSystem`Atom[String], 
         TypeSystem`Struct[{"query", "compilation", "total"}, {
          TypeSystem`AnyType, TypeSystem`AnyType, TypeSystem`AnyType}], 2], 
       "Path" -> {}, "DisplayedRowCount" -> 2, "DisplayedColumnCount" -> 3, 
       "DataRowCount" -> 2, "DataColumnCount" -> 3, "SortPaths" -> {}, 
       "SortDirections" -> {}, "HiddenItemsMap" -> Null, "UpdateType" -> 1|>, 
      TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
      TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
      TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
      TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
      TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
      DynamicModule[{
       TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
          Style[
           Grid[{{
              Item[
               Pane[
                Annotation[
                 Mouseover[
                  
                  Graphics[{}, ImageSize -> 6, BaselinePosition -> 
                   Scaled[-0.15]], 
                  Graphics[{
                    GrayLevel[0.6], 
                    
                    Polygon[{{2^Rational[-1, 2], -2^Rational[-1, 2]}, {
                    2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], -2^
                    Rational[-1, 2]}}]}, ImageSize -> 6, BaselinePosition -> 
                   Scaled[-0.15]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                  All, Keys}, "KeyDummy", True], "Mouse"], 
                ImageSize -> {{1, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
               GrayLevel[0.95], Alignment -> {Left, Baseline}], 
              Item[
               Pane[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["query", 
                    Style[
                    "query", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "query"}, 1]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                  All, "query"}, "ColumnHeader", True], "Mouse"], 
                ImageSize -> {{1, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
               GrayLevel[0.95], Alignment -> {Left, Baseline}], 
              Item[
               Pane[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["compilation", 
                    Style[
                    "compilation", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "compilation"}, 1]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                  All, "compilation"}, "ColumnHeader", True], "Mouse"], 
                ImageSize -> {{1, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
               GrayLevel[0.95], Alignment -> {Left, Baseline}], 
              Item[
               Pane[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["total", 
                    Style[
                    "total", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "total"}, 1]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                  All, "total"}, "ColumnHeader", True], "Mouse"], 
                ImageSize -> {{1, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
               GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
              Item[
               Pane[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["exact", 
                    Style[
                    "exact", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["exact"]}, 1]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["exact"]}, "RowHeader", False], "Mouse"], 
                ImageSize -> {{56.00000000000001, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
               GrayLevel[0.95], Alignment -> {Left, Baseline}], 
              Item[
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   RowBox[{"2", "+", 
                    RowBox[{"Ceiling", "[", 
                    RowBox[{
                    RowBox[{"1.135642901216178`*^6", " ", "t"}], "+", 
                    RowBox[{"Log", "[", 
                    FractionBox["2.9552401942122875`", "\[Epsilon]"], "]"}]}],
                     "]"}]}], FontFamily -> Dynamic[
                    CurrentValue[{"StyleHints", "CodeFont"}]], 
                   ShowStringCharacters -> True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["exact"], 
                   Key["query"]}, "Item", False], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}], 
              Item[
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   TagBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"\"2.0791\"", "\[Times]", 
                    SuperscriptBox["10", "\"5\""]}], ShowStringCharacters -> 
                    False], 207913., AutoDelete -> True], 
                    ScientificForm[#, 5]& ], FontFamily -> Dynamic[
                    CurrentValue[{"StyleHints", "CodeFont"}]], 
                   ShowStringCharacters -> True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["exact"], 
                   Key["compilation"]}, "Item", False], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}], 
              Item[
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   RowBox[{"207913", " ", 
                    RowBox[{"(", 
                    RowBox[{"2", "+", 
                    RowBox[{"Ceiling", "[", 
                    RowBox[{
                    RowBox[{"1.135642901216178`*^6", " ", "t"}], "+", 
                    RowBox[{"Log", "[", 
                    FractionBox["2.9552401942122875`", "\[Epsilon]"], "]"}]}],
                     "]"}]}], ")"}]}], FontFamily -> Dynamic[
                    CurrentValue[{"StyleHints", "CodeFont"}]], 
                   ShowStringCharacters -> True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["exact"], 
                   Key["total"]}, "Item", False], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}]}, {
              Item[
               Pane[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["bound", 
                    Style[
                    "bound", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["bound"]}, 1]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["bound"]}, "RowHeader", False], "Mouse"], 
                ImageSize -> {{56.00000000000001, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
               GrayLevel[0.95], Alignment -> {Left, Baseline}], 
              Item[
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   RowBox[{"2", "+", 
                    RowBox[{"Ceiling", "[", 
                    RowBox[{
                    RowBox[{"1.5766288651208975`*^6", " ", "t"}], "+", 
                    RowBox[{"Log", "[", 
                    FractionBox["2.9552401942122875`", "\[Epsilon]"], "]"}]}],
                     "]"}]}], FontFamily -> Dynamic[
                    CurrentValue[{"StyleHints", "CodeFont"}]], 
                   ShowStringCharacters -> True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["bound"], 
                   Key["query"]}, "Item", False], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}], 
              Item[
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   TagBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"\"2.0791\"", "\[Times]", 
                    SuperscriptBox["10", "\"5\""]}], ShowStringCharacters -> 
                    False], 207913., AutoDelete -> True], 
                    ScientificForm[#, 5]& ], FontFamily -> Dynamic[
                    CurrentValue[{"StyleHints", "CodeFont"}]], 
                   ShowStringCharacters -> True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["bound"], 
                   Key["compilation"]}, "Item", False], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}], 
              Item[
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   RowBox[{"207913", " ", 
                    RowBox[{"(", 
                    RowBox[{"2", "+", 
                    RowBox[{"Ceiling", "[", 
                    RowBox[{
                    RowBox[{"1.5766288651208975`*^6", " ", "t"}], "+", 
                    RowBox[{"Log", "[", 
                    FractionBox["2.9552401942122875`", "\[Epsilon]"], "]"}]}],
                     "]"}]}], ")"}]}], FontFamily -> Dynamic[
                    CurrentValue[{"StyleHints", "CodeFont"}]], 
                   ShowStringCharacters -> True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["bound"], 
                   Key["total"]}, "Item", False], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}]}}, 
            BaseStyle -> {
             ContextMenu -> 
              Dynamic[TypeSystem`NestedGrid`PackagePrivate`$\
contextMenuTrigger; 
                Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                  TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                  TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger, TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu,
                   True, TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger = 
                   TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                  TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                   Block[{TypeSystem`NestedGrid`PackagePrivate`$\
globalScrollPos = {TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                    
                    With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
              "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, 
            Dividers -> All, FrameStyle -> GrayLevel[0.7490196078431373], 
            Spacings -> {0, 0}, Alignment -> Left, 
            BaseStyle -> {
             FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
              Plain}], LineBreakWithin -> False, ContextMenu -> {}, 
           NumberMarks -> False, ShowAutoStyles -> False]], 
        TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
       Dynamic[
        TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
        TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
           Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
           
           Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
             TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
             TypeSystem`NestedGrid`PackagePrivate`datasetData[
              TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
               FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
               TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
               TypeSystem`NestedGrid`PackagePrivate`renderGrid[
               TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
               TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
              Not[
               FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
              TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
              TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
         TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
         TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
         TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
           FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
           TypeSystem`SparseGrid[
            TypeSystem`H["(data no longer present)"]], 
           TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
        TrackedSymbols :> {
         TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
          TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
       DynamicModuleValues :> {}], 
      TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
       TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
        TypeSystem`PackageScope`SubViewPathbar[
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
         TypeSystem`NestedGrid`PackagePrivate`updateState[
         TypeSystem`NestedGrid`PackagePrivate`$state$$, 
          TypeSystem`NestedGrid`PackagePrivate`$path$$, 
          TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
          TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
       TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
      TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
       Framed[
        Dynamic[
         Replace[
         TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
          TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
             TypeSystem`NestedGrid`PackagePrivate`localHold[
             TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
             Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
             TypeSystem`NestedGrid`PackagePrivate`localHold[
             TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
              Blank[]], 
             Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
              Blank[]], 
             Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
              Blank[]]] :> (
            Increment[
             TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
            TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
             TypeSystem`NestedGrid`PackagePrivate`path$; 
            TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
             TypeSystem`NestedGrid`PackagePrivate`pathType$; 
            TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
             TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
            TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
             TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
            TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
             TypeSystem`NestedGrid`PackagePrivate`path$, 
              TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
           Spacer[10], Blank[] :> Spacer[10]}], 
         TrackedSymbols :> {
          TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], 
        FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
        Top, ImageSize -> {Automatic, 15}], FontSize -> 1], 
      TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
      DynamicWrapperBox[
       DynamicBox[ToBoxes[
         Dataset`DatasetContent[
         2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
          "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], 
          "State" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], 
          "VPos" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], 
          "HPos" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], 
          "TopBar" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], 
          "BottomBar" -> 
          Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
          Hold[
            TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
        ImageSizeCache->{869., {51.3544921875, 56.6455078125}},
        TrackedSymbols:>{
         TypeSystem`NestedGrid`PackagePrivate`$state$$, 
          TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
       MouseAnnotation[],
       ImageSizeCache->{869., {51.3544921875, 56.6455078125}}],
      BaseStyle->{LineBreakWithin -> False},
      DynamicModuleValues:>{},
      Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
       CreateUUID[]),
      UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
     Deploy,
     DefaultBaseStyle->"Deploy"],
    Dataset`InterpretDataset[1],
    Editable->False,
    SelectWithContents->True,
    Selectable->False]}],
  SequenceForm["Time Evolution Cost:", 
   Dataset[<|
    "exact" -> <|
      "query" -> 2 + 
        Ceiling[1.135642901216178*^6 $CellContext`t + 
          Log[2.9552401942122875`/$CellContext`\[Epsilon]]], "compilation" -> 
       ScientificForm[207913., 5], "total" -> 
       207913 (2 + 
         Ceiling[1.135642901216178*^6 $CellContext`t + 
           Log[2.9552401942122875`/$CellContext`\[Epsilon]]])|>, 
     "bound" -> <|
      "query" -> 2 + 
        Ceiling[1.5766288651208975`*^6 $CellContext`t + 
          Log[2.9552401942122875`/$CellContext`\[Epsilon]]], "compilation" -> 
       ScientificForm[207913., 5], "total" -> 
       207913 (2 + 
         Ceiling[1.5766288651208975`*^6 $CellContext`t + 
           Log[2.9552401942122875`/$CellContext`\[Epsilon]]])|>|>, 
    TypeSystem`Assoc[
     TypeSystem`Atom[String], 
     TypeSystem`Struct[{"query", "compilation", "total"}, {
      TypeSystem`AnyType, TypeSystem`AnyType, TypeSystem`AnyType}], 2], <||>]],
  Editable->False]], "Print",
 CellChangeTimes->{3.962708745528565*^9, 3.962803641722584*^9, 
  3.962992105867196*^9},
 CellLabel->
  "During evaluation of \
In[46]:=",ExpressionUUID->"b3cffb74-88e2-4e58-8929-455e88477364"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Particle Count:\"\>", "\[InvisibleSpace]", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"\[Eta]el\"\>", "\[Rule]", "677"}], ",", 
     RowBox[{"\<\"\[Eta]ion\"\>", "\[Rule]", "168"}], ",", 
     RowBox[{"\<\"\[Eta]\"\>", "\[Rule]", "845"}]}], "\[RightAssociation]"}]}],
  SequenceForm[
  "Particle Count:", <|
   "\[Eta]el" -> 677, "\[Eta]ion" -> 168, "\[Eta]" -> 845|>],
  Editable->False]], "Print",
 CellChangeTimes->{3.962708745528565*^9, 3.962803641722584*^9, 
  3.962992105899819*^9},
 CellLabel->
  "During evaluation of \
In[46]:=",ExpressionUUID->"301c13a8-9031-4596-b8b1-6f5ed9b88f3b"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Rescaling Factors:\"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
     TagBox[
      TagBox[
       DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
        "InitialData" -> {<|"Ion" -> Row[{"B3", 
               Style["B3", 
                GrayLevel[0.5]]}, "\n"], "Tel" -> Row[{228.12460104026843`, 
               Style[228.12460104026843`, 
                GrayLevel[0.5]]}, "\n"], "Tion" -> Row[{3737.41551590916, 
               Style[3737.41551590916, 
                GrayLevel[0.5]]}, "\n"], "Vel" -> Row[{7.76332884196203, 
               Style[13.598192407915421`, 
                GrayLevel[0.5]]}, "\n"], "Vion" -> Row[{1.1042255394923521`, 
               Style[1.9425989154164889`, 
                GrayLevel[0.5]]}, "\n"], "Loc" -> Row[{10.874786791190587`, 
               Style[11.094862778486384`, 
                GrayLevel[0.5]]}, "\n"], "NL" -> Row[{6.233674055305539, 
               Style[6.233928000000156, 
                GrayLevel[0.5]]}, "\n"]|>, <|"Ion" -> Row[{"N5", 
               Style["N5", 
                GrayLevel[0.5]]}, "\n"], "Tel" -> Row[{228.12460104026843`, 
               Style[228.12460104026843`, 
                GrayLevel[0.5]]}, "\n"], "Tion" -> Row[{3737.41551590916, 
               Style[3737.41551590916, 
                GrayLevel[0.5]]}, "\n"], "Vel" -> Row[{7.76332884196203, 
               Style[13.598192407915421`, 
                GrayLevel[0.5]]}, "\n"], "Vion" -> Row[{1.1042255394923521`, 
               Style[1.9425989154164889`, 
                GrayLevel[0.5]]}, "\n"], "Loc" -> Row[{25.663719025299766`, 
               Style[26.030506422645928`, 
                GrayLevel[0.5]]}, "\n"], "NL" -> Row[{13.532745592134761`, 
               Style[13.55224300000034, 
                GrayLevel[0.5]]}, "\n"]|>, <|"Ion" -> Row[{"C4", 
               Style["C4", 
                GrayLevel[0.5]]}, "\n"], "Tel" -> Row[{228.12460104026843`, 
               Style[228.12460104026843`, 
                GrayLevel[0.5]]}, "\n"], "Tion" -> Row[{3737.41551590916, 
               Style[3737.41551590916, 
                GrayLevel[0.5]]}, "\n"], "Vel" -> Row[{7.76332884196203, 
               Style[13.598192407915421`, 
                GrayLevel[0.5]]}, "\n"], "Vion" -> Row[{1.1042255394923521`, 
               Style[1.9425989154164889`, 
                GrayLevel[0.5]]}, "\n"], "Loc" -> Row[{17.369610676003674`, 
               Style[17.66303638202409, 
                GrayLevel[0.5]]}, "\n"], "NL" -> Row[{9.521584278097114, 
               Style[9.52284200000024, 
                GrayLevel[0.5]]}, "\n"]|>, <|"Ion" -> Row[{"O6", 
               Style["O6", 
                GrayLevel[0.5]]}, "\n"], "Tel" -> Row[{228.12460104026843`, 
               Style[228.12460104026843`, 
                GrayLevel[0.5]]}, "\n"], "Tion" -> Row[{3737.41551590916, 
               Style[3737.41551590916, 
                GrayLevel[0.5]]}, "\n"], "Vel" -> Row[{7.76332884196203, 
               Style[13.598192407915421`, 
                GrayLevel[0.5]]}, "\n"], "Vion" -> Row[{1.1042255394923521`, 
               Style[1.9425989154164889`, 
                GrayLevel[0.5]]}, "\n"], "Loc" -> Row[{35.472852449607196`, 
               Style[35.913522230728375`, 
                GrayLevel[0.5]]}, "\n"], "NL" -> Row[{18.135019565243102`, 
               Style[18.266917000000458`, 
                GrayLevel[0.5]]}, "\n"]|>, <|"Ion" -> Row[{"H1", 
               Style["H1", 
                GrayLevel[0.5]]}, "\n"], "Tel" -> Row[{228.12460104026843`, 
               Style[228.12460104026843`, 
                GrayLevel[0.5]]}, "\n"], "Tion" -> Row[{3737.41551590916, 
               Style[3737.41551590916, 
                GrayLevel[0.5]]}, "\n"], "Vel" -> Row[{7.76332884196203, 
               Style[13.598192407915421`, 
                GrayLevel[0.5]]}, "\n"], "Vion" -> Row[{1.1042255394923521`, 
               Style[1.9425989154164889`, 
                GrayLevel[0.5]]}, "\n"], "Loc" -> Row[{8.090291331791029, 
               Style[8.169659804014326, 
                GrayLevel[0.5]]}, "\n"], "NL" -> Row[{0., 
               Style[0., 
                GrayLevel[0.5]]}, "\n"]|>, <|"Ion" -> Row[{"Pd18", 
               Style["Pd18", 
                GrayLevel[0.5]]}, "\n"], "Tel" -> Row[{228.12460104026843`, 
               Style[228.12460104026843`, 
                GrayLevel[0.5]]}, "\n"], "Tion" -> Row[{3737.41551590916, 
               Style[3737.41551590916, 
                GrayLevel[0.5]]}, "\n"], "Vel" -> Row[{7.76332884196203, 
               Style[13.598192407915421`, 
                GrayLevel[0.5]]}, "\n"], "Vion" -> Row[{1.1042255394923521`, 
               Style[1.9425989154164889`, 
                GrayLevel[0.5]]}, "\n"], "Loc" -> Row[{50.273549697949115`, 
               Style[51.593927279150186`, 
                GrayLevel[0.5]]}, "\n"], "NL" -> Row[{34.15625305895113, 
               Style[33.87906539367532, 
                GrayLevel[0.5]]}, "\n"]|>}, "AllowEmbedding" -> True, 
         "InitialShape" -> 
         TypeSystem`PackageScope`HeaderShape[<|{All, "Ion"} -> 
            1, {All, "Tel"} -> 1, {All, "Tion"} -> 1, {All, "Vel"} -> 
            1, {All, "Vion"} -> 1, {All, "Loc"} -> 1, {All, "NL"} -> 1|>, 
           TypeSystem`PackageScope`Limited[
            TypeSystem`PackageScope`ColumnShape[
             TypeSystem`PackageScope`Limited[
              
              TypeSystem`PackageScope`RowShape[<|
               "Ion" -> TypeSystem`PackageScope`UnknownShape[False], "Tel" -> 
                TypeSystem`PackageScope`UnknownShape[False], "Tion" -> 
                TypeSystem`PackageScope`UnknownShape[False], "Vel" -> 
                TypeSystem`PackageScope`UnknownShape[False], "Vion" -> 
                TypeSystem`PackageScope`UnknownShape[False], "Loc" -> 
                TypeSystem`PackageScope`UnknownShape[False], "NL" -> 
                TypeSystem`PackageScope`UnknownShape[False]|>], 
              DirectedInfinity[1], 7, {All}]], 6, 
            DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Vector[
           
           TypeSystem`Struct[{
            "Ion", "Tel", "Tion", "Vel", "Vion", "Loc", "NL"}, {
            TypeSystem`AnyType, TypeSystem`AnyType, TypeSystem`AnyType, 
             TypeSystem`AnyType, TypeSystem`AnyType, TypeSystem`AnyType, 
             TypeSystem`AnyType}], 6], "Meta" -> <||>, "RowTarget" -> 20, 
         "ColumnTarget" -> 10, "Shape" -> 
         TypeSystem`PackageScope`HeaderShape[<|{All, "Ion"} -> 
            1, {All, "Tel"} -> 1, {All, "Tion"} -> 1, {All, "Vel"} -> 
            1, {All, "Vion"} -> 1, {All, "Loc"} -> 1, {All, "NL"} -> 1|>, 
           TypeSystem`PackageScope`Limited[
            TypeSystem`PackageScope`ColumnShape[
             TypeSystem`PackageScope`Limited[
              
              TypeSystem`PackageScope`RowShape[<|
               "Ion" -> TypeSystem`PackageScope`UnknownShape[False], "Tel" -> 
                TypeSystem`PackageScope`UnknownShape[False], "Tion" -> 
                TypeSystem`PackageScope`UnknownShape[False], "Vel" -> 
                TypeSystem`PackageScope`UnknownShape[False], "Vion" -> 
                TypeSystem`PackageScope`UnknownShape[False], "Loc" -> 
                TypeSystem`PackageScope`UnknownShape[False], "NL" -> 
                TypeSystem`PackageScope`UnknownShape[False]|>], 
              DirectedInfinity[1], 7, {All}]], 6, 
            DirectedInfinity[1], {}]], "Type" -> TypeSystem`Vector[
           
           TypeSystem`Struct[{
            "Ion", "Tel", "Tion", "Vel", "Vion", "Loc", "NL"}, {
            TypeSystem`AnyType, TypeSystem`AnyType, TypeSystem`AnyType, 
             TypeSystem`AnyType, TypeSystem`AnyType, TypeSystem`AnyType, 
             TypeSystem`AnyType}], 6], "Path" -> {}, "DisplayedRowCount" -> 6,
          "DisplayedColumnCount" -> 7, "DataRowCount" -> 6, "DataColumnCount" -> 
         7, "SortPaths" -> {}, "SortDirections" -> {}, "HiddenItemsMap" -> 
         Null, "UpdateType" -> 1|>, 
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
        DynamicModule[{
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
            Style[
             Grid[{{
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["Ion", 
                    Style[
                    "Ion", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "Ion"}, 1]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "Ion"}, "ColumnHeader", True], "Mouse"], 
                  ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["Tel", 
                    Style[
                    "Tel", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "Tel"}, 1]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "Tel"}, "ColumnHeader", True], "Mouse"], 
                  ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["Tion", 
                    Style[
                    "Tion", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "Tion"}, 1]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "Tion"}, "ColumnHeader", True], "Mouse"], 
                  ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["Vel", 
                    Style[
                    "Vel", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "Vel"}, 1]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "Vel"}, "ColumnHeader", True], "Mouse"], 
                  ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["Vion", 
                    Style[
                    "Vion", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "Vion"}, 1]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "Vion"}, "ColumnHeader", True], "Mouse"], 
                  ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["Loc", 
                    Style[
                    "Loc", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "Loc"}, 1]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "Loc"}, "ColumnHeader", True], "Mouse"], 
                  ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["NL", 
                    Style[
                    "NL", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "NL"}, 1]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "NL"}, "ColumnHeader", True], "Mouse"], 
                  ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
                Item[
                 Pane[
                  Annotation[
                   Row[{"B3", 
                    Style["B3", 
                    GrayLevel[0.5]]}, "\n"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                    Key["Ion"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   Row[{228.12460104026843`, 
                    Style[228.12460104026843`, 
                    GrayLevel[0.5]]}, "\n"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                    Key["Tel"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   Row[{3737.41551590916, 
                    Style[3737.41551590916, 
                    GrayLevel[0.5]]}, "\n"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                    Key["Tion"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   Row[{7.76332884196203, 
                    Style[13.598192407915421`, 
                    GrayLevel[0.5]]}, "\n"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                    Key["Vel"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   Row[{1.1042255394923521`, 
                    Style[1.9425989154164889`, 
                    GrayLevel[0.5]]}, "\n"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                    Key["Vion"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   Row[{10.874786791190587`, 
                    Style[11.094862778486384`, 
                    GrayLevel[0.5]]}, "\n"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                    Key["Loc"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   Row[{6.233674055305539, 
                    Style[6.233928000000156, 
                    GrayLevel[0.5]]}, "\n"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                    Key["NL"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   Row[{"N5", 
                    Style["N5", 
                    GrayLevel[0.5]]}, "\n"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                    Key["Ion"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   Row[{228.12460104026843`, 
                    Style[228.12460104026843`, 
                    GrayLevel[0.5]]}, "\n"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                    Key["Tel"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   Row[{3737.41551590916, 
                    Style[3737.41551590916, 
                    GrayLevel[0.5]]}, "\n"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                    Key["Tion"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   Row[{7.76332884196203, 
                    Style[13.598192407915421`, 
                    GrayLevel[0.5]]}, "\n"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                    Key["Vel"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   Row[{1.1042255394923521`, 
                    Style[1.9425989154164889`, 
                    GrayLevel[0.5]]}, "\n"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                    Key["Vion"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   Row[{25.663719025299766`, 
                    Style[26.030506422645928`, 
                    GrayLevel[0.5]]}, "\n"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                    Key["Loc"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   Row[{13.532745592134761`, 
                    Style[13.55224300000034, 
                    GrayLevel[0.5]]}, "\n"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                    Key["NL"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   Row[{"C4", 
                    Style["C4", 
                    GrayLevel[0.5]]}, "\n"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                    Key["Ion"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   Row[{228.12460104026843`, 
                    Style[228.12460104026843`, 
                    GrayLevel[0.5]]}, "\n"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                    Key["Tel"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   Row[{3737.41551590916, 
                    Style[3737.41551590916, 
                    GrayLevel[0.5]]}, "\n"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                    Key["Tion"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   Row[{7.76332884196203, 
                    Style[13.598192407915421`, 
                    GrayLevel[0.5]]}, "\n"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                    Key["Vel"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   Row[{1.1042255394923521`, 
                    Style[1.9425989154164889`, 
                    GrayLevel[0.5]]}, "\n"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                    Key["Vion"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   Row[{17.369610676003674`, 
                    Style[17.66303638202409, 
                    GrayLevel[0.5]]}, "\n"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                    Key["Loc"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   Row[{9.521584278097114, 
                    Style[9.52284200000024, 
                    GrayLevel[0.5]]}, "\n"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                    Key["NL"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   Row[{"O6", 
                    Style["O6", 
                    GrayLevel[0.5]]}, "\n"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                    Key["Ion"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   Row[{228.12460104026843`, 
                    Style[228.12460104026843`, 
                    GrayLevel[0.5]]}, "\n"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                    Key["Tel"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   Row[{3737.41551590916, 
                    Style[3737.41551590916, 
                    GrayLevel[0.5]]}, "\n"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                    Key["Tion"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   Row[{7.76332884196203, 
                    Style[13.598192407915421`, 
                    GrayLevel[0.5]]}, "\n"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                    Key["Vel"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   Row[{1.1042255394923521`, 
                    Style[1.9425989154164889`, 
                    GrayLevel[0.5]]}, "\n"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                    Key["Vion"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   Row[{35.472852449607196`, 
                    Style[35.913522230728375`, 
                    GrayLevel[0.5]]}, "\n"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                    Key["Loc"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   Row[{18.135019565243102`, 
                    Style[18.266917000000458`, 
                    GrayLevel[0.5]]}, "\n"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                    Key["NL"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   Row[{"H1", 
                    Style["H1", 
                    GrayLevel[0.5]]}, "\n"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                    Key["Ion"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   Row[{228.12460104026843`, 
                    Style[228.12460104026843`, 
                    GrayLevel[0.5]]}, "\n"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                    Key["Tel"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   Row[{3737.41551590916, 
                    Style[3737.41551590916, 
                    GrayLevel[0.5]]}, "\n"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                    Key["Tion"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   Row[{7.76332884196203, 
                    Style[13.598192407915421`, 
                    GrayLevel[0.5]]}, "\n"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                    Key["Vel"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   Row[{1.1042255394923521`, 
                    Style[1.9425989154164889`, 
                    GrayLevel[0.5]]}, "\n"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                    Key["Vion"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   Row[{8.090291331791029, 
                    Style[8.169659804014326, 
                    GrayLevel[0.5]]}, "\n"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                    Key["Loc"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   Row[{0., 
                    Style[0., 
                    GrayLevel[0.5]]}, "\n"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                    Key["NL"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   Row[{"Pd18", 
                    Style["Pd18", 
                    GrayLevel[0.5]]}, "\n"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                    Key["Ion"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   Row[{228.12460104026843`, 
                    Style[228.12460104026843`, 
                    GrayLevel[0.5]]}, "\n"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                    Key["Tel"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   Row[{3737.41551590916, 
                    Style[3737.41551590916, 
                    GrayLevel[0.5]]}, "\n"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                    Key["Tion"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   Row[{7.76332884196203, 
                    Style[13.598192407915421`, 
                    GrayLevel[0.5]]}, "\n"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                    Key["Vel"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   Row[{1.1042255394923521`, 
                    Style[1.9425989154164889`, 
                    GrayLevel[0.5]]}, "\n"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                    Key["Vion"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   Row[{50.273549697949115`, 
                    Style[51.593927279150186`, 
                    GrayLevel[0.5]]}, "\n"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                    Key["Loc"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   Row[{34.15625305895113, 
                    Style[33.87906539367532, 
                    GrayLevel[0.5]]}, "\n"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                    Key["NL"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}}, 
              BaseStyle -> {
               ContextMenu -> 
                Dynamic[
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                  Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger, TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu,
                     True, TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger = 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                    TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                    Block[{TypeSystem`NestedGrid`PackagePrivate`$\
globalScrollPos = {TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                    
                    With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
                "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, 
              Dividers -> All, FrameStyle -> GrayLevel[0.7490196078431373], 
              Spacings -> {0, 0}, Alignment -> Left, 
              BaseStyle -> {
               FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
                Plain}], LineBreakWithin -> False, ContextMenu -> {}, 
             NumberMarks -> False, ShowAutoStyles -> False]], 
          TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
         Dynamic[
          TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
          TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
             Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
             
             Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
               TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
               TypeSystem`NestedGrid`PackagePrivate`datasetData[
                TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
              TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
                 FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
                 TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                 TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                 TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
                Not[
                 FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
                TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
                TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
           TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
           TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
           TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
             TypeSystem`SparseGrid[
              TypeSystem`H["(data no longer present)"]], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
          TrackedSymbols :> {
           TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
         DynamicModuleValues :> {}], 
        TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
         TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
          TypeSystem`PackageScope`SubViewPathbar[
          TypeSystem`NestedGrid`PackagePrivate`$path$$, 
           TypeSystem`NestedGrid`PackagePrivate`updateState[
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
            TypeSystem`NestedGrid`PackagePrivate`$path$$, 
            TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
            TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
         TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
        TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
         Framed[
          Dynamic[
           Replace[
           TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
            TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               TypeSystem`NestedGrid`PackagePrivate`localHold[
               TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
               Blank[]] -> "", 
             TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               TypeSystem`NestedGrid`PackagePrivate`localHold[
               TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
               Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
                Blank[]], 
               Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
                Blank[]], 
               Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                Blank[]]] :> (
              Increment[
               TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
              TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
               TypeSystem`NestedGrid`PackagePrivate`path$; 
              TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
               TypeSystem`NestedGrid`PackagePrivate`pathType$; 
              TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
               TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
              TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
               TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
              TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
               TypeSystem`NestedGrid`PackagePrivate`path$, 
                TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
             Spacer[10], Blank[] :> Spacer[10]}], 
           TrackedSymbols :> {
            TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], 
          FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
          Top, ImageSize -> {Automatic, 15}], FontSize -> 1], 
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
        DynamicWrapperBox[
         DynamicBox[ToBoxes[
           Dataset`DatasetContent[
           2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
            "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], 
            "State" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], 
            "VPos" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], 
            "HPos" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], 
            "TopBar" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], 
            "BottomBar" -> 
            Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], 
            "OutputID" -> Hold[
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], 
           StandardForm],
          ImageSizeCache->{478., {167.3544921875, 172.6455078125}},
          
          TrackedSymbols:>{
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
            TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
         TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
         MouseAnnotation[],
         ImageSizeCache->{478., {167.3544921875, 172.6455078125}}],
        BaseStyle->{LineBreakWithin -> False},
        DynamicModuleValues:>{},
        Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
         CreateUUID[]),
        UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
       
       Deploy,
       DefaultBaseStyle->"Deploy"],
      Dataset`InterpretDataset[1],
      Editable->False,
      SelectWithContents->True,
      Selectable->False], ",", 
     TagBox[
      TagBox[
       DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
        "InitialData" -> {<|
           "Tel" -> 154440.35490426174`, "Tion" -> 35.490449389713476`, "Vel" -> 
            3.552902971181607*^6, "Vion" -> 502647.8824790767, "Loc" -> 
            2.0880178624092855`*^6, "NL" -> 1.121558260994093*^6, "Total" -> 
            7.419602822417714*^6|>, <|
           "Tel" -> 154440.35490426174`, "Tion" -> 35.490449389713476`, "Vel" -> 
            6.223239951867309*^6, "Vion" -> 884278.7966932474, "Loc" -> 
            2.1216565064795464`*^6, "NL" -> 1.122543683985546*^6, "Total" -> 
            1.05061947843793*^7|>, <|
           "Tel" -> 1., "Tion" -> 1., "Vel" -> 1.7515929937702788`, "Vion" -> 
            1.7592410661951938`, "Loc" -> 1.016110323898976, "NL" -> 
            1.0008786195293853`, "Total" -> 1.416005012105999|>}, 
         "AllowEmbedding" -> True, "InitialShape" -> 
         TypeSystem`PackageScope`HeaderShape[<|{All, "Tel"} -> 
            1, {All, "Tion"} -> 1, {All, "Vel"} -> 1, {All, "Vion"} -> 
            1, {All, "Loc"} -> 1, {All, "NL"} -> 1, {All, "Total"} -> 1|>, 
           TypeSystem`PackageScope`Limited[
            TypeSystem`PackageScope`ColumnShape[
             TypeSystem`PackageScope`Limited[
              
              TypeSystem`PackageScope`RowShape[<|
               "Tel" -> TypeSystem`PackageScope`AtomShape[60], "Tion" -> 
                TypeSystem`PackageScope`AtomShape[60], "Vel" -> 
                TypeSystem`PackageScope`AtomShape[60], "Vion" -> 
                TypeSystem`PackageScope`AtomShape[60], "Loc" -> 
                TypeSystem`PackageScope`AtomShape[60], "NL" -> 
                TypeSystem`PackageScope`AtomShape[60], "Total" -> 
                TypeSystem`PackageScope`AtomShape[60]|>], 
              DirectedInfinity[1], 7, {All}]], 3, 
            DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Vector[
           
           TypeSystem`Struct[{
            "Tel", "Tion", "Vel", "Vion", "Loc", "NL", "Total"}, {
             TypeSystem`Atom[Real], 
             TypeSystem`Atom[Real], 
             TypeSystem`Atom[Real], 
             TypeSystem`Atom[Real], 
             TypeSystem`Atom[Real], 
             TypeSystem`Atom[Real], 
             TypeSystem`Atom[Real]}], 3], "Meta" -> <||>, "RowTarget" -> 20, 
         "ColumnTarget" -> 10, "Shape" -> 
         TypeSystem`PackageScope`HeaderShape[<|{All, "Tel"} -> 
            1, {All, "Tion"} -> 1, {All, "Vel"} -> 1, {All, "Vion"} -> 
            1, {All, "Loc"} -> 1, {All, "NL"} -> 1, {All, "Total"} -> 1|>, 
           TypeSystem`PackageScope`Limited[
            TypeSystem`PackageScope`ColumnShape[
             TypeSystem`PackageScope`Limited[
              
              TypeSystem`PackageScope`RowShape[<|
               "Tel" -> TypeSystem`PackageScope`AtomShape[60], "Tion" -> 
                TypeSystem`PackageScope`AtomShape[60], "Vel" -> 
                TypeSystem`PackageScope`AtomShape[60], "Vion" -> 
                TypeSystem`PackageScope`AtomShape[60], "Loc" -> 
                TypeSystem`PackageScope`AtomShape[60], "NL" -> 
                TypeSystem`PackageScope`AtomShape[60], "Total" -> 
                TypeSystem`PackageScope`AtomShape[60]|>], 
              DirectedInfinity[1], 7, {All}]], 3, 
            DirectedInfinity[1], {}]], "Type" -> TypeSystem`Vector[
           
           TypeSystem`Struct[{
            "Tel", "Tion", "Vel", "Vion", "Loc", "NL", "Total"}, {
             TypeSystem`Atom[Real], 
             TypeSystem`Atom[Real], 
             TypeSystem`Atom[Real], 
             TypeSystem`Atom[Real], 
             TypeSystem`Atom[Real], 
             TypeSystem`Atom[Real], 
             TypeSystem`Atom[Real]}], 3], "Path" -> {}, "DisplayedRowCount" -> 
         3, "DisplayedColumnCount" -> 7, "DataRowCount" -> 3, 
         "DataColumnCount" -> 7, "SortPaths" -> {}, "SortDirections" -> {}, 
         "HiddenItemsMap" -> Null, "UpdateType" -> 1|>, 
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
        DynamicModule[{
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
            Style[
             Grid[{{
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["Tel", 
                    Style[
                    "Tel", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "Tel"}, 1]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "Tel"}, "ColumnHeader", True], "Mouse"], 
                  ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["Tion", 
                    Style[
                    "Tion", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "Tion"}, 1]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "Tion"}, "ColumnHeader", True], "Mouse"], 
                  ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["Vel", 
                    Style[
                    "Vel", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "Vel"}, 1]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "Vel"}, "ColumnHeader", True], "Mouse"], 
                  ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["Vion", 
                    Style[
                    "Vion", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "Vion"}, 1]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "Vion"}, "ColumnHeader", True], "Mouse"], 
                  ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["Loc", 
                    Style[
                    "Loc", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "Loc"}, 1]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "Loc"}, "ColumnHeader", True], "Mouse"], 
                  ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["NL", 
                    Style[
                    "NL", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "NL"}, 1]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "NL"}, "ColumnHeader", True], "Mouse"], 
                  ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["Total", 
                    Style[
                    "Total", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "Total"}, 1]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "Total"}, "ColumnHeader", True], "Mouse"], 
                  ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["154440."], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                    Key["Tel"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["35.4904"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                    Key["Tion"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["3552903."], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                    Key["Vel"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["502648."], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                    Key["Vion"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["2088018."], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                    Key["Loc"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["1121558."], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                    Key["NL"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["7419603."], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                    Key["Total"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["154440."], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                    Key["Tel"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["35.4904"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                    Key["Tion"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["6223240."], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                    Key["Vel"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["884279."], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                    Key["Vion"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["2121657."], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                    Key["Loc"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["1122544."], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                    Key["NL"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["10506195."], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                    Key["Total"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["1.0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                    Key["Tel"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["1.0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                    Key["Tion"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["1.75159"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                    Key["Vel"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["1.75924"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                    Key["Vion"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["1.01611"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                    Key["Loc"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["1.00088"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                    Key["NL"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["1.41601"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                    Key["Total"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}}, 
              BaseStyle -> {
               ContextMenu -> 
                Dynamic[
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                  Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger, TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu,
                     True, TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger = 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                    TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                    Block[{TypeSystem`NestedGrid`PackagePrivate`$\
globalScrollPos = {TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                    
                    With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
                "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, 
              Dividers -> All, FrameStyle -> GrayLevel[0.7490196078431373], 
              Spacings -> {0, 0}, Alignment -> Left, 
              BaseStyle -> {
               FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
                Plain}], LineBreakWithin -> False, ContextMenu -> {}, 
             NumberMarks -> False, ShowAutoStyles -> False]], 
          TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
         Dynamic[
          TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
          TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
             Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
             Module[{
              TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
               TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
               TypeSystem`NestedGrid`PackagePrivate`datasetData[
                TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
              TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
                 FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
                 TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                 TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                 TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
                Not[
                 FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
                TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
                TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
           TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
           TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
           TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
             TypeSystem`SparseGrid[
              TypeSystem`H["(data no longer present)"]], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
          TrackedSymbols :> {
           TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
         DynamicModuleValues :> {}], 
        TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
         TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
          TypeSystem`PackageScope`SubViewPathbar[
          TypeSystem`NestedGrid`PackagePrivate`$path$$, 
           TypeSystem`NestedGrid`PackagePrivate`updateState[
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
            TypeSystem`NestedGrid`PackagePrivate`$path$$, 
            TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
            TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
         TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
        TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
         Framed[
          Dynamic[
           Replace[
           TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
            TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               TypeSystem`NestedGrid`PackagePrivate`localHold[
               TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
               Blank[]] -> "", 
             TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               TypeSystem`NestedGrid`PackagePrivate`localHold[
               TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
               Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
                Blank[]], 
               Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
                Blank[]], 
               Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                Blank[]]] :> (
              Increment[
               TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
              TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
               TypeSystem`NestedGrid`PackagePrivate`path$; 
              TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
               TypeSystem`NestedGrid`PackagePrivate`pathType$; 
              TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
               TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
              TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
               TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
              TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
               TypeSystem`NestedGrid`PackagePrivate`path$, 
                TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
             Spacer[10], Blank[] :> Spacer[10]}], 
           TrackedSymbols :> {
            TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], 
          FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
          Top, ImageSize -> {Automatic, 15}], FontSize -> 1], 
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
        DynamicWrapperBox[
         DynamicBox[ToBoxes[
           Dataset`DatasetContent[
           2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
            "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], 
            "State" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], 
            "VPos" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], 
            "HPos" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], 
            "TopBar" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], 
            "BottomBar" -> 
            Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], 
            "OutputID" -> Hold[
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], 
           StandardForm],
          ImageSizeCache->{481., {60.8544921875, 66.1455078125}},
          
          TrackedSymbols:>{
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
            TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
         TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
         MouseAnnotation[],
         ImageSizeCache->{481., {60.8544921875, 66.1455078125}}],
        BaseStyle->{LineBreakWithin -> False},
        DynamicModuleValues:>{},
        Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
         CreateUUID[]),
        UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
       
       Deploy,
       DefaultBaseStyle->"Deploy"],
      Dataset`InterpretDataset[1],
      Editable->False,
      SelectWithContents->True,
      Selectable->False]}], "}"}]}],
  SequenceForm["Rescaling Factors:", {
    Dataset[{<|"Ion" -> Row[{"B3", 
          Style["B3", 
           GrayLevel[0.5]]}, "\n"], "Tel" -> Row[{228.12460104026843`, 
          Style[228.12460104026843`, 
           GrayLevel[0.5]]}, "\n"], "Tion" -> Row[{3737.41551590916, 
          Style[3737.41551590916, 
           GrayLevel[0.5]]}, "\n"], "Vel" -> Row[{7.76332884196203, 
          Style[13.598192407915421`, 
           GrayLevel[0.5]]}, "\n"], "Vion" -> Row[{1.1042255394923521`, 
          Style[1.9425989154164889`, 
           GrayLevel[0.5]]}, "\n"], "Loc" -> Row[{10.874786791190587`, 
          Style[11.094862778486384`, 
           GrayLevel[0.5]]}, "\n"], "NL" -> Row[{6.233674055305539, 
          Style[6.233928000000156, 
           GrayLevel[0.5]]}, "\n"]|>, <|"Ion" -> Row[{"N5", 
          Style["N5", 
           GrayLevel[0.5]]}, "\n"], "Tel" -> Row[{228.12460104026843`, 
          Style[228.12460104026843`, 
           GrayLevel[0.5]]}, "\n"], "Tion" -> Row[{3737.41551590916, 
          Style[3737.41551590916, 
           GrayLevel[0.5]]}, "\n"], "Vel" -> Row[{7.76332884196203, 
          Style[13.598192407915421`, 
           GrayLevel[0.5]]}, "\n"], "Vion" -> Row[{1.1042255394923521`, 
          Style[1.9425989154164889`, 
           GrayLevel[0.5]]}, "\n"], "Loc" -> Row[{25.663719025299766`, 
          Style[26.030506422645928`, 
           GrayLevel[0.5]]}, "\n"], "NL" -> Row[{13.532745592134761`, 
          Style[13.55224300000034, 
           GrayLevel[0.5]]}, "\n"]|>, <|"Ion" -> Row[{"C4", 
          Style["C4", 
           GrayLevel[0.5]]}, "\n"], "Tel" -> Row[{228.12460104026843`, 
          Style[228.12460104026843`, 
           GrayLevel[0.5]]}, "\n"], "Tion" -> Row[{3737.41551590916, 
          Style[3737.41551590916, 
           GrayLevel[0.5]]}, "\n"], "Vel" -> Row[{7.76332884196203, 
          Style[13.598192407915421`, 
           GrayLevel[0.5]]}, "\n"], "Vion" -> Row[{1.1042255394923521`, 
          Style[1.9425989154164889`, 
           GrayLevel[0.5]]}, "\n"], "Loc" -> Row[{17.369610676003674`, 
          Style[17.66303638202409, 
           GrayLevel[0.5]]}, "\n"], "NL" -> Row[{9.521584278097114, 
          Style[9.52284200000024, 
           GrayLevel[0.5]]}, "\n"]|>, <|"Ion" -> Row[{"O6", 
          Style["O6", 
           GrayLevel[0.5]]}, "\n"], "Tel" -> Row[{228.12460104026843`, 
          Style[228.12460104026843`, 
           GrayLevel[0.5]]}, "\n"], "Tion" -> Row[{3737.41551590916, 
          Style[3737.41551590916, 
           GrayLevel[0.5]]}, "\n"], "Vel" -> Row[{7.76332884196203, 
          Style[13.598192407915421`, 
           GrayLevel[0.5]]}, "\n"], "Vion" -> Row[{1.1042255394923521`, 
          Style[1.9425989154164889`, 
           GrayLevel[0.5]]}, "\n"], "Loc" -> Row[{35.472852449607196`, 
          Style[35.913522230728375`, 
           GrayLevel[0.5]]}, "\n"], "NL" -> Row[{18.135019565243102`, 
          Style[18.266917000000458`, 
           GrayLevel[0.5]]}, "\n"]|>, <|"Ion" -> Row[{"H1", 
          Style["H1", 
           GrayLevel[0.5]]}, "\n"], "Tel" -> Row[{228.12460104026843`, 
          Style[228.12460104026843`, 
           GrayLevel[0.5]]}, "\n"], "Tion" -> Row[{3737.41551590916, 
          Style[3737.41551590916, 
           GrayLevel[0.5]]}, "\n"], "Vel" -> Row[{7.76332884196203, 
          Style[13.598192407915421`, 
           GrayLevel[0.5]]}, "\n"], "Vion" -> Row[{1.1042255394923521`, 
          Style[1.9425989154164889`, 
           GrayLevel[0.5]]}, "\n"], "Loc" -> Row[{8.090291331791029, 
          Style[8.169659804014326, 
           GrayLevel[0.5]]}, "\n"], "NL" -> Row[{0., 
          Style[0., 
           GrayLevel[0.5]]}, "\n"]|>, <|"Ion" -> Row[{"Pd18", 
          Style["Pd18", 
           GrayLevel[0.5]]}, "\n"], "Tel" -> Row[{228.12460104026843`, 
          Style[228.12460104026843`, 
           GrayLevel[0.5]]}, "\n"], "Tion" -> Row[{3737.41551590916, 
          Style[3737.41551590916, 
           GrayLevel[0.5]]}, "\n"], "Vel" -> Row[{7.76332884196203, 
          Style[13.598192407915421`, 
           GrayLevel[0.5]]}, "\n"], "Vion" -> Row[{1.1042255394923521`, 
          Style[1.9425989154164889`, 
           GrayLevel[0.5]]}, "\n"], "Loc" -> Row[{50.273549697949115`, 
          Style[51.593927279150186`, 
           GrayLevel[0.5]]}, "\n"], "NL" -> Row[{34.15625305895113, 
          Style[33.87906539367532, 
           GrayLevel[0.5]]}, "\n"]|>}, 
     TypeSystem`Vector[
      TypeSystem`Struct[{"Ion", "Tel", "Tion", "Vel", "Vion", "Loc", "NL"}, {
       TypeSystem`AnyType, TypeSystem`AnyType, TypeSystem`AnyType, 
        TypeSystem`AnyType, TypeSystem`AnyType, TypeSystem`AnyType, 
        TypeSystem`AnyType}], 6], <||>], 
    Dataset[{<|
      "Tel" -> 154440.35490426174`, "Tion" -> 35.490449389713476`, "Vel" -> 
       3.552902971181607*^6, "Vion" -> 502647.8824790767, "Loc" -> 
       2.0880178624092855`*^6, "NL" -> 1.121558260994093*^6, "Total" -> 
       7.419602822417714*^6|>, <|
      "Tel" -> 154440.35490426174`, "Tion" -> 35.490449389713476`, "Vel" -> 
       6.223239951867309*^6, "Vion" -> 884278.7966932474, "Loc" -> 
       2.1216565064795464`*^6, "NL" -> 1.122543683985546*^6, "Total" -> 
       1.05061947843793*^7|>, <|
      "Tel" -> 1., "Tion" -> 1., "Vel" -> 1.7515929937702788`, "Vion" -> 
       1.7592410661951938`, "Loc" -> 1.016110323898976, "NL" -> 
       1.0008786195293853`, "Total" -> 1.416005012105999|>}, 
     TypeSystem`Vector[
      TypeSystem`Struct[{"Tel", "Tion", "Vel", "Vion", "Loc", "NL", "Total"}, {
        TypeSystem`Atom[Real], 
        TypeSystem`Atom[Real], 
        TypeSystem`Atom[Real], 
        TypeSystem`Atom[Real], 
        TypeSystem`Atom[Real], 
        TypeSystem`Atom[Real], 
        TypeSystem`Atom[Real]}], 3], <||>]}],
  Editable->False]], "Print",
 CellChangeTimes->{3.962708745528565*^9, 3.962803641722584*^9, 
  3.962992105903504*^9},
 CellLabel->
  "During evaluation of \
In[46]:=",ExpressionUUID->"f0560ae5-5491-4021-abab-f4fb22d43176"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Compilation Cost:\"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "78424", ",", "9076", ",", "17054", ",", "1694", ",", "179030"}], "}"}],
      ",", "285278"}], "}"}]}],
  SequenceForm[
  "Compilation Cost:", {{78424, 9076, 17054, 1694, 179030}, 285278}],
  Editable->False]], "Print",
 CellChangeTimes->{3.962708745528565*^9, 3.962803641722584*^9, 
  3.962992105994369*^9},
 CellLabel->
  "During evaluation of \
In[46]:=",ExpressionUUID->"da8b7818-2edb-4db6-ba2a-5b9ddc3cd807"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Qubit Cost:\"\>", "\[InvisibleSpace]", "18753"}],
  SequenceForm["Qubit Cost:", 18753],
  Editable->False]], "Print",
 CellChangeTimes->{3.962708745528565*^9, 3.962803641722584*^9, 
  3.962992105994693*^9},
 CellLabel->
  "During evaluation of \
In[46]:=",ExpressionUUID->"e592a135-a962-4f2d-8a3d-7f84153b94f6"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Time Evolution Cost:\"\>", "\[InvisibleSpace]", 
   TagBox[
    TagBox[
     DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
      "InitialData" -> <|
        "exact" -> <|
          "query" -> 2 + 
            Ceiling[1.008428576328076*^7 $CellContext`t + 
              Log[2.9552401942122875`/$CellContext`\[Epsilon]]], 
           "compilation" -> ScientificForm[285278., 5], "total" -> 
           285278 (2 + 
             Ceiling[1.008428576328076*^7 $CellContext`t + 
               Log[2.9552401942122875`/$CellContext`\[Epsilon]]])|>, 
         "bound" -> <|
          "query" -> 2 + 
            Ceiling[1.42793991843147*^7 $CellContext`t + 
              Log[2.9552401942122875`/$CellContext`\[Epsilon]]], 
           "compilation" -> ScientificForm[285278., 5], "total" -> 
           285278 (2 + 
             Ceiling[1.42793991843147*^7 $CellContext`t + 
               Log[2.9552401942122875`/$CellContext`\[Epsilon]]])|>|>, 
       "AllowEmbedding" -> True, "InitialShape" -> 
       TypeSystem`PackageScope`HeaderShape[<|{All, 
            TypeSystem`PackageScope`KeyDummy[4]} -> 1, {All, "query"} -> 
          1, {All, "compilation"} -> 1, {All, "total"} -> 1|>, 
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`ColumnShape[
           TypeSystem`PackageScope`KeyValueShape[
            TypeSystem`PackageScope`AtomShape[56.00000000000001], 
            TypeSystem`PackageScope`Limited[
             
             TypeSystem`PackageScope`RowShape[<|
              "query" -> TypeSystem`PackageScope`UnknownShape[False], 
               "compilation" -> TypeSystem`PackageScope`UnknownShape[False], 
               "total" -> TypeSystem`PackageScope`UnknownShape[False]|>], 
             DirectedInfinity[1], 3, {All}]]], 2, 
          DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Assoc[
         TypeSystem`Atom[String], 
         TypeSystem`Struct[{"query", "compilation", "total"}, {
          TypeSystem`AnyType, TypeSystem`AnyType, TypeSystem`AnyType}], 2], 
       "Meta" -> <||>, "RowTarget" -> 20, "ColumnTarget" -> 10, "Shape" -> 
       TypeSystem`PackageScope`HeaderShape[<|{All, 
            TypeSystem`PackageScope`KeyDummy[4]} -> 1, {All, "query"} -> 
          1, {All, "compilation"} -> 1, {All, "total"} -> 1|>, 
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`ColumnShape[
           TypeSystem`PackageScope`KeyValueShape[
            TypeSystem`PackageScope`AtomShape[56.00000000000001], 
            TypeSystem`PackageScope`Limited[
             
             TypeSystem`PackageScope`RowShape[<|
              "query" -> TypeSystem`PackageScope`UnknownShape[False], 
               "compilation" -> TypeSystem`PackageScope`UnknownShape[False], 
               "total" -> TypeSystem`PackageScope`UnknownShape[False]|>], 
             DirectedInfinity[1], 3, {All}]]], 2, 
          DirectedInfinity[1], {}]], "Type" -> TypeSystem`Assoc[
         TypeSystem`Atom[String], 
         TypeSystem`Struct[{"query", "compilation", "total"}, {
          TypeSystem`AnyType, TypeSystem`AnyType, TypeSystem`AnyType}], 2], 
       "Path" -> {}, "DisplayedRowCount" -> 2, "DisplayedColumnCount" -> 3, 
       "DataRowCount" -> 2, "DataColumnCount" -> 3, "SortPaths" -> {}, 
       "SortDirections" -> {}, "HiddenItemsMap" -> Null, "UpdateType" -> 1|>, 
      TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
      TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
      TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
      TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
      TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
      DynamicModule[{
       TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
          Style[
           Grid[{{
              Item[
               Pane[
                Annotation[
                 Mouseover[
                  
                  Graphics[{}, ImageSize -> 6, BaselinePosition -> 
                   Scaled[-0.15]], 
                  Graphics[{
                    GrayLevel[0.6], 
                    
                    Polygon[{{2^Rational[-1, 2], -2^Rational[-1, 2]}, {
                    2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], -2^
                    Rational[-1, 2]}}]}, ImageSize -> 6, BaselinePosition -> 
                   Scaled[-0.15]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                  All, Keys}, "KeyDummy", True], "Mouse"], 
                ImageSize -> {{1, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
               GrayLevel[0.95], Alignment -> {Left, Baseline}], 
              Item[
               Pane[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["query", 
                    Style[
                    "query", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "query"}, 1]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                  All, "query"}, "ColumnHeader", True], "Mouse"], 
                ImageSize -> {{1, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
               GrayLevel[0.95], Alignment -> {Left, Baseline}], 
              Item[
               Pane[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["compilation", 
                    Style[
                    "compilation", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "compilation"}, 1]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                  All, "compilation"}, "ColumnHeader", True], "Mouse"], 
                ImageSize -> {{1, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
               GrayLevel[0.95], Alignment -> {Left, Baseline}], 
              Item[
               Pane[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["total", 
                    Style[
                    "total", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "total"}, 1]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                  All, "total"}, "ColumnHeader", True], "Mouse"], 
                ImageSize -> {{1, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
               GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
              Item[
               Pane[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["exact", 
                    Style[
                    "exact", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["exact"]}, 1]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["exact"]}, "RowHeader", False], "Mouse"], 
                ImageSize -> {{56.00000000000001, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
               GrayLevel[0.95], Alignment -> {Left, Baseline}], 
              Item[
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   RowBox[{"2", "+", 
                    RowBox[{"Ceiling", "[", 
                    RowBox[{
                    RowBox[{"1.0084285763280757`*^7", " ", "t"}], "+", 
                    RowBox[{"Log", "[", 
                    FractionBox["2.9552401942122875`", "\[Epsilon]"], "]"}]}],
                     "]"}]}], FontFamily -> Dynamic[
                    CurrentValue[{"StyleHints", "CodeFont"}]], 
                   ShowStringCharacters -> True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["exact"], 
                   Key["query"]}, "Item", False], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}], 
              Item[
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   TagBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"\"2.8528\"", "\[Times]", 
                    SuperscriptBox["10", "\"5\""]}], ShowStringCharacters -> 
                    False], 285278., AutoDelete -> True], 
                    ScientificForm[#, 5]& ], FontFamily -> Dynamic[
                    CurrentValue[{"StyleHints", "CodeFont"}]], 
                   ShowStringCharacters -> True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["exact"], 
                   Key["compilation"]}, "Item", False], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}], 
              Item[
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   RowBox[{"285278", " ", 
                    RowBox[{"(", 
                    RowBox[{"2", "+", 
                    RowBox[{"Ceiling", "[", 
                    RowBox[{
                    RowBox[{"1.0084285763280757`*^7", " ", "t"}], "+", 
                    RowBox[{"Log", "[", 
                    FractionBox["2.9552401942122875`", "\[Epsilon]"], "]"}]}],
                     "]"}]}], ")"}]}], FontFamily -> Dynamic[
                    CurrentValue[{"StyleHints", "CodeFont"}]], 
                   ShowStringCharacters -> True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["exact"], 
                   Key["total"]}, "Item", False], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}]}, {
              Item[
               Pane[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["bound", 
                    Style[
                    "bound", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["bound"]}, 1]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["bound"]}, "RowHeader", False], "Mouse"], 
                ImageSize -> {{56.00000000000001, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
               GrayLevel[0.95], Alignment -> {Left, Baseline}], 
              Item[
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   RowBox[{"2", "+", 
                    RowBox[{"Ceiling", "[", 
                    RowBox[{
                    RowBox[{"1.4279399184314722`*^7", " ", "t"}], "+", 
                    RowBox[{"Log", "[", 
                    FractionBox["2.9552401942122875`", "\[Epsilon]"], "]"}]}],
                     "]"}]}], FontFamily -> Dynamic[
                    CurrentValue[{"StyleHints", "CodeFont"}]], 
                   ShowStringCharacters -> True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["bound"], 
                   Key["query"]}, "Item", False], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}], 
              Item[
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   TagBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"\"2.8528\"", "\[Times]", 
                    SuperscriptBox["10", "\"5\""]}], ShowStringCharacters -> 
                    False], 285278., AutoDelete -> True], 
                    ScientificForm[#, 5]& ], FontFamily -> Dynamic[
                    CurrentValue[{"StyleHints", "CodeFont"}]], 
                   ShowStringCharacters -> True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["bound"], 
                   Key["compilation"]}, "Item", False], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}], 
              Item[
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   RowBox[{"285278", " ", 
                    RowBox[{"(", 
                    RowBox[{"2", "+", 
                    RowBox[{"Ceiling", "[", 
                    RowBox[{
                    RowBox[{"1.4279399184314722`*^7", " ", "t"}], "+", 
                    RowBox[{"Log", "[", 
                    FractionBox["2.9552401942122875`", "\[Epsilon]"], "]"}]}],
                     "]"}]}], ")"}]}], FontFamily -> Dynamic[
                    CurrentValue[{"StyleHints", "CodeFont"}]], 
                   ShowStringCharacters -> True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["bound"], 
                   Key["total"]}, "Item", False], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}]}}, 
            BaseStyle -> {
             ContextMenu -> 
              Dynamic[TypeSystem`NestedGrid`PackagePrivate`$\
contextMenuTrigger; 
                Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                  TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                  TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger, TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu,
                   True, TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger = 
                   TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                  TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                   Block[{TypeSystem`NestedGrid`PackagePrivate`$\
globalScrollPos = {TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                    
                    With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
              "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, 
            Dividers -> All, FrameStyle -> GrayLevel[0.7490196078431373], 
            Spacings -> {0, 0}, Alignment -> Left, 
            BaseStyle -> {
             FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
              Plain}], LineBreakWithin -> False, ContextMenu -> {}, 
           NumberMarks -> False, ShowAutoStyles -> False]], 
        TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
       Dynamic[
        TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
        TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
           Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
           
           Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
             TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
             TypeSystem`NestedGrid`PackagePrivate`datasetData[
              TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
               FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
               TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
               TypeSystem`NestedGrid`PackagePrivate`renderGrid[
               TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
               TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
              Not[
               FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
              TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
              TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
         TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
         TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
         TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
           FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
           TypeSystem`SparseGrid[
            TypeSystem`H["(data no longer present)"]], 
           TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
        TrackedSymbols :> {
         TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
          TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
       DynamicModuleValues :> {}], 
      TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
       TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
        TypeSystem`PackageScope`SubViewPathbar[
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
         TypeSystem`NestedGrid`PackagePrivate`updateState[
         TypeSystem`NestedGrid`PackagePrivate`$state$$, 
          TypeSystem`NestedGrid`PackagePrivate`$path$$, 
          TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
          TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
       TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
      TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
       Framed[
        Dynamic[
         Replace[
         TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
          TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
             TypeSystem`NestedGrid`PackagePrivate`localHold[
             TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
             Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
             TypeSystem`NestedGrid`PackagePrivate`localHold[
             TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
              Blank[]], 
             Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
              Blank[]], 
             Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
              Blank[]]] :> (
            Increment[
             TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
            TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
             TypeSystem`NestedGrid`PackagePrivate`path$; 
            TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
             TypeSystem`NestedGrid`PackagePrivate`pathType$; 
            TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
             TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
            TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
             TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
            TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
             TypeSystem`NestedGrid`PackagePrivate`path$, 
              TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
           Spacer[10], Blank[] :> Spacer[10]}], 
         TrackedSymbols :> {
          TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], 
        FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
        Top, ImageSize -> {Automatic, 15}], FontSize -> 1], 
      TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
      DynamicWrapperBox[
       DynamicBox[ToBoxes[
         Dataset`DatasetContent[
         2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
          "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], 
          "State" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], 
          "VPos" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], 
          "HPos" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], 
          "TopBar" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], 
          "BottomBar" -> 
          Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
          Hold[
            TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
        ImageSizeCache->{869., {51.3544921875, 56.6455078125}},
        TrackedSymbols:>{
         TypeSystem`NestedGrid`PackagePrivate`$state$$, 
          TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
       MouseAnnotation[],
       ImageSizeCache->{869., {51.3544921875, 56.6455078125}}],
      BaseStyle->{LineBreakWithin -> False},
      DynamicModuleValues:>{},
      Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
       CreateUUID[]),
      UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
     Deploy,
     DefaultBaseStyle->"Deploy"],
    Dataset`InterpretDataset[1],
    Editable->False,
    SelectWithContents->True,
    Selectable->False]}],
  SequenceForm["Time Evolution Cost:", 
   Dataset[<|
    "exact" -> <|
      "query" -> 2 + 
        Ceiling[1.008428576328076*^7 $CellContext`t + 
          Log[2.9552401942122875`/$CellContext`\[Epsilon]]], "compilation" -> 
       ScientificForm[285278., 5], "total" -> 
       285278 (2 + 
         Ceiling[1.008428576328076*^7 $CellContext`t + 
           Log[2.9552401942122875`/$CellContext`\[Epsilon]]])|>, 
     "bound" -> <|
      "query" -> 2 + 
        Ceiling[1.42793991843147*^7 $CellContext`t + 
          Log[2.9552401942122875`/$CellContext`\[Epsilon]]], "compilation" -> 
       ScientificForm[285278., 5], "total" -> 
       285278 (2 + 
         Ceiling[1.42793991843147*^7 $CellContext`t + 
           Log[2.9552401942122875`/$CellContext`\[Epsilon]]])|>|>, 
    TypeSystem`Assoc[
     TypeSystem`Atom[String], 
     TypeSystem`Struct[{"query", "compilation", "total"}, {
      TypeSystem`AnyType, TypeSystem`AnyType, TypeSystem`AnyType}], 2], <||>]],
  Editable->False]], "Print",
 CellChangeTimes->{3.962708745528565*^9, 3.962803641722584*^9, 
  3.96299210599643*^9},
 CellLabel->
  "During evaluation of \
In[46]:=",ExpressionUUID->"8dfc46d0-4313-4744-b893-869f8e012a61"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Instance Class 4: WGS", "Subsection",
 CellChangeTimes->{{3.946122056249242*^9, 3.94612205901908*^9}, {
   3.9461221675446*^9, 3.946122237927978*^9}, {3.9461223745665283`*^9, 
   3.94612256081662*^9}, {3.946124542921606*^9, 3.946124550073524*^9}, {
   3.946125969271934*^9, 3.946125995186101*^9}, 3.9461260258636*^9, {
   3.946126116624103*^9, 3.946126142297975*^9}, {3.946128690954178*^9, 
   3.946128764645544*^9}, {3.946166852196194*^9, 3.946167001273471*^9}, {
   3.946167036517096*^9, 3.946167086297594*^9}, {3.946490055591479*^9, 
   3.9464901287549057`*^9}, {3.946492902799545*^9, 3.946492926667141*^9}, {
   3.9464931480328207`*^9, 3.946493148492016*^9}, {3.94649320360962*^9, 
   3.946493328090327*^9}, 3.94649336892379*^9, {3.94649446982141*^9, 
   3.946494469878873*^9}, 3.946494576213092*^9, {3.946494995955134*^9, 
   3.946494996053494*^9}, {3.946495041072632*^9, 3.946495041173824*^9}, {
   3.9464951594898763`*^9, 3.946495181022932*^9}, {3.946497980355174*^9, 
   3.946497981240966*^9}, {3.94649815633422*^9, 3.946498163453021*^9}, {
   3.94649824824883*^9, 3.9464982663052588`*^9}, {3.946499433282394*^9, 
   3.946499564280864*^9}, {3.946501865983119*^9, 3.946501875250986*^9}, 
   3.946501992008497*^9, {3.946503639212558*^9, 3.946503639624648*^9}, {
   3.9465643107086763`*^9, 3.94656432284638*^9}, {3.946564529145935*^9, 
   3.946564559829351*^9}, 3.946564832060857*^9, {3.946565176755971*^9, 
   3.946565202241859*^9}, {3.946565313675543*^9, 3.946565370593363*^9}, {
   3.9467288407929296`*^9, 3.946728840877693*^9}, {3.947951264999652*^9, 
   3.947951333281031*^9}, {3.947952104631193*^9, 3.947952112701625*^9}, {
   3.962621368637846*^9, 3.962621369590816*^9}, {3.962621491030655*^9, 
   3.962621499458574*^9}, {3.962635550807879*^9, 3.96263558334223*^9}, {
   3.962635785507848*^9, 3.962635805811306*^9}, {3.96263639680842*^9, 
   3.9626364072158*^9}, {3.962636816395888*^9, 3.962636819558516*^9}, {
   3.9634058711684427`*^9, 3.963405871707508*^9}, 3.9634059161785727`*^9, {
   3.963406016014387*^9, 
   3.9634060169151983`*^9}},ExpressionUUID->"f3ccb02f-119d-4867-a0e0-\
94bc1adbb611"],

Cell["\<\
Repeat the same process as we have done for all the previous 3 instances, \
this time for WGS (with 2 sub instance of different sizes):\
\>", "Text",
 CellChangeTimes->{{3.963406473670855*^9, 
  3.963406495475307*^9}},ExpressionUUID->"dd0ab991-3b4a-4847-aa82-\
542faf77eac6"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"Construct", " ", "Cell", " ", "for", " ", "bilayer", " ", 
     RowBox[{"(", 
      RowBox[{"m", "=", "2"}], ")"}], " ", "Cu", 
     RowBox[{"(", "100", ")"}], " ", "with", " ", "m", " ", "x", " ", "n", 
     " ", "x", " ", "n", " ", "slab"}], ",", " ", 
    RowBox[{"1", " ", "CO"}], ",", " ", 
    RowBox[{"1", " ", "H2O"}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"WGSExtendedCellSpec", "[", 
      RowBox[{"n_", ",", "m_"}], "]"}], ":=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"3.615", "m"}], "+", "15"}], ",", 
       RowBox[{"3.615", " ", "n"}], ",", 
       RowBox[{"3.615", " ", "n"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"constructWGSInputPart", "[", 
     RowBox[{"n_", ",", "m_"}], "]"}], ":=", 
    RowBox[{"<|", 
     RowBox[{
      RowBox[{"\"\<Cu1\>\"", "->", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"4", "m"}], "+", "2"}], ")"}], " ", 
         SuperscriptBox["n", "2"]}], "-", "5"}]}], ",", 
      RowBox[{"\"\<Cu11\>\"", "->", "5"}], " ", ",", 
      RowBox[{"\"\<C4\>\"", "->", "1"}], ",", 
      RowBox[{"\"\<O6\>\"", "->", "2"}], ",", 
      RowBox[{"\"\<H1\>\"", "->", "2"}]}], "|>"}]}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"realSpaceCellSpecWGSClass", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"SimulationCell`convertAngstromtoAUCellSpec", "[", 
        RowBox[{"WGSExtendedCellSpec", "[", 
         RowBox[{"n", ",", "2"}], "]"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"n", ",", "1", ",", "6"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"InstanceCellWGSClass", "=", 
     RowBox[{"Map", "[", 
      RowBox[{
      "SimulationCell`aVecsRectCuboid", ",", "realSpaceCellSpecWGSClass"}], 
      "]"}]}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.962636960342442*^9, 3.962636998014714*^9}, {
   3.9626370350155087`*^9, 3.962637082568779*^9}, {3.962637139693523*^9, 
   3.9626371999923286`*^9}, 3.962644090407085*^9, {3.9627088320056267`*^9, 
   3.962708903700071*^9}, {3.962709181208604*^9, 3.962709215320004*^9}, {
   3.962709421687101*^9, 3.962709424912237*^9}, {3.962801975774332*^9, 
   3.962801991941812*^9}, {3.962804470660036*^9, 3.962804478009266*^9}},
 CellLabel->"In[49]:=",ExpressionUUID->"3bece15a-c588-453b-b5b7-348b123c4df6"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
     RowBox[{
     "Construct", " ", "Basis", " ", "and", " ", "Input", " ", "for", " ", 
      "bilayer", " ", "n"}], "=", "3"}], ",", 
    RowBox[{
    "5", " ", "as", " ", "representative", " ", "cases", " ", "of", " ", 
     "interest"}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"InstanceBasisWGSClass3", "=", 
     RowBox[{"EchoTiming", "@", 
      RowBox[{"BasisGeneration`constructBasis", "[", 
       RowBox[{
        RowBox[{"InstanceCellWGSClass", "[", 
         RowBox[{"[", "3", "]"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"40", ",", "450", ",", "1"}], "}"}], ",", "True", ",", 
        "True"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"InstanceBasisWGSClass5", "=", 
     RowBox[{"EchoTiming", "@", 
      RowBox[{"BasisGeneration`constructBasis", "[", 
       RowBox[{
        RowBox[{"InstanceCellWGSClass", "[", 
         RowBox[{"[", "5", "]"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"40", ",", "450", ",", "1"}], "}"}], ",", "True", ",", 
        "True"}], "]"}]}]}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.962636960342442*^9, 3.962636998014714*^9}, {
   3.9626370350155087`*^9, 3.962637082568779*^9}, {3.962637139693523*^9, 
   3.9626371999923286`*^9}, 3.962644090407085*^9, {3.9627088320056267`*^9, 
   3.962708903700071*^9}, {3.962709181208604*^9, 3.962709215320004*^9}, {
   3.962709421687101*^9, 3.962709424912237*^9}, {3.962801975774332*^9, 
   3.962801991941812*^9}, {3.962804470660036*^9, 3.962804478009266*^9}},
 CellLabel->"In[53]:=",ExpressionUUID->"29b4e932-8e2c-402f-a942-209e68c85039"],

Cell[CellGroupData[{

Cell[BoxData["81.935055`"], "EchoTiming",
 CellChangeTimes->{
  3.962992188005347*^9},ExpressionUUID->"24770085-31c8-4fd7-bc05-\
36ec83d27d67"],

Cell[BoxData["350.799499`"], "EchoTiming",
 CellChangeTimes->{
  3.962992538811705*^9},ExpressionUUID->"b9d2b32a-5244-49ae-881d-\
5e982a41f8cc"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"InstanceInputWGSClass3", "=", 
  RowBox[{"CostAnalysis`constructInput", "[", 
   RowBox[{
    RowBox[{"constructWGSInputPart", "[", 
     RowBox[{"3", ",", "2"}], "]"}], ",", "InstanceBasisWGSClass3"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"InstanceInputWGSClass5", "=", 
  RowBox[{"CostAnalysis`constructInput", "[", 
   RowBox[{
    RowBox[{"constructWGSInputPart", "[", 
     RowBox[{"5", ",", "2"}], "]"}], ",", "InstanceBasisWGSClass5"}], 
   "]"}]}]}], "Input",
 CellChangeTimes->{{3.962636960342442*^9, 3.962636998014714*^9}, {
   3.9626370350155087`*^9, 3.962637082568779*^9}, {3.962637139693523*^9, 
   3.9626371999923286`*^9}, 3.962644090407085*^9, {3.9627088320056267`*^9, 
   3.962708903700071*^9}, {3.962709181208604*^9, 3.962709215320004*^9}, {
   3.962709421687101*^9, 3.962709424912237*^9}, {3.962801975774332*^9, 
   3.962801991941812*^9}, {3.962804470660036*^9, 3.962804486177165*^9}},
 CellLabel->"In[55]:=",ExpressionUUID->"626a3b9e-1d17-4d2f-9e78-62315dd2108d"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"Cu1\"\>", "\[Rule]", "85"}], ",", 
     RowBox[{"\<\"Cu11\"\>", "\[Rule]", "5"}], ",", 
     RowBox[{"\<\"C4\"\>", "\[Rule]", "1"}], ",", 
     RowBox[{"\<\"O6\"\>", "\[Rule]", "2"}], ",", 
     RowBox[{"\<\"H1\"\>", "\[Rule]", "2"}]}], "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"Kmax\"\>", "\[Rule]", "16.41248169923622`"}], ",", 
     RowBox[{"\<\"Qmax\"\>", "\[Rule]", "32.82496339847244`"}], ",", 
     RowBox[{"\<\"Kbarmax\"\>", "\[Rule]", "66.97345726473735`"}], ",", 
     RowBox[{"\<\"Qbarmax\"\>", "\[Rule]", "133.9469145294747`"}], ",", 
     RowBox[{"\<\"Kbartruncmax\"\>", "\[Rule]", "2.6334022943872615`"}], ",", 
     
     RowBox[{"\<\"Qbartruncmax\"\>", "\[Rule]", "5.266804588774523`"}]}], 
    "\[RightAssociation]"}]}], "}"}]], "Output",
 CellChangeTimes->{3.962804487406332*^9, 3.9629925389229198`*^9},
 CellLabel->"Out[55]=",ExpressionUUID->"10ee4dca-6ea8-4d45-a878-adb1ee741e5e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"Cu1\"\>", "\[Rule]", "245"}], ",", 
     RowBox[{"\<\"Cu11\"\>", "\[Rule]", "5"}], ",", 
     RowBox[{"\<\"C4\"\>", "\[Rule]", "1"}], ",", 
     RowBox[{"\<\"O6\"\>", "\[Rule]", "2"}], ",", 
     RowBox[{"\<\"H1\"\>", "\[Rule]", "2"}]}], "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"Kmax\"\>", "\[Rule]", "18.902193865408197`"}], ",", 
     RowBox[{"\<\"Qmax\"\>", "\[Rule]", "37.804387730816394`"}], ",", 
     RowBox[{"\<\"Kbarmax\"\>", "\[Rule]", "76.50887993141414`"}], ",", 
     RowBox[{"\<\"Qbarmax\"\>", "\[Rule]", "153.01775986282829`"}], ",", 
     RowBox[{"\<\"Kbartruncmax\"\>", "\[Rule]", "2.5625096295024385`"}], ",", 
     
     RowBox[{"\<\"Qbartruncmax\"\>", "\[Rule]", "5.125019259004877`"}]}], 
    "\[RightAssociation]"}]}], "}"}]], "Output",
 CellChangeTimes->{3.962804487406332*^9, 3.962992538926398*^9},
 CellLabel->"Out[56]=",ExpressionUUID->"6f544bef-06d1-4305-bdda-89db3aa76f17"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"EchoTiming", "@", 
   RowBox[{"DumpSave", "[", 
    RowBox[{
     RowBox[{"FileNameJoin", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"NotebookDirectory", "[", "]"}], ",", 
        "\"\<InstanceBasisWGSClass3.mx\>\""}], "}"}], "]"}], ",", 
     "InstanceBasisWGSClass3"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"EchoTiming", "@", 
   RowBox[{"DumpSave", "[", 
    RowBox[{
     RowBox[{"FileNameJoin", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"NotebookDirectory", "[", "]"}], ",", 
        "\"\<InstanceBasisWGSClass5.mx\>\""}], "}"}], "]"}], ",", 
     "InstanceBasisWGSClass5"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"BasisGeneration`viewBasisInfo", "[", "InstanceBasisWGSClass3", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"BasisGeneration`viewBasisInfo", "[", "InstanceBasisWGSClass5", 
  "]"}]}], "Input",
 CellChangeTimes->{{3.962636960342442*^9, 3.962636998014714*^9}, {
   3.9626370350155087`*^9, 3.962637082568779*^9}, {3.962637139693523*^9, 
   3.9626371999923286`*^9}, 3.962644090407085*^9, {3.9627088320056267`*^9, 
   3.962708903700071*^9}, {3.962709181208604*^9, 3.962709215320004*^9}, {
   3.962709421687101*^9, 3.962709424912237*^9}, {3.962801975774332*^9, 
   3.962801991941812*^9}, {3.962804470660036*^9, 3.962804486177165*^9}},
 CellLabel->"In[57]:=",ExpressionUUID->"942fe187-7de1-4189-b56a-e63939f87e90"],

Cell[CellGroupData[{

Cell[BoxData["0.463399`"], "EchoTiming",
 CellChangeTimes->{
  3.962992539445856*^9},ExpressionUUID->"bb890ea1-2639-40a7-b235-\
6f1edcb7f2d5"],

Cell[BoxData["1.919353`"], "EchoTiming",
 CellChangeTimes->{
  3.962992541375395*^9},ExpressionUUID->"6d80846f-6770-4eb3-ad9f-\
37f609caa1af"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"nqubits\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"7", ",", "6", ",", "6"}], "}"}]}], ",", 
   RowBox[{"\<\"nqubits\[CapitalLambda]bar\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"9", ",", "8", ",", "8"}], "}"}]}], ",", 
   RowBox[{"\<\"pmax\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"63", ",", "31", ",", "31"}], "}"}]}], ",", 
   RowBox[{"\<\"pmax\[CapitalLambda]bar\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"255", ",", "127", ",", "127"}], "}"}]}], ",", 
   RowBox[{"\<\"pmax\[CapitalLambda]bartrunc\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"10", ",", "5", ",", "5"}], "}"}]}], ",", 
   RowBox[{"\<\"cutoff\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "9.421480442614465`", ",", "9.50276964356174`", ",", 
        "9.50276964356174`"}], "}"}], ",", "16.41248169923622`", ",", 
      "134.68477776388193`", ",", "44.382146865283424`"}], "}"}]}], ",", 
   RowBox[{"\<\"cutoff\[CapitalLambda]bar\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "38.13456369629664`", ",", "38.93070144297874`", ",", 
        "38.93070144297874`"}], "}"}], ",", "66.97345726473735`", ",", 
      "2242.7219889958`", ",", "727.1224741534528`"}], "}"}]}], ",", 
   RowBox[{"\<\"cutoff\[CapitalLambda]bartrunc\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "1.49547308612928`", ",", "1.5327047812196355`", ",", 
        "1.5327047812196355`"}], "}"}], ",", "2.6334022943872615`", ",", 
      "3.4674038220420464`", ",", "1.1182198756685164`"}], "}"}]}], ",", 
   RowBox[{"\<\"Kmax\"\>", "\[Rule]", "16.41248169923622`"}], ",", 
   RowBox[{"\<\"Qmax\"\>", "\[Rule]", "32.82496339847244`"}], ",", 
   RowBox[{"\<\"Kbarmax\"\>", "\[Rule]", "66.97345726473735`"}], ",", 
   RowBox[{"\<\"Qbarmax\"\>", "\[Rule]", "133.9469145294747`"}], ",", 
   RowBox[{"\<\"Kbartruncmax\"\>", "\[Rule]", "2.6334022943872615`"}], ",", 
   RowBox[{"\<\"Qbartruncmax\"\>", "\[Rule]", "5.266804588774523`"}], ",", 
   RowBox[{"\<\"maxCheck\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"True", ",", "True"}], "}"}]}], ",", 
   RowBox[{"\<\"aVecs\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"42.0147`", ",", "0.`", ",", "0.`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.`", ",", "20.49705`", ",", "0.`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.`", ",", "0.`", ",", "20.49705`"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"\<\"bVecs\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0.149547308612928`", ",", "0.`", ",", "0.`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.`", ",", "0.3065409562439271`", ",", "0.`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.`", ",", "0.`", ",", "0.3065409562439271`"}], "}"}]}], 
     "}"}]}], ",", 
   RowBox[{"\<\"basisSize\"\>", "\[Rule]", "504063"}], ",", 
   RowBox[{"\<\"basistruncSize\"\>", "\[Rule]", "2540"}]}], 
  "\[RightAssociation]"}]], "Print",
 CellChangeTimes->{3.962710248991893*^9, 3.9628041229910583`*^9, 
  3.962992541382328*^9},
 CellLabel->
  "During evaluation of \
In[57]:=",ExpressionUUID->"17783df3-473a-4bb6-811e-8add09634440"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"nqubits\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"7", ",", "7", ",", "7"}], "}"}]}], ",", 
   RowBox[{"\<\"nqubits\[CapitalLambda]bar\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"9", ",", "9", ",", "9"}], "}"}]}], ",", 
   RowBox[{"\<\"pmax\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"63", ",", "63", ",", "63"}], "}"}]}], ",", 
   RowBox[{"\<\"pmax\[CapitalLambda]bar\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"255", ",", "255", ",", "255"}], "}"}]}], ",", 
   RowBox[{"\<\"pmax\[CapitalLambda]bartrunc\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"10", ",", "8", ",", "8"}], "}"}]}], ",", 
   RowBox[{"\<\"cutoff\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "9.421480442614465`", ",", "11.587248146020444`", ",", 
        "11.587248146020444`"}], "}"}], ",", "18.902193865408197`", ",", 
      "178.64646646273764`", ",", "44.382146865283424`"}], "}"}]}], ",", 
   RowBox[{"\<\"cutoff\[CapitalLambda]bar\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "38.13456369629664`", ",", "46.90076630532085`", ",", 
        "46.90076630532085`"}], "}"}], ",", "76.50887993141414`", ",", 
      "2926.804354179773`", ",", "727.1224741534528`"}], "}"}]}], ",", 
   RowBox[{"\<\"cutoff\[CapitalLambda]bartrunc\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "1.49547308612928`", ",", "1.47139658997085`", ",", 
        "1.47139658997085`"}], "}"}], ",", "2.5625096295024385`", ",", 
      "3.283227800646362`", ",", "1.082503962488923`"}], "}"}]}], ",", 
   RowBox[{"\<\"Kmax\"\>", "\[Rule]", "18.902193865408197`"}], ",", 
   RowBox[{"\<\"Qmax\"\>", "\[Rule]", "37.804387730816394`"}], ",", 
   RowBox[{"\<\"Kbarmax\"\>", "\[Rule]", "76.50887993141414`"}], ",", 
   RowBox[{"\<\"Qbarmax\"\>", "\[Rule]", "153.01775986282829`"}], ",", 
   RowBox[{"\<\"Kbartruncmax\"\>", "\[Rule]", "2.5625096295024385`"}], ",", 
   RowBox[{"\<\"Qbartruncmax\"\>", "\[Rule]", "5.125019259004877`"}], ",", 
   RowBox[{"\<\"maxCheck\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"True", ",", "True"}], "}"}]}], ",", 
   RowBox[{"\<\"aVecs\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"42.0147`", ",", "0.`", ",", "0.`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.`", ",", "34.161750000000005`", ",", "0.`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.`", ",", "0.`", ",", "34.161750000000005`"}], "}"}]}], 
     "}"}]}], ",", 
   RowBox[{"\<\"bVecs\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0.149547308612928`", ",", "0.`", ",", "0.`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.`", ",", "0.18392457374635626`", ",", "0.`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.`", ",", "0.`", ",", "0.18392457374635626`"}], "}"}]}], 
     "}"}]}], ",", 
   RowBox[{"\<\"basisSize\"\>", "\[Rule]", "2048383"}], ",", 
   RowBox[{"\<\"basistruncSize\"\>", "\[Rule]", "6068"}]}], 
  "\[RightAssociation]"}]], "Print",
 CellChangeTimes->{3.962710248991893*^9, 3.9628041229910583`*^9, 
  3.9629925413853292`*^9},
 CellLabel->
  "During evaluation of \
In[57]:=",ExpressionUUID->"8827c839-84c4-4371-b57e-a6c3cf6f0ce4"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Run", " ", "QRE"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"InstanceWGSClass3Result", "=", 
     RowBox[{"EchoTiming", "@", 
      RowBox[{"CostAnalysis`fullBlockEncodingCost", "[", 
       RowBox[{
       "InstanceInputWGSClass3", ",", "InstanceBasisWGSClass3", ",", "True"}],
        "]"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"InstanceWGSClass5Result", "=", 
     RowBox[{"EchoTiming", "@", 
      RowBox[{"CostAnalysis`fullBlockEncodingCost", "[", 
       RowBox[{
       "InstanceInputWGSClass5", ",", "InstanceBasisWGSClass5", ",", "True"}],
        "]"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"EchoTiming", "@", 
     RowBox[{"DumpSave", "[", 
      RowBox[{
       RowBox[{"FileNameJoin", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"NotebookDirectory", "[", "]"}], ",", 
          "\"\<InstanceWGSClass3Result.mx\>\""}], "}"}], "]"}], ",", 
       "InstanceWGSClass3Result"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"EchoTiming", "@", 
     RowBox[{"DumpSave", "[", 
      RowBox[{
       RowBox[{"FileNameJoin", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"NotebookDirectory", "[", "]"}], ",", 
          "\"\<InstanceWGSClass5Result.mx\>\""}], "}"}], "]"}], ",", 
       "InstanceWGSClass5Result"}], "]"}]}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.962636960342442*^9, 3.962636998014714*^9}, {
   3.9626370350155087`*^9, 3.962637082568779*^9}, {3.962637139693523*^9, 
   3.9626371999923286`*^9}, {3.962644090407085*^9, 3.962644094825919*^9}, {
   3.962709318408414*^9, 3.9627093460640097`*^9}, {3.96270960149127*^9, 
   3.962709708852603*^9}, 3.962804389046002*^9},
 CellLabel->"In[61]:=",ExpressionUUID->"6ad04059-46b2-4549-a059-1ce589e135b9"],

Cell[CellGroupData[{

Cell[BoxData["112.322563`"], "EchoTiming",
 CellChangeTimes->{
  3.9629926537608023`*^9},ExpressionUUID->"387efab2-12b8-4e40-a89b-\
e1f5279c7bdf"],

Cell[BoxData["665.592265`"], "EchoTiming",
 CellChangeTimes->{
  3.962993319361403*^9},ExpressionUUID->"58a4a433-4de3-4f2b-a2b0-\
418720283fc7"],

Cell[BoxData["0.009102`"], "EchoTiming",
 CellChangeTimes->{
  3.962993319425909*^9},ExpressionUUID->"0bb59438-94f1-457b-80bd-\
aa20217d29d3"],

Cell[BoxData["0.005511`"], "EchoTiming",
 CellChangeTimes->{
  3.962993319467656*^9},ExpressionUUID->"e79f8d32-fa65-49de-827b-\
998e3756794b"]
}, Open  ]]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"View", " ", "Results"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"viewAllResults", "[", 
   RowBox[{"InstanceWGSClass3Result", ",", "t", ",", "\[Epsilon]"}], "]"}], 
  " "}]], "Input",
 CellChangeTimes->{{3.962636960342442*^9, 3.962636998014714*^9}, {
  3.9626370350155087`*^9, 3.962637082568779*^9}, {3.962637139693523*^9, 
  3.9626371999923286`*^9}, {3.962644090407085*^9, 3.962644094825919*^9}, {
  3.962709318408414*^9, 3.9627093460640097`*^9}, {3.96270960149127*^9, 
  3.962709725716341*^9}, {3.963406410811626*^9, 
  3.963406412434537*^9}},ExpressionUUID->"74c228a6-1b1f-4980-9980-\
1682712c49fb"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"viewAllResults", "[", 
   RowBox[{"InstanceWGSClass5Result", ",", "t", ",", "\[Epsilon]"}], "]"}], 
  " "}]], "Input",ExpressionUUID->"d2d966a0-78cf-41bf-928d-36fa4f5d9c86"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Particle Count:\"\>", "\[InvisibleSpace]", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"\[Eta]el\"\>", "\[Rule]", "158"}], ",", 
     RowBox[{"\<\"\[Eta]ion\"\>", "\[Rule]", "95"}], ",", 
     RowBox[{"\<\"\[Eta]\"\>", "\[Rule]", "253"}]}], "\[RightAssociation]"}]}],
  SequenceForm[
  "Particle Count:", <|
   "\[Eta]el" -> 158, "\[Eta]ion" -> 95, "\[Eta]" -> 253|>],
  Editable->False]], "Print",
 CellChangeTimes->{3.962712383863021*^9, 3.962993319568212*^9},
 CellLabel->
  "During evaluation of \
In[65]:=",ExpressionUUID->"41f06ca2-f69a-4de0-a3b4-9fc1718dc38e"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Rescaling Factors:\"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
     TagBox[
      TagBox[
       DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
        "InitialData" -> {<|"Ion" -> Row[{"Cu1", 
               Style["Cu1", 
                GrayLevel[0.5]]}, "\n"], "Tel" -> Row[{134.68477776388193`, 
               Style[134.68477776388193`, 
                GrayLevel[0.5]]}, "\n"], "Tion" -> Row[{2242.7219889958, 
               Style[2242.7219889958, 
                GrayLevel[0.5]]}, "\n"], "Vel" -> Row[{7.374269125438556, 
               Style[10.448510363354858`, 
                GrayLevel[0.5]]}, "\n"], "Vion" -> Row[{1.1885570603311084`, 
               Style[1.676475969205085, 
                GrayLevel[0.5]]}, "\n"], "Loc" -> Row[{1.290223797568449, 
               Style[1.3756630358670094`, 
                GrayLevel[0.5]]}, "\n"], "NL" -> Row[{2.932682523638492, 
               Style[2.9220853552974404`, 
                GrayLevel[0.5]]}, "\n"]|>, <|"Ion" -> Row[{"Cu11", 
               Style["Cu11", 
                GrayLevel[0.5]]}, "\n"], "Tel" -> Row[{134.68477776388193`, 
               Style[134.68477776388193`, 
                GrayLevel[0.5]]}, "\n"], "Tion" -> Row[{2242.7219889958, 
               Style[2242.7219889958, 
                GrayLevel[0.5]]}, "\n"], "Vel" -> Row[{7.374269125438556, 
               Style[10.448510363354858`, 
                GrayLevel[0.5]]}, "\n"], "Vion" -> Row[{1.1885570603311084`, 
               Style[1.676475969205085, 
                GrayLevel[0.5]]}, "\n"], "Loc" -> Row[{15.619819310875021`, 
               Style[16.559868243078338`, 
                GrayLevel[0.5]]}, "\n"], "NL" -> Row[{73.32290931180009, 
               Style[74.28935110495614, 
                GrayLevel[0.5]]}, "\n"]|>, <|"Ion" -> Row[{"C4", 
               Style["C4", 
                GrayLevel[0.5]]}, "\n"], "Tel" -> Row[{134.68477776388193`, 
               Style[134.68477776388193`, 
                GrayLevel[0.5]]}, "\n"], "Tion" -> Row[{2242.7219889958, 
               Style[2242.7219889958, 
                GrayLevel[0.5]]}, "\n"], "Vel" -> Row[{7.374269125438556, 
               Style[10.448510363354858`, 
                GrayLevel[0.5]]}, "\n"], "Vion" -> Row[{1.1885570603311084`, 
               Style[1.676475969205085, 
                GrayLevel[0.5]]}, "\n"], "Loc" -> Row[{17.320790835624127`, 
               Style[17.66303638202409, 
                GrayLevel[0.5]]}, "\n"], "NL" -> Row[{9.521152647017821, 
               Style[9.52284200000024, 
                GrayLevel[0.5]]}, "\n"]|>, <|"Ion" -> Row[{"O6", 
               Style["O6", 
                GrayLevel[0.5]]}, "\n"], "Tel" -> Row[{134.68477776388193`, 
               Style[134.68477776388193`, 
                GrayLevel[0.5]]}, "\n"], "Tion" -> Row[{2242.7219889958, 
               Style[2242.7219889958, 
                GrayLevel[0.5]]}, "\n"], "Vel" -> Row[{7.374269125438556, 
               Style[10.448510363354858`, 
                GrayLevel[0.5]]}, "\n"], "Vion" -> Row[{1.1885570603311084`, 
               Style[1.676475969205085, 
                GrayLevel[0.5]]}, "\n"], "Loc" -> Row[{35.39966365271577, 
               Style[35.913522230728375`, 
                GrayLevel[0.5]]}, "\n"], "NL" -> Row[{18.12452007728305, 
               Style[18.266917000000458`, 
                GrayLevel[0.5]]}, "\n"]|>, <|"Ion" -> Row[{"H1", 
               Style["H1", 
                GrayLevel[0.5]]}, "\n"], "Tel" -> Row[{134.68477776388193`, 
               Style[134.68477776388193`, 
                GrayLevel[0.5]]}, "\n"], "Tion" -> Row[{2242.7219889958, 
               Style[2242.7219889958, 
                GrayLevel[0.5]]}, "\n"], "Vel" -> Row[{7.374269125438556, 
               Style[10.448510363354858`, 
                GrayLevel[0.5]]}, "\n"], "Vion" -> Row[{1.1885570603311084`, 
               Style[1.676475969205085, 
                GrayLevel[0.5]]}, "\n"], "Loc" -> Row[{8.077732006093115, 
               Style[8.169659804014326, 
                GrayLevel[0.5]]}, "\n"], "NL" -> Row[{0., 
               Style[0., 
                GrayLevel[0.5]]}, "\n"]|>}, "AllowEmbedding" -> True, 
         "InitialShape" -> 
         TypeSystem`PackageScope`HeaderShape[<|{All, "Ion"} -> 
            1, {All, "Tel"} -> 1, {All, "Tion"} -> 1, {All, "Vel"} -> 
            1, {All, "Vion"} -> 1, {All, "Loc"} -> 1, {All, "NL"} -> 1|>, 
           TypeSystem`PackageScope`Limited[
            TypeSystem`PackageScope`ColumnShape[
             TypeSystem`PackageScope`Limited[
              
              TypeSystem`PackageScope`RowShape[<|
               "Ion" -> TypeSystem`PackageScope`UnknownShape[False], "Tel" -> 
                TypeSystem`PackageScope`UnknownShape[False], "Tion" -> 
                TypeSystem`PackageScope`UnknownShape[False], "Vel" -> 
                TypeSystem`PackageScope`UnknownShape[False], "Vion" -> 
                TypeSystem`PackageScope`UnknownShape[False], "Loc" -> 
                TypeSystem`PackageScope`UnknownShape[False], "NL" -> 
                TypeSystem`PackageScope`UnknownShape[False]|>], 
              DirectedInfinity[1], 7, {All}]], 5, 
            DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Vector[
           
           TypeSystem`Struct[{
            "Ion", "Tel", "Tion", "Vel", "Vion", "Loc", "NL"}, {
            TypeSystem`AnyType, TypeSystem`AnyType, TypeSystem`AnyType, 
             TypeSystem`AnyType, TypeSystem`AnyType, TypeSystem`AnyType, 
             TypeSystem`AnyType}], 5], "Meta" -> <||>, "RowTarget" -> 20, 
         "ColumnTarget" -> 10, "Shape" -> 
         TypeSystem`PackageScope`HeaderShape[<|{All, "Ion"} -> 
            1, {All, "Tel"} -> 1, {All, "Tion"} -> 1, {All, "Vel"} -> 
            1, {All, "Vion"} -> 1, {All, "Loc"} -> 1, {All, "NL"} -> 1|>, 
           TypeSystem`PackageScope`Limited[
            TypeSystem`PackageScope`ColumnShape[
             TypeSystem`PackageScope`Limited[
              
              TypeSystem`PackageScope`RowShape[<|
               "Ion" -> TypeSystem`PackageScope`UnknownShape[False], "Tel" -> 
                TypeSystem`PackageScope`UnknownShape[False], "Tion" -> 
                TypeSystem`PackageScope`UnknownShape[False], "Vel" -> 
                TypeSystem`PackageScope`UnknownShape[False], "Vion" -> 
                TypeSystem`PackageScope`UnknownShape[False], "Loc" -> 
                TypeSystem`PackageScope`UnknownShape[False], "NL" -> 
                TypeSystem`PackageScope`UnknownShape[False]|>], 
              DirectedInfinity[1], 7, {All}]], 5, 
            DirectedInfinity[1], {}]], "Type" -> TypeSystem`Vector[
           
           TypeSystem`Struct[{
            "Ion", "Tel", "Tion", "Vel", "Vion", "Loc", "NL"}, {
            TypeSystem`AnyType, TypeSystem`AnyType, TypeSystem`AnyType, 
             TypeSystem`AnyType, TypeSystem`AnyType, TypeSystem`AnyType, 
             TypeSystem`AnyType}], 5], "Path" -> {}, "DisplayedRowCount" -> 5,
          "DisplayedColumnCount" -> 7, "DataRowCount" -> 5, "DataColumnCount" -> 
         7, "SortPaths" -> {}, "SortDirections" -> {}, "HiddenItemsMap" -> 
         Null, "UpdateType" -> 1|>, 
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
        DynamicModule[{
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
            Style[
             Grid[{{
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["Ion", 
                    Style[
                    "Ion", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "Ion"}, 1]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "Ion"}, "ColumnHeader", True], "Mouse"], 
                  ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["Tel", 
                    Style[
                    "Tel", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "Tel"}, 1]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "Tel"}, "ColumnHeader", True], "Mouse"], 
                  ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["Tion", 
                    Style[
                    "Tion", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "Tion"}, 1]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "Tion"}, "ColumnHeader", True], "Mouse"], 
                  ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["Vel", 
                    Style[
                    "Vel", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "Vel"}, 1]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "Vel"}, "ColumnHeader", True], "Mouse"], 
                  ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["Vion", 
                    Style[
                    "Vion", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "Vion"}, 1]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "Vion"}, "ColumnHeader", True], "Mouse"], 
                  ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["Loc", 
                    Style[
                    "Loc", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "Loc"}, 1]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "Loc"}, "ColumnHeader", True], "Mouse"], 
                  ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["NL", 
                    Style[
                    "NL", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "NL"}, 1]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "NL"}, "ColumnHeader", True], "Mouse"], 
                  ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
                Item[
                 Pane[
                  Annotation[
                   Row[{"Cu1", 
                    Style["Cu1", 
                    GrayLevel[0.5]]}, "\n"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                    Key["Ion"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   Row[{134.68477776388193`, 
                    Style[134.68477776388193`, 
                    GrayLevel[0.5]]}, "\n"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                    Key["Tel"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   Row[{2242.7219889958, 
                    Style[2242.7219889958, 
                    GrayLevel[0.5]]}, "\n"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                    Key["Tion"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   Row[{7.374269125438556, 
                    Style[10.448510363354858`, 
                    GrayLevel[0.5]]}, "\n"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                    Key["Vel"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   Row[{1.1885570603311084`, 
                    Style[1.676475969205085, 
                    GrayLevel[0.5]]}, "\n"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                    Key["Vion"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   Row[{1.290223797568449, 
                    Style[1.3756630358670094`, 
                    GrayLevel[0.5]]}, "\n"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                    Key["Loc"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   Row[{2.932682523638492, 
                    Style[2.9220853552974404`, 
                    GrayLevel[0.5]]}, "\n"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                    Key["NL"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   Row[{"Cu11", 
                    Style["Cu11", 
                    GrayLevel[0.5]]}, "\n"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                    Key["Ion"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   Row[{134.68477776388193`, 
                    Style[134.68477776388193`, 
                    GrayLevel[0.5]]}, "\n"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                    Key["Tel"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   Row[{2242.7219889958, 
                    Style[2242.7219889958, 
                    GrayLevel[0.5]]}, "\n"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                    Key["Tion"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   Row[{7.374269125438556, 
                    Style[10.448510363354858`, 
                    GrayLevel[0.5]]}, "\n"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                    Key["Vel"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   Row[{1.1885570603311084`, 
                    Style[1.676475969205085, 
                    GrayLevel[0.5]]}, "\n"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                    Key["Vion"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   Row[{15.619819310875021`, 
                    Style[16.559868243078338`, 
                    GrayLevel[0.5]]}, "\n"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                    Key["Loc"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   Row[{73.32290931180009, 
                    Style[74.28935110495614, 
                    GrayLevel[0.5]]}, "\n"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                    Key["NL"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   Row[{"C4", 
                    Style["C4", 
                    GrayLevel[0.5]]}, "\n"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                    Key["Ion"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   Row[{134.68477776388193`, 
                    Style[134.68477776388193`, 
                    GrayLevel[0.5]]}, "\n"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                    Key["Tel"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   Row[{2242.7219889958, 
                    Style[2242.7219889958, 
                    GrayLevel[0.5]]}, "\n"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                    Key["Tion"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   Row[{7.374269125438556, 
                    Style[10.448510363354858`, 
                    GrayLevel[0.5]]}, "\n"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                    Key["Vel"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   Row[{1.1885570603311084`, 
                    Style[1.676475969205085, 
                    GrayLevel[0.5]]}, "\n"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                    Key["Vion"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   Row[{17.320790835624127`, 
                    Style[17.66303638202409, 
                    GrayLevel[0.5]]}, "\n"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                    Key["Loc"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   Row[{9.521152647017821, 
                    Style[9.52284200000024, 
                    GrayLevel[0.5]]}, "\n"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                    Key["NL"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   Row[{"O6", 
                    Style["O6", 
                    GrayLevel[0.5]]}, "\n"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                    Key["Ion"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   Row[{134.68477776388193`, 
                    Style[134.68477776388193`, 
                    GrayLevel[0.5]]}, "\n"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                    Key["Tel"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   Row[{2242.7219889958, 
                    Style[2242.7219889958, 
                    GrayLevel[0.5]]}, "\n"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                    Key["Tion"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   Row[{7.374269125438556, 
                    Style[10.448510363354858`, 
                    GrayLevel[0.5]]}, "\n"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                    Key["Vel"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   Row[{1.1885570603311084`, 
                    Style[1.676475969205085, 
                    GrayLevel[0.5]]}, "\n"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                    Key["Vion"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   Row[{35.39966365271577, 
                    Style[35.913522230728375`, 
                    GrayLevel[0.5]]}, "\n"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                    Key["Loc"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   Row[{18.12452007728305, 
                    Style[18.266917000000458`, 
                    GrayLevel[0.5]]}, "\n"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                    Key["NL"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   Row[{"H1", 
                    Style["H1", 
                    GrayLevel[0.5]]}, "\n"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                    Key["Ion"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   Row[{134.68477776388193`, 
                    Style[134.68477776388193`, 
                    GrayLevel[0.5]]}, "\n"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                    Key["Tel"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   Row[{2242.7219889958, 
                    Style[2242.7219889958, 
                    GrayLevel[0.5]]}, "\n"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                    Key["Tion"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   Row[{7.374269125438556, 
                    Style[10.448510363354858`, 
                    GrayLevel[0.5]]}, "\n"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                    Key["Vel"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   Row[{1.1885570603311084`, 
                    Style[1.676475969205085, 
                    GrayLevel[0.5]]}, "\n"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                    Key["Vion"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   Row[{8.077732006093115, 
                    Style[8.169659804014326, 
                    GrayLevel[0.5]]}, "\n"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                    Key["Loc"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   Row[{0., 
                    Style[0., 
                    GrayLevel[0.5]]}, "\n"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                    Key["NL"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}}, 
              BaseStyle -> {
               ContextMenu -> 
                Dynamic[
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                  Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger, TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu,
                     True, TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger = 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                    TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                    Block[{TypeSystem`NestedGrid`PackagePrivate`$\
globalScrollPos = {TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                    
                    With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
                "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, 
              Dividers -> All, FrameStyle -> GrayLevel[0.7490196078431373], 
              Spacings -> {0, 0}, Alignment -> Left, 
              BaseStyle -> {
               FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
                Plain}], LineBreakWithin -> False, ContextMenu -> {}, 
             NumberMarks -> False, ShowAutoStyles -> False]], 
          TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
         Dynamic[
          TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
          TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
             Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
             
             Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
               TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
               TypeSystem`NestedGrid`PackagePrivate`datasetData[
                TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
              TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
                 FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
                 TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                 TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                 TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
                Not[
                 FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
                TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
                TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
           TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
           TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
           TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
             TypeSystem`SparseGrid[
              TypeSystem`H["(data no longer present)"]], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
          TrackedSymbols :> {
           TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
         DynamicModuleValues :> {}], 
        TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
         TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
          TypeSystem`PackageScope`SubViewPathbar[
          TypeSystem`NestedGrid`PackagePrivate`$path$$, 
           TypeSystem`NestedGrid`PackagePrivate`updateState[
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
            TypeSystem`NestedGrid`PackagePrivate`$path$$, 
            TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
            TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
         TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
        TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
         Framed[
          Dynamic[
           Replace[
           TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
            TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               TypeSystem`NestedGrid`PackagePrivate`localHold[
               TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
               Blank[]] -> "", 
             TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               TypeSystem`NestedGrid`PackagePrivate`localHold[
               TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
               Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
                Blank[]], 
               Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
                Blank[]], 
               Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                Blank[]]] :> (
              Increment[
               TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
              TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
               TypeSystem`NestedGrid`PackagePrivate`path$; 
              TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
               TypeSystem`NestedGrid`PackagePrivate`pathType$; 
              TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
               TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
              TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
               TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
              TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
               TypeSystem`NestedGrid`PackagePrivate`path$, 
                TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
             Spacer[10], Blank[] :> Spacer[10]}], 
           TrackedSymbols :> {
            TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], 
          FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
          Top, ImageSize -> {Automatic, 15}], FontSize -> 1], 
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
        DynamicWrapperBox[
         DynamicBox[ToBoxes[
           Dataset`DatasetContent[
           2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
            "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], 
            "State" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], 
            "VPos" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], 
            "HPos" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], 
            "TopBar" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], 
            "BottomBar" -> 
            Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], 
            "OutputID" -> Hold[
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], 
           StandardForm],
          ImageSizeCache->{478., {142.8544921875, 148.1455078125}},
          
          TrackedSymbols:>{
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
            TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
         TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
         MouseAnnotation[],
         ImageSizeCache->{478., {142.8544921875, 148.1455078125}}],
        BaseStyle->{LineBreakWithin -> False},
        DynamicModuleValues:>{},
        Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
         CreateUUID[]),
        UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
       
       Deploy,
       DefaultBaseStyle->"Deploy"],
      Dataset`InterpretDataset[1],
      Editable->False,
      SelectWithContents->True,
      Selectable->False], ",", 
     TagBox[
      TagBox[
       DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
        "InitialData" -> {<|
           "Tel" -> 21280.194886693345`, "Tion" -> 4.441332957526168, "Vel" -> 
            182926.11992562882`, "Vion" -> 28744.063947047525`, "Loc" -> 
            46142.90483714776, "NL" -> 104542.71511143728`, "Total" -> 
            383640.44004091225`|>, <|
           "Tel" -> 21280.194886693345`, "Tion" -> 4.441332957526168, "Vel" -> 
            259185.74807338062`, "Vion" -> 40543.89483925578, "Loc" -> 
            48278.495755064316`, "NL" -> 105209.14850256013`, "Total" -> 
            474501.9233899117|>, <|
           "Tel" -> 1., "Tion" -> 1., "Vel" -> 1.4168875837893256`, "Vion" -> 
            1.4105136599315242`, "Loc" -> 1.046282108277615, "NL" -> 
            1.0063747473022149`, "Total" -> 1.2368402125159428`|>}, 
         "AllowEmbedding" -> True, "InitialShape" -> 
         TypeSystem`PackageScope`HeaderShape[<|{All, "Tel"} -> 
            1, {All, "Tion"} -> 1, {All, "Vel"} -> 1, {All, "Vion"} -> 
            1, {All, "Loc"} -> 1, {All, "NL"} -> 1, {All, "Total"} -> 1|>, 
           TypeSystem`PackageScope`Limited[
            TypeSystem`PackageScope`ColumnShape[
             TypeSystem`PackageScope`Limited[
              
              TypeSystem`PackageScope`RowShape[<|
               "Tel" -> TypeSystem`PackageScope`AtomShape[60], "Tion" -> 
                TypeSystem`PackageScope`AtomShape[60], "Vel" -> 
                TypeSystem`PackageScope`AtomShape[60], "Vion" -> 
                TypeSystem`PackageScope`AtomShape[60], "Loc" -> 
                TypeSystem`PackageScope`AtomShape[60], "NL" -> 
                TypeSystem`PackageScope`AtomShape[60], "Total" -> 
                TypeSystem`PackageScope`AtomShape[60]|>], 
              DirectedInfinity[1], 7, {All}]], 3, 
            DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Vector[
           
           TypeSystem`Struct[{
            "Tel", "Tion", "Vel", "Vion", "Loc", "NL", "Total"}, {
             TypeSystem`Atom[Real], 
             TypeSystem`Atom[Real], 
             TypeSystem`Atom[Real], 
             TypeSystem`Atom[Real], 
             TypeSystem`Atom[Real], 
             TypeSystem`Atom[Real], 
             TypeSystem`Atom[Real]}], 3], "Meta" -> <||>, "RowTarget" -> 20, 
         "ColumnTarget" -> 10, "Shape" -> 
         TypeSystem`PackageScope`HeaderShape[<|{All, "Tel"} -> 
            1, {All, "Tion"} -> 1, {All, "Vel"} -> 1, {All, "Vion"} -> 
            1, {All, "Loc"} -> 1, {All, "NL"} -> 1, {All, "Total"} -> 1|>, 
           TypeSystem`PackageScope`Limited[
            TypeSystem`PackageScope`ColumnShape[
             TypeSystem`PackageScope`Limited[
              
              TypeSystem`PackageScope`RowShape[<|
               "Tel" -> TypeSystem`PackageScope`AtomShape[60], "Tion" -> 
                TypeSystem`PackageScope`AtomShape[60], "Vel" -> 
                TypeSystem`PackageScope`AtomShape[60], "Vion" -> 
                TypeSystem`PackageScope`AtomShape[60], "Loc" -> 
                TypeSystem`PackageScope`AtomShape[60], "NL" -> 
                TypeSystem`PackageScope`AtomShape[60], "Total" -> 
                TypeSystem`PackageScope`AtomShape[60]|>], 
              DirectedInfinity[1], 7, {All}]], 3, 
            DirectedInfinity[1], {}]], "Type" -> TypeSystem`Vector[
           
           TypeSystem`Struct[{
            "Tel", "Tion", "Vel", "Vion", "Loc", "NL", "Total"}, {
             TypeSystem`Atom[Real], 
             TypeSystem`Atom[Real], 
             TypeSystem`Atom[Real], 
             TypeSystem`Atom[Real], 
             TypeSystem`Atom[Real], 
             TypeSystem`Atom[Real], 
             TypeSystem`Atom[Real]}], 3], "Path" -> {}, "DisplayedRowCount" -> 
         3, "DisplayedColumnCount" -> 7, "DataRowCount" -> 3, 
         "DataColumnCount" -> 7, "SortPaths" -> {}, "SortDirections" -> {}, 
         "HiddenItemsMap" -> Null, "UpdateType" -> 1|>, 
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
        DynamicModule[{
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
            Style[
             Grid[{{
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["Tel", 
                    Style[
                    "Tel", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "Tel"}, 1]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "Tel"}, "ColumnHeader", True], "Mouse"], 
                  ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["Tion", 
                    Style[
                    "Tion", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "Tion"}, 1]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "Tion"}, "ColumnHeader", True], "Mouse"], 
                  ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["Vel", 
                    Style[
                    "Vel", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "Vel"}, 1]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "Vel"}, "ColumnHeader", True], "Mouse"], 
                  ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["Vion", 
                    Style[
                    "Vion", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "Vion"}, 1]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "Vion"}, "ColumnHeader", True], "Mouse"], 
                  ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["Loc", 
                    Style[
                    "Loc", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "Loc"}, 1]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "Loc"}, "ColumnHeader", True], "Mouse"], 
                  ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["NL", 
                    Style[
                    "NL", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "NL"}, 1]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "NL"}, "ColumnHeader", True], "Mouse"], 
                  ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["Total", 
                    Style[
                    "Total", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "Total"}, 1]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "Total"}, "ColumnHeader", True], "Mouse"], 
                  ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["21280.2"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                    Key["Tel"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["4.44133"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                    Key["Tion"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["182926."], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                    Key["Vel"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["28744.1"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                    Key["Vion"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["46142.9"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                    Key["Loc"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["104543."], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                    Key["NL"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["383640."], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                    Key["Total"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["21280.2"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                    Key["Tel"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["4.44133"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                    Key["Tion"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["259186."], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                    Key["Vel"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["40543.9"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                    Key["Vion"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["48278.5"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                    Key["Loc"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["105209."], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                    Key["NL"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["474502."], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                    Key["Total"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["1.0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                    Key["Tel"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["1.0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                    Key["Tion"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["1.41689"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                    Key["Vel"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["1.41051"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                    Key["Vion"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["1.04628"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                    Key["Loc"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["1.00637"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                    Key["NL"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["1.23684"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                    Key["Total"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}}, 
              BaseStyle -> {
               ContextMenu -> 
                Dynamic[
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                  Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger, TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu,
                     True, TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger = 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                    TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                    Block[{TypeSystem`NestedGrid`PackagePrivate`$\
globalScrollPos = {TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                    
                    With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
                "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, 
              Dividers -> All, FrameStyle -> GrayLevel[0.7490196078431373], 
              Spacings -> {0, 0}, Alignment -> Left, 
              BaseStyle -> {
               FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
                Plain}], LineBreakWithin -> False, ContextMenu -> {}, 
             NumberMarks -> False, ShowAutoStyles -> False]], 
          TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
         Dynamic[
          TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
          TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
             Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
             
             Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
               TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
               TypeSystem`NestedGrid`PackagePrivate`datasetData[
                TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
              TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
                 FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
                 TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                 TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                 TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
                Not[
                 FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
                TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
                TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
           TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
           TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
           TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
             TypeSystem`SparseGrid[
              TypeSystem`H["(data no longer present)"]], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
          TrackedSymbols :> {
           TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
         DynamicModuleValues :> {}], 
        TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
         TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
          TypeSystem`PackageScope`SubViewPathbar[
          TypeSystem`NestedGrid`PackagePrivate`$path$$, 
           TypeSystem`NestedGrid`PackagePrivate`updateState[
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
            TypeSystem`NestedGrid`PackagePrivate`$path$$, 
            TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
            TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
         TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
        TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
         Framed[
          Dynamic[
           Replace[
           TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
            TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               TypeSystem`NestedGrid`PackagePrivate`localHold[
               TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
               Blank[]] -> "", 
             TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               TypeSystem`NestedGrid`PackagePrivate`localHold[
               TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
               Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
                Blank[]], 
               Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
                Blank[]], 
               Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                Blank[]]] :> (
              Increment[
               TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
              TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
               TypeSystem`NestedGrid`PackagePrivate`path$; 
              TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
               TypeSystem`NestedGrid`PackagePrivate`pathType$; 
              TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
               TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
              TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
               TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
              TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
               TypeSystem`NestedGrid`PackagePrivate`path$, 
                TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
             Spacer[10], Blank[] :> Spacer[10]}], 
           TrackedSymbols :> {
            TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], 
          FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
          Top, ImageSize -> {Automatic, 15}], FontSize -> 1], 
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
        DynamicWrapperBox[
         DynamicBox[ToBoxes[
           Dataset`DatasetContent[
           2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
            "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], 
            "State" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], 
            "VPos" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], 
            "HPos" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], 
            "TopBar" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], 
            "BottomBar" -> 
            Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], 
            "OutputID" -> Hold[
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], 
           StandardForm],
          ImageSizeCache->{478., {60.8544921875, 66.1455078125}},
          
          TrackedSymbols:>{
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
            TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
         TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
         MouseAnnotation[],
         ImageSizeCache->{478., {60.8544921875, 66.1455078125}}],
        BaseStyle->{LineBreakWithin -> False},
        DynamicModuleValues:>{},
        Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
         CreateUUID[]),
        UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
       
       Deploy,
       DefaultBaseStyle->"Deploy"],
      Dataset`InterpretDataset[1],
      Editable->False,
      SelectWithContents->True,
      Selectable->False]}], "}"}]}],
  SequenceForm["Rescaling Factors:", {
    Dataset[{<|"Ion" -> Row[{"Cu1", 
          Style["Cu1", 
           GrayLevel[0.5]]}, "\n"], "Tel" -> Row[{134.68477776388193`, 
          Style[134.68477776388193`, 
           GrayLevel[0.5]]}, "\n"], "Tion" -> Row[{2242.7219889958, 
          Style[2242.7219889958, 
           GrayLevel[0.5]]}, "\n"], "Vel" -> Row[{7.374269125438556, 
          Style[10.448510363354858`, 
           GrayLevel[0.5]]}, "\n"], "Vion" -> Row[{1.1885570603311084`, 
          Style[1.676475969205085, 
           GrayLevel[0.5]]}, "\n"], "Loc" -> Row[{1.290223797568449, 
          Style[1.3756630358670094`, 
           GrayLevel[0.5]]}, "\n"], "NL" -> Row[{2.932682523638492, 
          Style[2.9220853552974404`, 
           GrayLevel[0.5]]}, "\n"]|>, <|"Ion" -> Row[{"Cu11", 
          Style["Cu11", 
           GrayLevel[0.5]]}, "\n"], "Tel" -> Row[{134.68477776388193`, 
          Style[134.68477776388193`, 
           GrayLevel[0.5]]}, "\n"], "Tion" -> Row[{2242.7219889958, 
          Style[2242.7219889958, 
           GrayLevel[0.5]]}, "\n"], "Vel" -> Row[{7.374269125438556, 
          Style[10.448510363354858`, 
           GrayLevel[0.5]]}, "\n"], "Vion" -> Row[{1.1885570603311084`, 
          Style[1.676475969205085, 
           GrayLevel[0.5]]}, "\n"], "Loc" -> Row[{15.619819310875021`, 
          Style[16.559868243078338`, 
           GrayLevel[0.5]]}, "\n"], "NL" -> Row[{73.32290931180009, 
          Style[74.28935110495614, 
           GrayLevel[0.5]]}, "\n"]|>, <|"Ion" -> Row[{"C4", 
          Style["C4", 
           GrayLevel[0.5]]}, "\n"], "Tel" -> Row[{134.68477776388193`, 
          Style[134.68477776388193`, 
           GrayLevel[0.5]]}, "\n"], "Tion" -> Row[{2242.7219889958, 
          Style[2242.7219889958, 
           GrayLevel[0.5]]}, "\n"], "Vel" -> Row[{7.374269125438556, 
          Style[10.448510363354858`, 
           GrayLevel[0.5]]}, "\n"], "Vion" -> Row[{1.1885570603311084`, 
          Style[1.676475969205085, 
           GrayLevel[0.5]]}, "\n"], "Loc" -> Row[{17.320790835624127`, 
          Style[17.66303638202409, 
           GrayLevel[0.5]]}, "\n"], "NL" -> Row[{9.521152647017821, 
          Style[9.52284200000024, 
           GrayLevel[0.5]]}, "\n"]|>, <|"Ion" -> Row[{"O6", 
          Style["O6", 
           GrayLevel[0.5]]}, "\n"], "Tel" -> Row[{134.68477776388193`, 
          Style[134.68477776388193`, 
           GrayLevel[0.5]]}, "\n"], "Tion" -> Row[{2242.7219889958, 
          Style[2242.7219889958, 
           GrayLevel[0.5]]}, "\n"], "Vel" -> Row[{7.374269125438556, 
          Style[10.448510363354858`, 
           GrayLevel[0.5]]}, "\n"], "Vion" -> Row[{1.1885570603311084`, 
          Style[1.676475969205085, 
           GrayLevel[0.5]]}, "\n"], "Loc" -> Row[{35.39966365271577, 
          Style[35.913522230728375`, 
           GrayLevel[0.5]]}, "\n"], "NL" -> Row[{18.12452007728305, 
          Style[18.266917000000458`, 
           GrayLevel[0.5]]}, "\n"]|>, <|"Ion" -> Row[{"H1", 
          Style["H1", 
           GrayLevel[0.5]]}, "\n"], "Tel" -> Row[{134.68477776388193`, 
          Style[134.68477776388193`, 
           GrayLevel[0.5]]}, "\n"], "Tion" -> Row[{2242.7219889958, 
          Style[2242.7219889958, 
           GrayLevel[0.5]]}, "\n"], "Vel" -> Row[{7.374269125438556, 
          Style[10.448510363354858`, 
           GrayLevel[0.5]]}, "\n"], "Vion" -> Row[{1.1885570603311084`, 
          Style[1.676475969205085, 
           GrayLevel[0.5]]}, "\n"], "Loc" -> Row[{8.077732006093115, 
          Style[8.169659804014326, 
           GrayLevel[0.5]]}, "\n"], "NL" -> Row[{0., 
          Style[0., 
           GrayLevel[0.5]]}, "\n"]|>}, 
     TypeSystem`Vector[
      TypeSystem`Struct[{"Ion", "Tel", "Tion", "Vel", "Vion", "Loc", "NL"}, {
       TypeSystem`AnyType, TypeSystem`AnyType, TypeSystem`AnyType, 
        TypeSystem`AnyType, TypeSystem`AnyType, TypeSystem`AnyType, 
        TypeSystem`AnyType}], 5], <||>], 
    Dataset[{<|
      "Tel" -> 21280.194886693345`, "Tion" -> 4.441332957526168, "Vel" -> 
       182926.11992562882`, "Vion" -> 28744.063947047525`, "Loc" -> 
       46142.90483714776, "NL" -> 104542.71511143728`, "Total" -> 
       383640.44004091225`|>, <|
      "Tel" -> 21280.194886693345`, "Tion" -> 4.441332957526168, "Vel" -> 
       259185.74807338062`, "Vion" -> 40543.89483925578, "Loc" -> 
       48278.495755064316`, "NL" -> 105209.14850256013`, "Total" -> 
       474501.9233899117|>, <|
      "Tel" -> 1., "Tion" -> 1., "Vel" -> 1.4168875837893256`, "Vion" -> 
       1.4105136599315242`, "Loc" -> 1.046282108277615, "NL" -> 
       1.0063747473022149`, "Total" -> 1.2368402125159428`|>}, 
     TypeSystem`Vector[
      TypeSystem`Struct[{"Tel", "Tion", "Vel", "Vion", "Loc", "NL", "Total"}, {
        TypeSystem`Atom[Real], 
        TypeSystem`Atom[Real], 
        TypeSystem`Atom[Real], 
        TypeSystem`Atom[Real], 
        TypeSystem`Atom[Real], 
        TypeSystem`Atom[Real], 
        TypeSystem`Atom[Real]}], 3], <||>]}],
  Editable->False]], "Print",
 CellChangeTimes->{3.962712383863021*^9, 3.962993319611663*^9},
 CellLabel->
  "During evaluation of \
In[65]:=",ExpressionUUID->"d3620494-a881-497c-92f6-8344c240ad55"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Compilation Cost:\"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "22552", ",", "8066", ",", "12215", ",", "1454", ",", "161359"}], "}"}],
      ",", "205646"}], "}"}]}],
  SequenceForm[
  "Compilation Cost:", {{22552, 8066, 12215, 1454, 161359}, 205646}],
  Editable->False]], "Print",
 CellChangeTimes->{3.962712383863021*^9, 3.962993319799137*^9},
 CellLabel->
  "During evaluation of \
In[65]:=",ExpressionUUID->"ba5957a0-68ad-4dd8-85d8-ac31f14dc971"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Qubit Cost:\"\>", "\[InvisibleSpace]", "5377"}],
  SequenceForm["Qubit Cost:", 5377],
  Editable->False]], "Print",
 CellChangeTimes->{3.962712383863021*^9, 3.962993319800324*^9},
 CellLabel->
  "During evaluation of \
In[65]:=",ExpressionUUID->"515e9f98-bda7-4e56-b8e3-1ca9bbc6da45"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Time Evolution Cost:\"\>", "\[InvisibleSpace]", 
   TagBox[
    TagBox[
     DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
      "InitialData" -> <|
        "exact" -> <|
          "query" -> 2 + 
            Ceiling[521421.4184126218 $CellContext`t + 
              Log[2.9552401942122875`/$CellContext`\[Epsilon]]], 
           "compilation" -> ScientificForm[205646., 5], "total" -> 
           205646 (2 + 
             Ceiling[521421.4184126218 $CellContext`t + 
               Log[2.9552401942122875`/$CellContext`\[Epsilon]]])|>, 
         "bound" -> <|
          "query" -> 2 + 
            Ceiling[644914.9779598315 $CellContext`t + 
              Log[2.9552401942122875`/$CellContext`\[Epsilon]]], 
           "compilation" -> ScientificForm[205646., 5], "total" -> 
           205646 (2 + 
             Ceiling[644914.9779598315 $CellContext`t + 
               Log[2.9552401942122875`/$CellContext`\[Epsilon]]])|>|>, 
       "AllowEmbedding" -> True, "InitialShape" -> 
       TypeSystem`PackageScope`HeaderShape[<|{All, 
            TypeSystem`PackageScope`KeyDummy[5]} -> 1, {All, "query"} -> 
          1, {All, "compilation"} -> 1, {All, "total"} -> 1|>, 
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`ColumnShape[
           TypeSystem`PackageScope`KeyValueShape[
            TypeSystem`PackageScope`AtomShape[56.00000000000001], 
            TypeSystem`PackageScope`Limited[
             
             TypeSystem`PackageScope`RowShape[<|
              "query" -> TypeSystem`PackageScope`UnknownShape[False], 
               "compilation" -> TypeSystem`PackageScope`UnknownShape[False], 
               "total" -> TypeSystem`PackageScope`UnknownShape[False]|>], 
             DirectedInfinity[1], 3, {All}]]], 2, 
          DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Assoc[
         TypeSystem`Atom[String], 
         TypeSystem`Struct[{"query", "compilation", "total"}, {
          TypeSystem`AnyType, TypeSystem`AnyType, TypeSystem`AnyType}], 2], 
       "Meta" -> <||>, "RowTarget" -> 20, "ColumnTarget" -> 10, "Shape" -> 
       TypeSystem`PackageScope`HeaderShape[<|{All, 
            TypeSystem`PackageScope`KeyDummy[5]} -> 1, {All, "query"} -> 
          1, {All, "compilation"} -> 1, {All, "total"} -> 1|>, 
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`ColumnShape[
           TypeSystem`PackageScope`KeyValueShape[
            TypeSystem`PackageScope`AtomShape[56.00000000000001], 
            TypeSystem`PackageScope`Limited[
             
             TypeSystem`PackageScope`RowShape[<|
              "query" -> TypeSystem`PackageScope`UnknownShape[False], 
               "compilation" -> TypeSystem`PackageScope`UnknownShape[False], 
               "total" -> TypeSystem`PackageScope`UnknownShape[False]|>], 
             DirectedInfinity[1], 3, {All}]]], 2, 
          DirectedInfinity[1], {}]], "Type" -> TypeSystem`Assoc[
         TypeSystem`Atom[String], 
         TypeSystem`Struct[{"query", "compilation", "total"}, {
          TypeSystem`AnyType, TypeSystem`AnyType, TypeSystem`AnyType}], 2], 
       "Path" -> {}, "DisplayedRowCount" -> 2, "DisplayedColumnCount" -> 3, 
       "DataRowCount" -> 2, "DataColumnCount" -> 3, "SortPaths" -> {}, 
       "SortDirections" -> {}, "HiddenItemsMap" -> Null, "UpdateType" -> 1|>, 
      TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
      TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
      TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
      TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
      TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
      DynamicModule[{
       TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
          Style[
           Grid[{{
              Item[
               Pane[
                Annotation[
                 Mouseover[
                  
                  Graphics[{}, ImageSize -> 6, BaselinePosition -> 
                   Scaled[-0.15]], 
                  Graphics[{
                    GrayLevel[0.6], 
                    
                    Polygon[{{2^Rational[-1, 2], -2^Rational[-1, 2]}, {
                    2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], -2^
                    Rational[-1, 2]}}]}, ImageSize -> 6, BaselinePosition -> 
                   Scaled[-0.15]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                  All, Keys}, "KeyDummy", True], "Mouse"], 
                ImageSize -> {{1, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
               GrayLevel[0.95], Alignment -> {Left, Baseline}], 
              Item[
               Pane[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["query", 
                    Style[
                    "query", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "query"}, 1]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                  All, "query"}, "ColumnHeader", True], "Mouse"], 
                ImageSize -> {{1, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
               GrayLevel[0.95], Alignment -> {Left, Baseline}], 
              Item[
               Pane[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["compilation", 
                    Style[
                    "compilation", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "compilation"}, 1]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                  All, "compilation"}, "ColumnHeader", True], "Mouse"], 
                ImageSize -> {{1, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
               GrayLevel[0.95], Alignment -> {Left, Baseline}], 
              Item[
               Pane[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["total", 
                    Style[
                    "total", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "total"}, 1]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                  All, "total"}, "ColumnHeader", True], "Mouse"], 
                ImageSize -> {{1, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
               GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
              Item[
               Pane[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["exact", 
                    Style[
                    "exact", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["exact"]}, 1]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["exact"]}, "RowHeader", False], "Mouse"], 
                ImageSize -> {{56.00000000000001, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
               GrayLevel[0.95], Alignment -> {Left, Baseline}], 
              Item[
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   RowBox[{"2", "+", 
                    RowBox[{"Ceiling", "[", 
                    RowBox[{
                    RowBox[{"521421.4184126218`", " ", "t"}], "+", 
                    RowBox[{"Log", "[", 
                    FractionBox["2.9552401942122875`", "\[Epsilon]"], "]"}]}],
                     "]"}]}], FontFamily -> Dynamic[
                    CurrentValue[{"StyleHints", "CodeFont"}]], 
                   ShowStringCharacters -> True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["exact"], 
                   Key["query"]}, "Item", False], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}], 
              Item[
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   TagBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"\"2.0565\"", "\[Times]", 
                    SuperscriptBox["10", "\"5\""]}], ShowStringCharacters -> 
                    False], 205646., AutoDelete -> True], 
                    ScientificForm[#, 5]& ], FontFamily -> Dynamic[
                    CurrentValue[{"StyleHints", "CodeFont"}]], 
                   ShowStringCharacters -> True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["exact"], 
                   Key["compilation"]}, "Item", False], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}], 
              Item[
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   RowBox[{"205646", " ", 
                    RowBox[{"(", 
                    RowBox[{"2", "+", 
                    RowBox[{"Ceiling", "[", 
                    RowBox[{
                    RowBox[{"521421.4184126218`", " ", "t"}], "+", 
                    RowBox[{"Log", "[", 
                    FractionBox["2.9552401942122875`", "\[Epsilon]"], "]"}]}],
                     "]"}]}], ")"}]}], FontFamily -> Dynamic[
                    CurrentValue[{"StyleHints", "CodeFont"}]], 
                   ShowStringCharacters -> True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["exact"], 
                   Key["total"]}, "Item", False], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}]}, {
              Item[
               Pane[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["bound", 
                    Style[
                    "bound", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["bound"]}, 1]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["bound"]}, "RowHeader", False], "Mouse"], 
                ImageSize -> {{56.00000000000001, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
               GrayLevel[0.95], Alignment -> {Left, Baseline}], 
              Item[
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   RowBox[{"2", "+", 
                    RowBox[{"Ceiling", "[", 
                    RowBox[{
                    RowBox[{"644914.9779598315`", " ", "t"}], "+", 
                    RowBox[{"Log", "[", 
                    FractionBox["2.9552401942122875`", "\[Epsilon]"], "]"}]}],
                     "]"}]}], FontFamily -> Dynamic[
                    CurrentValue[{"StyleHints", "CodeFont"}]], 
                   ShowStringCharacters -> True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["bound"], 
                   Key["query"]}, "Item", False], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}], 
              Item[
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   TagBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"\"2.0565\"", "\[Times]", 
                    SuperscriptBox["10", "\"5\""]}], ShowStringCharacters -> 
                    False], 205646., AutoDelete -> True], 
                    ScientificForm[#, 5]& ], FontFamily -> Dynamic[
                    CurrentValue[{"StyleHints", "CodeFont"}]], 
                   ShowStringCharacters -> True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["bound"], 
                   Key["compilation"]}, "Item", False], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}], 
              Item[
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   RowBox[{"205646", " ", 
                    RowBox[{"(", 
                    RowBox[{"2", "+", 
                    RowBox[{"Ceiling", "[", 
                    RowBox[{
                    RowBox[{"644914.9779598315`", " ", "t"}], "+", 
                    RowBox[{"Log", "[", 
                    FractionBox["2.9552401942122875`", "\[Epsilon]"], "]"}]}],
                     "]"}]}], ")"}]}], FontFamily -> Dynamic[
                    CurrentValue[{"StyleHints", "CodeFont"}]], 
                   ShowStringCharacters -> True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["bound"], 
                   Key["total"]}, "Item", False], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}]}}, 
            BaseStyle -> {
             ContextMenu -> 
              Dynamic[TypeSystem`NestedGrid`PackagePrivate`$\
contextMenuTrigger; 
                Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                  TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                  TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger, TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu,
                   True, TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger = 
                   TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                  TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                   Block[{TypeSystem`NestedGrid`PackagePrivate`$\
globalScrollPos = {TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                    
                    With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
              "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, 
            Dividers -> All, FrameStyle -> GrayLevel[0.7490196078431373], 
            Spacings -> {0, 0}, Alignment -> Left, 
            BaseStyle -> {
             FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
              Plain}], LineBreakWithin -> False, ContextMenu -> {}, 
           NumberMarks -> False, ShowAutoStyles -> False]], 
        TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
       Dynamic[
        TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
        TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
           Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
           
           Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
             TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
             TypeSystem`NestedGrid`PackagePrivate`datasetData[
              TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
               FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
               TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
               TypeSystem`NestedGrid`PackagePrivate`renderGrid[
               TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
               TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
              Not[
               FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
              TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
              TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
         TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
         TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
         TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
           FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
           TypeSystem`SparseGrid[
            TypeSystem`H["(data no longer present)"]], 
           TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
        TrackedSymbols :> {
         TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
          TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
       DynamicModuleValues :> {}], 
      TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
       TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
        TypeSystem`PackageScope`SubViewPathbar[
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
         TypeSystem`NestedGrid`PackagePrivate`updateState[
         TypeSystem`NestedGrid`PackagePrivate`$state$$, 
          TypeSystem`NestedGrid`PackagePrivate`$path$$, 
          TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
          TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
       TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
      TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
       Framed[
        Dynamic[
         Replace[
         TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
          TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
             TypeSystem`NestedGrid`PackagePrivate`localHold[
             TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
             Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
             TypeSystem`NestedGrid`PackagePrivate`localHold[
             TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
              Blank[]], 
             Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
              Blank[]], 
             Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
              Blank[]]] :> (
            Increment[
             TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
            TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
             TypeSystem`NestedGrid`PackagePrivate`path$; 
            TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
             TypeSystem`NestedGrid`PackagePrivate`pathType$; 
            TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
             TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
            TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
             TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
            TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
             TypeSystem`NestedGrid`PackagePrivate`path$, 
              TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
           Spacer[10], Blank[] :> Spacer[10]}], 
         TrackedSymbols :> {
          TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], 
        FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
        Top, ImageSize -> {Automatic, 15}], FontSize -> 1], 
      TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
      DynamicWrapperBox[
       DynamicBox[ToBoxes[
         Dataset`DatasetContent[
         2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
          "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], 
          "State" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], 
          "VPos" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], 
          "HPos" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], 
          "TopBar" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], 
          "BottomBar" -> 
          Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
          Hold[
            TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
        ImageSizeCache->{797., {51.3544921875, 56.6455078125}},
        TrackedSymbols:>{
         TypeSystem`NestedGrid`PackagePrivate`$state$$, 
          TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
       MouseAnnotation[],
       ImageSizeCache->{797., {51.3544921875, 56.6455078125}}],
      BaseStyle->{LineBreakWithin -> False},
      DynamicModuleValues:>{},
      Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
       CreateUUID[]),
      UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
     Deploy,
     DefaultBaseStyle->"Deploy"],
    Dataset`InterpretDataset[1],
    Editable->False,
    SelectWithContents->True,
    Selectable->False]}],
  SequenceForm["Time Evolution Cost:", 
   Dataset[<|
    "exact" -> <|
      "query" -> 2 + 
        Ceiling[521421.4184126218 $CellContext`t + 
          Log[2.9552401942122875`/$CellContext`\[Epsilon]]], "compilation" -> 
       ScientificForm[205646., 5], "total" -> 
       205646 (2 + 
         Ceiling[521421.4184126218 $CellContext`t + 
           Log[2.9552401942122875`/$CellContext`\[Epsilon]]])|>, 
     "bound" -> <|
      "query" -> 2 + 
        Ceiling[644914.9779598315 $CellContext`t + 
          Log[2.9552401942122875`/$CellContext`\[Epsilon]]], "compilation" -> 
       ScientificForm[205646., 5], "total" -> 
       205646 (2 + 
         Ceiling[644914.9779598315 $CellContext`t + 
           Log[2.9552401942122875`/$CellContext`\[Epsilon]]])|>|>, 
    TypeSystem`Assoc[
     TypeSystem`Atom[String], 
     TypeSystem`Struct[{"query", "compilation", "total"}, {
      TypeSystem`AnyType, TypeSystem`AnyType, TypeSystem`AnyType}], 2], <||>]],
  Editable->False]], "Print",
 CellChangeTimes->{3.962712383863021*^9, 3.962993319804093*^9},
 CellLabel->
  "During evaluation of \
In[65]:=",ExpressionUUID->"8be09828-6a02-4afd-93f9-89286369c874"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Particle Count:\"\>", "\[InvisibleSpace]", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"\[Eta]el\"\>", "\[Rule]", "318"}], ",", 
     RowBox[{"\<\"\[Eta]ion\"\>", "\[Rule]", "255"}], ",", 
     RowBox[{"\<\"\[Eta]\"\>", "\[Rule]", "573"}]}], "\[RightAssociation]"}]}],
  SequenceForm[
  "Particle Count:", <|
   "\[Eta]el" -> 318, "\[Eta]ion" -> 255, "\[Eta]" -> 573|>],
  Editable->False]], "Print",
 CellChangeTimes->{3.962712383863021*^9, 3.962993319864828*^9},
 CellLabel->
  "During evaluation of \
In[65]:=",ExpressionUUID->"47c20f69-2dc4-48c4-91c5-7b200c3841bb"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Rescaling Factors:\"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
     TagBox[
      TagBox[
       DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
        "InitialData" -> {<|"Ion" -> Row[{"Cu1", 
               Style["Cu1", 
                GrayLevel[0.5]]}, "\n"], "Tel" -> Row[{178.64646646273764`, 
               Style[178.64646646273764`, 
                GrayLevel[0.5]]}, "\n"], "Tion" -> Row[{2926.804354179773, 
               Style[2926.804354179773, 
                GrayLevel[0.5]]}, "\n"], "Vel" -> Row[{8.36258273018963, 
               Style[12.03351035584406, 
                GrayLevel[0.5]]}, "\n"], "Vion" -> Row[{1.145859988366388, 
               Style[1.6313442970235776`, 
                GrayLevel[0.5]]}, "\n"], "Loc" -> Row[{1.2993425493820236`, 
               Style[1.3756630358670094`, 
                GrayLevel[0.5]]}, "\n"], "NL" -> Row[{2.935772471386912, 
               Style[2.9220853552974404`, 
                GrayLevel[0.5]]}, "\n"]|>, <|"Ion" -> Row[{"Cu11", 
               Style["Cu11", 
                GrayLevel[0.5]]}, "\n"], "Tel" -> Row[{178.64646646273764`, 
               Style[178.64646646273764`, 
                GrayLevel[0.5]]}, "\n"], "Tion" -> Row[{2926.804354179773, 
               Style[2926.804354179773, 
                GrayLevel[0.5]]}, "\n"], "Vel" -> Row[{8.36258273018963, 
               Style[12.03351035584406, 
                GrayLevel[0.5]]}, "\n"], "Vion" -> Row[{1.145859988366388, 
               Style[1.6313442970235776`, 
                GrayLevel[0.5]]}, "\n"], "Loc" -> Row[{15.720264659812544`, 
               Style[16.559868243078338`, 
                GrayLevel[0.5]]}, "\n"], "NL" -> Row[{73.97511547860404, 
               Style[74.28935110495614, 
                GrayLevel[0.5]]}, "\n"]|>, <|"Ion" -> Row[{"C4", 
               Style["C4", 
                GrayLevel[0.5]]}, "\n"], "Tel" -> Row[{178.64646646273764`, 
               Style[178.64646646273764`, 
                GrayLevel[0.5]]}, "\n"], "Tion" -> Row[{2926.804354179773, 
               Style[2926.804354179773, 
                GrayLevel[0.5]]}, "\n"], "Vel" -> Row[{8.36258273018963, 
               Style[12.03351035584406, 
                GrayLevel[0.5]]}, "\n"], "Vion" -> Row[{1.145859988366388, 
               Style[1.6313442970235776`, 
                GrayLevel[0.5]]}, "\n"], "Loc" -> Row[{17.357578541927964`, 
               Style[17.66303638202409, 
                GrayLevel[0.5]]}, "\n"], "NL" -> Row[{9.522178917901396, 
               Style[9.52284200000024, 
                GrayLevel[0.5]]}, "\n"]|>, <|"Ion" -> Row[{"O6", 
               Style["O6", 
                GrayLevel[0.5]]}, "\n"], "Tel" -> Row[{178.64646646273764`, 
               Style[178.64646646273764`, 
                GrayLevel[0.5]]}, "\n"], "Tion" -> Row[{2926.804354179773, 
               Style[2926.804354179773, 
                GrayLevel[0.5]]}, "\n"], "Vel" -> Row[{8.36258273018963, 
               Style[12.03351035584406, 
                GrayLevel[0.5]]}, "\n"], "Vion" -> Row[{1.145859988366388, 
               Style[1.6313442970235776`, 
                GrayLevel[0.5]]}, "\n"], "Loc" -> Row[{35.45513810697978, 
               Style[35.913522230728375`, 
                GrayLevel[0.5]]}, "\n"], "NL" -> Row[{18.20482116696748, 
               Style[18.266917000000458`, 
                GrayLevel[0.5]]}, "\n"]|>, <|"Ion" -> Row[{"H1", 
               Style["H1", 
                GrayLevel[0.5]]}, "\n"], "Tel" -> Row[{178.64646646273764`, 
               Style[178.64646646273764`, 
                GrayLevel[0.5]]}, "\n"], "Tion" -> Row[{2926.804354179773, 
               Style[2926.804354179773, 
                GrayLevel[0.5]]}, "\n"], "Vel" -> Row[{8.36258273018963, 
               Style[12.03351035584406, 
                GrayLevel[0.5]]}, "\n"], "Vion" -> Row[{1.145859988366388, 
               Style[1.6313442970235776`, 
                GrayLevel[0.5]]}, "\n"], "Loc" -> Row[{8.090776375440088, 
               Style[8.169659804014326, 
                GrayLevel[0.5]]}, "\n"], "NL" -> Row[{0., 
               Style[0., 
                GrayLevel[0.5]]}, "\n"]|>}, "AllowEmbedding" -> True, 
         "InitialShape" -> 
         TypeSystem`PackageScope`HeaderShape[<|{All, "Ion"} -> 
            1, {All, "Tel"} -> 1, {All, "Tion"} -> 1, {All, "Vel"} -> 
            1, {All, "Vion"} -> 1, {All, "Loc"} -> 1, {All, "NL"} -> 1|>, 
           TypeSystem`PackageScope`Limited[
            TypeSystem`PackageScope`ColumnShape[
             TypeSystem`PackageScope`Limited[
              
              TypeSystem`PackageScope`RowShape[<|
               "Ion" -> TypeSystem`PackageScope`UnknownShape[False], "Tel" -> 
                TypeSystem`PackageScope`UnknownShape[False], "Tion" -> 
                TypeSystem`PackageScope`UnknownShape[False], "Vel" -> 
                TypeSystem`PackageScope`UnknownShape[False], "Vion" -> 
                TypeSystem`PackageScope`UnknownShape[False], "Loc" -> 
                TypeSystem`PackageScope`UnknownShape[False], "NL" -> 
                TypeSystem`PackageScope`UnknownShape[False]|>], 
              DirectedInfinity[1], 7, {All}]], 5, 
            DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Vector[
           
           TypeSystem`Struct[{
            "Ion", "Tel", "Tion", "Vel", "Vion", "Loc", "NL"}, {
            TypeSystem`AnyType, TypeSystem`AnyType, TypeSystem`AnyType, 
             TypeSystem`AnyType, TypeSystem`AnyType, TypeSystem`AnyType, 
             TypeSystem`AnyType}], 5], "Meta" -> <||>, "RowTarget" -> 20, 
         "ColumnTarget" -> 10, "Shape" -> 
         TypeSystem`PackageScope`HeaderShape[<|{All, "Ion"} -> 
            1, {All, "Tel"} -> 1, {All, "Tion"} -> 1, {All, "Vel"} -> 
            1, {All, "Vion"} -> 1, {All, "Loc"} -> 1, {All, "NL"} -> 1|>, 
           TypeSystem`PackageScope`Limited[
            TypeSystem`PackageScope`ColumnShape[
             TypeSystem`PackageScope`Limited[
              
              TypeSystem`PackageScope`RowShape[<|
               "Ion" -> TypeSystem`PackageScope`UnknownShape[False], "Tel" -> 
                TypeSystem`PackageScope`UnknownShape[False], "Tion" -> 
                TypeSystem`PackageScope`UnknownShape[False], "Vel" -> 
                TypeSystem`PackageScope`UnknownShape[False], "Vion" -> 
                TypeSystem`PackageScope`UnknownShape[False], "Loc" -> 
                TypeSystem`PackageScope`UnknownShape[False], "NL" -> 
                TypeSystem`PackageScope`UnknownShape[False]|>], 
              DirectedInfinity[1], 7, {All}]], 5, 
            DirectedInfinity[1], {}]], "Type" -> TypeSystem`Vector[
           
           TypeSystem`Struct[{
            "Ion", "Tel", "Tion", "Vel", "Vion", "Loc", "NL"}, {
            TypeSystem`AnyType, TypeSystem`AnyType, TypeSystem`AnyType, 
             TypeSystem`AnyType, TypeSystem`AnyType, TypeSystem`AnyType, 
             TypeSystem`AnyType}], 5], "Path" -> {}, "DisplayedRowCount" -> 5,
          "DisplayedColumnCount" -> 7, "DataRowCount" -> 5, "DataColumnCount" -> 
         7, "SortPaths" -> {}, "SortDirections" -> {}, "HiddenItemsMap" -> 
         Null, "UpdateType" -> 1|>, 
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
        DynamicModule[{
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
            Style[
             Grid[{{
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["Ion", 
                    Style[
                    "Ion", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "Ion"}, 1]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "Ion"}, "ColumnHeader", True], "Mouse"], 
                  ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["Tel", 
                    Style[
                    "Tel", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "Tel"}, 1]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "Tel"}, "ColumnHeader", True], "Mouse"], 
                  ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["Tion", 
                    Style[
                    "Tion", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "Tion"}, 1]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "Tion"}, "ColumnHeader", True], "Mouse"], 
                  ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["Vel", 
                    Style[
                    "Vel", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "Vel"}, 1]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "Vel"}, "ColumnHeader", True], "Mouse"], 
                  ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["Vion", 
                    Style[
                    "Vion", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "Vion"}, 1]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "Vion"}, "ColumnHeader", True], "Mouse"], 
                  ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["Loc", 
                    Style[
                    "Loc", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "Loc"}, 1]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "Loc"}, "ColumnHeader", True], "Mouse"], 
                  ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["NL", 
                    Style[
                    "NL", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "NL"}, 1]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "NL"}, "ColumnHeader", True], "Mouse"], 
                  ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
                Item[
                 Pane[
                  Annotation[
                   Row[{"Cu1", 
                    Style["Cu1", 
                    GrayLevel[0.5]]}, "\n"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                    Key["Ion"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   Row[{178.64646646273764`, 
                    Style[178.64646646273764`, 
                    GrayLevel[0.5]]}, "\n"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                    Key["Tel"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   Row[{2926.804354179773, 
                    Style[2926.804354179773, 
                    GrayLevel[0.5]]}, "\n"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                    Key["Tion"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   Row[{8.36258273018963, 
                    Style[12.03351035584406, 
                    GrayLevel[0.5]]}, "\n"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                    Key["Vel"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   Row[{1.145859988366388, 
                    Style[1.6313442970235776`, 
                    GrayLevel[0.5]]}, "\n"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                    Key["Vion"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   Row[{1.2993425493820236`, 
                    Style[1.3756630358670094`, 
                    GrayLevel[0.5]]}, "\n"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                    Key["Loc"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   Row[{2.935772471386912, 
                    Style[2.9220853552974404`, 
                    GrayLevel[0.5]]}, "\n"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                    Key["NL"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   Row[{"Cu11", 
                    Style["Cu11", 
                    GrayLevel[0.5]]}, "\n"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                    Key["Ion"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   Row[{178.64646646273764`, 
                    Style[178.64646646273764`, 
                    GrayLevel[0.5]]}, "\n"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                    Key["Tel"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   Row[{2926.804354179773, 
                    Style[2926.804354179773, 
                    GrayLevel[0.5]]}, "\n"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                    Key["Tion"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   Row[{8.36258273018963, 
                    Style[12.03351035584406, 
                    GrayLevel[0.5]]}, "\n"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                    Key["Vel"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   Row[{1.145859988366388, 
                    Style[1.6313442970235776`, 
                    GrayLevel[0.5]]}, "\n"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                    Key["Vion"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   Row[{15.720264659812544`, 
                    Style[16.559868243078338`, 
                    GrayLevel[0.5]]}, "\n"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                    Key["Loc"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   Row[{73.97511547860404, 
                    Style[74.28935110495614, 
                    GrayLevel[0.5]]}, "\n"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                    Key["NL"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   Row[{"C4", 
                    Style["C4", 
                    GrayLevel[0.5]]}, "\n"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                    Key["Ion"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   Row[{178.64646646273764`, 
                    Style[178.64646646273764`, 
                    GrayLevel[0.5]]}, "\n"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                    Key["Tel"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   Row[{2926.804354179773, 
                    Style[2926.804354179773, 
                    GrayLevel[0.5]]}, "\n"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                    Key["Tion"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   Row[{8.36258273018963, 
                    Style[12.03351035584406, 
                    GrayLevel[0.5]]}, "\n"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                    Key["Vel"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   Row[{1.145859988366388, 
                    Style[1.6313442970235776`, 
                    GrayLevel[0.5]]}, "\n"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                    Key["Vion"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   Row[{17.357578541927964`, 
                    Style[17.66303638202409, 
                    GrayLevel[0.5]]}, "\n"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                    Key["Loc"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   Row[{9.522178917901396, 
                    Style[9.52284200000024, 
                    GrayLevel[0.5]]}, "\n"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                    Key["NL"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   Row[{"O6", 
                    Style["O6", 
                    GrayLevel[0.5]]}, "\n"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                    Key["Ion"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   Row[{178.64646646273764`, 
                    Style[178.64646646273764`, 
                    GrayLevel[0.5]]}, "\n"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                    Key["Tel"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   Row[{2926.804354179773, 
                    Style[2926.804354179773, 
                    GrayLevel[0.5]]}, "\n"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                    Key["Tion"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   Row[{8.36258273018963, 
                    Style[12.03351035584406, 
                    GrayLevel[0.5]]}, "\n"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                    Key["Vel"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   Row[{1.145859988366388, 
                    Style[1.6313442970235776`, 
                    GrayLevel[0.5]]}, "\n"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                    Key["Vion"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   Row[{35.45513810697978, 
                    Style[35.913522230728375`, 
                    GrayLevel[0.5]]}, "\n"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                    Key["Loc"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   Row[{18.20482116696748, 
                    Style[18.266917000000458`, 
                    GrayLevel[0.5]]}, "\n"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                    Key["NL"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   Row[{"H1", 
                    Style["H1", 
                    GrayLevel[0.5]]}, "\n"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                    Key["Ion"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   Row[{178.64646646273764`, 
                    Style[178.64646646273764`, 
                    GrayLevel[0.5]]}, "\n"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                    Key["Tel"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   Row[{2926.804354179773, 
                    Style[2926.804354179773, 
                    GrayLevel[0.5]]}, "\n"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                    Key["Tion"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   Row[{8.36258273018963, 
                    Style[12.03351035584406, 
                    GrayLevel[0.5]]}, "\n"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                    Key["Vel"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   Row[{1.145859988366388, 
                    Style[1.6313442970235776`, 
                    GrayLevel[0.5]]}, "\n"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                    Key["Vion"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   Row[{8.090776375440088, 
                    Style[8.169659804014326, 
                    GrayLevel[0.5]]}, "\n"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                    Key["Loc"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   Row[{0., 
                    Style[0., 
                    GrayLevel[0.5]]}, "\n"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                    Key["NL"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}}, 
              BaseStyle -> {
               ContextMenu -> 
                Dynamic[
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                  Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger, TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu,
                     True, TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger = 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                    TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                    Block[{TypeSystem`NestedGrid`PackagePrivate`$\
globalScrollPos = {TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                    
                    With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
                "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, 
              Dividers -> All, FrameStyle -> GrayLevel[0.7490196078431373], 
              Spacings -> {0, 0}, Alignment -> Left, 
              BaseStyle -> {
               FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
                Plain}], LineBreakWithin -> False, ContextMenu -> {}, 
             NumberMarks -> False, ShowAutoStyles -> False]], 
          TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
         Dynamic[
          TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
          TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
             Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
             
             Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
               TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
               TypeSystem`NestedGrid`PackagePrivate`datasetData[
                TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
              TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
                 FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
                 TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                 TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                 TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
                Not[
                 FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
                TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
                TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
           TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
           TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
           TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
             TypeSystem`SparseGrid[
              TypeSystem`H["(data no longer present)"]], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
          TrackedSymbols :> {
           TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
         DynamicModuleValues :> {}], 
        TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
         TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
          TypeSystem`PackageScope`SubViewPathbar[
          TypeSystem`NestedGrid`PackagePrivate`$path$$, 
           TypeSystem`NestedGrid`PackagePrivate`updateState[
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
            TypeSystem`NestedGrid`PackagePrivate`$path$$, 
            TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
            TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
         TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
        TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
         Framed[
          Dynamic[
           Replace[
           TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
            TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               TypeSystem`NestedGrid`PackagePrivate`localHold[
               TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
               Blank[]] -> "", 
             TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               TypeSystem`NestedGrid`PackagePrivate`localHold[
               TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
               Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
                Blank[]], 
               Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
                Blank[]], 
               Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                Blank[]]] :> (
              Increment[
               TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
              TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
               TypeSystem`NestedGrid`PackagePrivate`path$; 
              TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
               TypeSystem`NestedGrid`PackagePrivate`pathType$; 
              TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
               TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
              TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
               TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
              TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
               TypeSystem`NestedGrid`PackagePrivate`path$, 
                TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
             Spacer[10], Blank[] :> Spacer[10]}], 
           TrackedSymbols :> {
            TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], 
          FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
          Top, ImageSize -> {Automatic, 15}], FontSize -> 1], 
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
        DynamicWrapperBox[
         DynamicBox[ToBoxes[
           Dataset`DatasetContent[
           2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
            "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], 
            "State" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], 
            "VPos" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], 
            "HPos" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], 
            "TopBar" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], 
            "BottomBar" -> 
            Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], 
            "OutputID" -> Hold[
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], 
           StandardForm],
          ImageSizeCache->{478., {142.8544921875, 148.1455078125}},
          
          TrackedSymbols:>{
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
            TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
         TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
         MouseAnnotation[],
         ImageSizeCache->{478., {142.8544921875, 148.1455078125}}],
        BaseStyle->{LineBreakWithin -> False},
        DynamicModuleValues:>{},
        Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
         CreateUUID[]),
        UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
       
       Deploy,
       DefaultBaseStyle->"Deploy"],
      Dataset`InterpretDataset[1],
      Editable->False,
      SelectWithContents->True,
      Selectable->False], ",", 
     TagBox[
      TagBox[
       DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
        "InitialData" -> {<|
           "Tel" -> 56809.57633515057, "Tion" -> 9.83847306827717, "Vel" -> 
            842998.5146994957, "Vion" -> 114796.83707449822`, "Loc" -> 
            159441.91041860756`, "NL" -> 360952.78601481864`, "Total" -> 
            1.535009463015639*^6|>, <|
           "Tel" -> 56809.57633515057, "Tion" -> 9.83847306827717, "Vel" -> 
            1.213050044931217*^6, "Vion" -> 163434.5970530101, "Loc" -> 
            167161.84697447327`, "NL" -> 360425.7612561042, "Total" -> 
            1.960891665023021*^6|>, <|
           "Tel" -> 1., "Tion" -> 1., "Vel" -> 1.4389705601837663`, "Vion" -> 
            1.4236855406299047`, "Loc" -> 1.0484184900669928`, "NL" -> 
            0.9985399066605548, "Total" -> 1.277445978196582|>}, 
         "AllowEmbedding" -> True, "InitialShape" -> 
         TypeSystem`PackageScope`HeaderShape[<|{All, "Tel"} -> 
            1, {All, "Tion"} -> 1, {All, "Vel"} -> 1, {All, "Vion"} -> 
            1, {All, "Loc"} -> 1, {All, "NL"} -> 1, {All, "Total"} -> 1|>, 
           TypeSystem`PackageScope`Limited[
            TypeSystem`PackageScope`ColumnShape[
             TypeSystem`PackageScope`Limited[
              
              TypeSystem`PackageScope`RowShape[<|
               "Tel" -> TypeSystem`PackageScope`AtomShape[60], "Tion" -> 
                TypeSystem`PackageScope`AtomShape[60], "Vel" -> 
                TypeSystem`PackageScope`AtomShape[60], "Vion" -> 
                TypeSystem`PackageScope`AtomShape[60], "Loc" -> 
                TypeSystem`PackageScope`AtomShape[60], "NL" -> 
                TypeSystem`PackageScope`AtomShape[60], "Total" -> 
                TypeSystem`PackageScope`AtomShape[60]|>], 
              DirectedInfinity[1], 7, {All}]], 3, 
            DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Vector[
           
           TypeSystem`Struct[{
            "Tel", "Tion", "Vel", "Vion", "Loc", "NL", "Total"}, {
             TypeSystem`Atom[Real], 
             TypeSystem`Atom[Real], 
             TypeSystem`Atom[Real], 
             TypeSystem`Atom[Real], 
             TypeSystem`Atom[Real], 
             TypeSystem`Atom[Real], 
             TypeSystem`Atom[Real]}], 3], "Meta" -> <||>, "RowTarget" -> 20, 
         "ColumnTarget" -> 10, "Shape" -> 
         TypeSystem`PackageScope`HeaderShape[<|{All, "Tel"} -> 
            1, {All, "Tion"} -> 1, {All, "Vel"} -> 1, {All, "Vion"} -> 
            1, {All, "Loc"} -> 1, {All, "NL"} -> 1, {All, "Total"} -> 1|>, 
           TypeSystem`PackageScope`Limited[
            TypeSystem`PackageScope`ColumnShape[
             TypeSystem`PackageScope`Limited[
              
              TypeSystem`PackageScope`RowShape[<|
               "Tel" -> TypeSystem`PackageScope`AtomShape[60], "Tion" -> 
                TypeSystem`PackageScope`AtomShape[60], "Vel" -> 
                TypeSystem`PackageScope`AtomShape[60], "Vion" -> 
                TypeSystem`PackageScope`AtomShape[60], "Loc" -> 
                TypeSystem`PackageScope`AtomShape[60], "NL" -> 
                TypeSystem`PackageScope`AtomShape[60], "Total" -> 
                TypeSystem`PackageScope`AtomShape[60]|>], 
              DirectedInfinity[1], 7, {All}]], 3, 
            DirectedInfinity[1], {}]], "Type" -> TypeSystem`Vector[
           
           TypeSystem`Struct[{
            "Tel", "Tion", "Vel", "Vion", "Loc", "NL", "Total"}, {
             TypeSystem`Atom[Real], 
             TypeSystem`Atom[Real], 
             TypeSystem`Atom[Real], 
             TypeSystem`Atom[Real], 
             TypeSystem`Atom[Real], 
             TypeSystem`Atom[Real], 
             TypeSystem`Atom[Real]}], 3], "Path" -> {}, "DisplayedRowCount" -> 
         3, "DisplayedColumnCount" -> 7, "DataRowCount" -> 3, 
         "DataColumnCount" -> 7, "SortPaths" -> {}, "SortDirections" -> {}, 
         "HiddenItemsMap" -> Null, "UpdateType" -> 1|>, 
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
        DynamicModule[{
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
            Style[
             Grid[{{
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["Tel", 
                    Style[
                    "Tel", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "Tel"}, 1]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "Tel"}, "ColumnHeader", True], "Mouse"], 
                  ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["Tion", 
                    Style[
                    "Tion", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "Tion"}, 1]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "Tion"}, "ColumnHeader", True], "Mouse"], 
                  ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["Vel", 
                    Style[
                    "Vel", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "Vel"}, 1]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "Vel"}, "ColumnHeader", True], "Mouse"], 
                  ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["Vion", 
                    Style[
                    "Vion", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "Vion"}, 1]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "Vion"}, "ColumnHeader", True], "Mouse"], 
                  ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["Loc", 
                    Style[
                    "Loc", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "Loc"}, 1]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "Loc"}, "ColumnHeader", True], "Mouse"], 
                  ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["NL", 
                    Style[
                    "NL", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "NL"}, 1]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "NL"}, "ColumnHeader", True], "Mouse"], 
                  ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["Total", 
                    Style[
                    "Total", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "Total"}, 1]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "Total"}, "ColumnHeader", True], "Mouse"], 
                  ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["56809.6"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                    Key["Tel"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["9.83847"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                    Key["Tion"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["842999."], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                    Key["Vel"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["114797."], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                    Key["Vion"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["159442."], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                    Key["Loc"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["360953."], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                    Key["NL"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["1535009."], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                    Key["Total"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["56809.6"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                    Key["Tel"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["9.83847"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                    Key["Tion"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["1213050."], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                    Key["Vel"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["163435."], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                    Key["Vion"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["167162."], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                    Key["Loc"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["360426."], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                    Key["NL"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["1960892."], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                    Key["Total"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["1.0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                    Key["Tel"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["1.0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                    Key["Tion"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["1.43897"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                    Key["Vel"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["1.42369"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                    Key["Vion"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["1.04842"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                    Key["Loc"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0.99854"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                    Key["NL"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["1.27745"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                    Key["Total"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}}, 
              BaseStyle -> {
               ContextMenu -> 
                Dynamic[
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                  Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger, TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu,
                     True, TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger = 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                    TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                    Block[{TypeSystem`NestedGrid`PackagePrivate`$\
globalScrollPos = {TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                    
                    With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
                "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, 
              Dividers -> All, FrameStyle -> GrayLevel[0.7490196078431373], 
              Spacings -> {0, 0}, Alignment -> Left, 
              BaseStyle -> {
               FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
                Plain}], LineBreakWithin -> False, ContextMenu -> {}, 
             NumberMarks -> False, ShowAutoStyles -> False]], 
          TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
         Dynamic[
          TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
          TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
             Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
             
             Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
               TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
               TypeSystem`NestedGrid`PackagePrivate`datasetData[
                TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
              TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
                 FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
                 TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                 TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                 TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
                Not[
                 FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
                TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
                TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
           TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
           TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
           TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
             TypeSystem`SparseGrid[
              TypeSystem`H["(data no longer present)"]], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
          TrackedSymbols :> {
           TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
         DynamicModuleValues :> {}], 
        TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
         TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
          TypeSystem`PackageScope`SubViewPathbar[
          TypeSystem`NestedGrid`PackagePrivate`$path$$, 
           TypeSystem`NestedGrid`PackagePrivate`updateState[
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
            TypeSystem`NestedGrid`PackagePrivate`$path$$, 
            TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
            TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
         TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
        TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
         Framed[
          Dynamic[
           Replace[
           TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
            TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               TypeSystem`NestedGrid`PackagePrivate`localHold[
               TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
               Blank[]] -> "", 
             TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               TypeSystem`NestedGrid`PackagePrivate`localHold[
               TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
               Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
                Blank[]], 
               Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
                Blank[]], 
               Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                Blank[]]] :> (
              Increment[
               TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
              TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
               TypeSystem`NestedGrid`PackagePrivate`path$; 
              TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
               TypeSystem`NestedGrid`PackagePrivate`pathType$; 
              TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
               TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
              TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
               TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
              TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
               TypeSystem`NestedGrid`PackagePrivate`path$, 
                TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
             Spacer[10], Blank[] :> Spacer[10]}], 
           TrackedSymbols :> {
            TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], 
          FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
          Top, ImageSize -> {Automatic, 15}], FontSize -> 1], 
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
        DynamicWrapperBox[
         DynamicBox[ToBoxes[
           Dataset`DatasetContent[
           2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
            "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], 
            "State" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], 
            "VPos" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], 
            "HPos" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], 
            "TopBar" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], 
            "BottomBar" -> 
            Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], 
            "OutputID" -> Hold[
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], 
           StandardForm],
          ImageSizeCache->{478., {60.8544921875, 66.1455078125}},
          
          TrackedSymbols:>{
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
            TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
         TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
         MouseAnnotation[],
         ImageSizeCache->{478., {60.8544921875, 66.1455078125}}],
        BaseStyle->{LineBreakWithin -> False},
        DynamicModuleValues:>{},
        Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
         CreateUUID[]),
        UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
       
       Deploy,
       DefaultBaseStyle->"Deploy"],
      Dataset`InterpretDataset[1],
      Editable->False,
      SelectWithContents->True,
      Selectable->False]}], "}"}]}],
  SequenceForm["Rescaling Factors:", {
    Dataset[{<|"Ion" -> Row[{"Cu1", 
          Style["Cu1", 
           GrayLevel[0.5]]}, "\n"], "Tel" -> Row[{178.64646646273764`, 
          Style[178.64646646273764`, 
           GrayLevel[0.5]]}, "\n"], "Tion" -> Row[{2926.804354179773, 
          Style[2926.804354179773, 
           GrayLevel[0.5]]}, "\n"], "Vel" -> Row[{8.36258273018963, 
          Style[12.03351035584406, 
           GrayLevel[0.5]]}, "\n"], "Vion" -> Row[{1.145859988366388, 
          Style[1.6313442970235776`, 
           GrayLevel[0.5]]}, "\n"], "Loc" -> Row[{1.2993425493820236`, 
          Style[1.3756630358670094`, 
           GrayLevel[0.5]]}, "\n"], "NL" -> Row[{2.935772471386912, 
          Style[2.9220853552974404`, 
           GrayLevel[0.5]]}, "\n"]|>, <|"Ion" -> Row[{"Cu11", 
          Style["Cu11", 
           GrayLevel[0.5]]}, "\n"], "Tel" -> Row[{178.64646646273764`, 
          Style[178.64646646273764`, 
           GrayLevel[0.5]]}, "\n"], "Tion" -> Row[{2926.804354179773, 
          Style[2926.804354179773, 
           GrayLevel[0.5]]}, "\n"], "Vel" -> Row[{8.36258273018963, 
          Style[12.03351035584406, 
           GrayLevel[0.5]]}, "\n"], "Vion" -> Row[{1.145859988366388, 
          Style[1.6313442970235776`, 
           GrayLevel[0.5]]}, "\n"], "Loc" -> Row[{15.720264659812544`, 
          Style[16.559868243078338`, 
           GrayLevel[0.5]]}, "\n"], "NL" -> Row[{73.97511547860404, 
          Style[74.28935110495614, 
           GrayLevel[0.5]]}, "\n"]|>, <|"Ion" -> Row[{"C4", 
          Style["C4", 
           GrayLevel[0.5]]}, "\n"], "Tel" -> Row[{178.64646646273764`, 
          Style[178.64646646273764`, 
           GrayLevel[0.5]]}, "\n"], "Tion" -> Row[{2926.804354179773, 
          Style[2926.804354179773, 
           GrayLevel[0.5]]}, "\n"], "Vel" -> Row[{8.36258273018963, 
          Style[12.03351035584406, 
           GrayLevel[0.5]]}, "\n"], "Vion" -> Row[{1.145859988366388, 
          Style[1.6313442970235776`, 
           GrayLevel[0.5]]}, "\n"], "Loc" -> Row[{17.357578541927964`, 
          Style[17.66303638202409, 
           GrayLevel[0.5]]}, "\n"], "NL" -> Row[{9.522178917901396, 
          Style[9.52284200000024, 
           GrayLevel[0.5]]}, "\n"]|>, <|"Ion" -> Row[{"O6", 
          Style["O6", 
           GrayLevel[0.5]]}, "\n"], "Tel" -> Row[{178.64646646273764`, 
          Style[178.64646646273764`, 
           GrayLevel[0.5]]}, "\n"], "Tion" -> Row[{2926.804354179773, 
          Style[2926.804354179773, 
           GrayLevel[0.5]]}, "\n"], "Vel" -> Row[{8.36258273018963, 
          Style[12.03351035584406, 
           GrayLevel[0.5]]}, "\n"], "Vion" -> Row[{1.145859988366388, 
          Style[1.6313442970235776`, 
           GrayLevel[0.5]]}, "\n"], "Loc" -> Row[{35.45513810697978, 
          Style[35.913522230728375`, 
           GrayLevel[0.5]]}, "\n"], "NL" -> Row[{18.20482116696748, 
          Style[18.266917000000458`, 
           GrayLevel[0.5]]}, "\n"]|>, <|"Ion" -> Row[{"H1", 
          Style["H1", 
           GrayLevel[0.5]]}, "\n"], "Tel" -> Row[{178.64646646273764`, 
          Style[178.64646646273764`, 
           GrayLevel[0.5]]}, "\n"], "Tion" -> Row[{2926.804354179773, 
          Style[2926.804354179773, 
           GrayLevel[0.5]]}, "\n"], "Vel" -> Row[{8.36258273018963, 
          Style[12.03351035584406, 
           GrayLevel[0.5]]}, "\n"], "Vion" -> Row[{1.145859988366388, 
          Style[1.6313442970235776`, 
           GrayLevel[0.5]]}, "\n"], "Loc" -> Row[{8.090776375440088, 
          Style[8.169659804014326, 
           GrayLevel[0.5]]}, "\n"], "NL" -> Row[{0., 
          Style[0., 
           GrayLevel[0.5]]}, "\n"]|>}, 
     TypeSystem`Vector[
      TypeSystem`Struct[{"Ion", "Tel", "Tion", "Vel", "Vion", "Loc", "NL"}, {
       TypeSystem`AnyType, TypeSystem`AnyType, TypeSystem`AnyType, 
        TypeSystem`AnyType, TypeSystem`AnyType, TypeSystem`AnyType, 
        TypeSystem`AnyType}], 5], <||>], 
    Dataset[{<|
      "Tel" -> 56809.57633515057, "Tion" -> 9.83847306827717, "Vel" -> 
       842998.5146994957, "Vion" -> 114796.83707449822`, "Loc" -> 
       159441.91041860756`, "NL" -> 360952.78601481864`, "Total" -> 
       1.535009463015639*^6|>, <|
      "Tel" -> 56809.57633515057, "Tion" -> 9.83847306827717, "Vel" -> 
       1.213050044931217*^6, "Vion" -> 163434.5970530101, "Loc" -> 
       167161.84697447327`, "NL" -> 360425.7612561042, "Total" -> 
       1.960891665023021*^6|>, <|
      "Tel" -> 1., "Tion" -> 1., "Vel" -> 1.4389705601837663`, "Vion" -> 
       1.4236855406299047`, "Loc" -> 1.0484184900669928`, "NL" -> 
       0.9985399066605548, "Total" -> 1.277445978196582|>}, 
     TypeSystem`Vector[
      TypeSystem`Struct[{"Tel", "Tion", "Vel", "Vion", "Loc", "NL", "Total"}, {
        TypeSystem`Atom[Real], 
        TypeSystem`Atom[Real], 
        TypeSystem`Atom[Real], 
        TypeSystem`Atom[Real], 
        TypeSystem`Atom[Real], 
        TypeSystem`Atom[Real], 
        TypeSystem`Atom[Real]}], 3], <||>]}],
  Editable->False]], "Print",
 CellChangeTimes->{3.962712383863021*^9, 3.962993319873117*^9},
 CellLabel->
  "During evaluation of \
In[65]:=",ExpressionUUID->"864bb61b-9a39-4d92-b1ab-3105bf49368e"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Compilation Cost:\"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "56576", ",", "9076", ",", "14888", ",", "1498", ",", "179087"}], "}"}],
      ",", "261125"}], "}"}]}],
  SequenceForm[
  "Compilation Cost:", {{56576, 9076, 14888, 1498, 179087}, 261125}],
  Editable->False]], "Print",
 CellChangeTimes->{3.962712383863021*^9, 3.9629933200767097`*^9},
 CellLabel->
  "During evaluation of \
In[65]:=",ExpressionUUID->"052ddf96-4f01-416a-9c45-088ed7ea94a7"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Qubit Cost:\"\>", "\[InvisibleSpace]", "13563"}],
  SequenceForm["Qubit Cost:", 13563],
  Editable->False]], "Print",
 CellChangeTimes->{3.962712383863021*^9, 3.962993320088224*^9},
 CellLabel->
  "During evaluation of \
In[65]:=",ExpressionUUID->"f390c007-aeab-4f25-9585-ab38ef11de55"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Time Evolution Cost:\"\>", "\[InvisibleSpace]", 
   TagBox[
    TagBox[
     DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
      "InitialData" -> <|
        "exact" -> <|
          "query" -> 2 + 
            Ceiling[2.086294164914044*^6 $CellContext`t + 
              Log[2.9552401942122875`/$CellContext`\[Epsilon]]], 
           "compilation" -> ScientificForm[261125., 5], "total" -> 
           261125 (2 + 
             Ceiling[2.086294164914044*^6 $CellContext`t + 
               Log[2.9552401942122875`/$CellContext`\[Epsilon]]])|>, 
         "bound" -> <|
          "query" -> 2 + 
            Ceiling[2.6651280903044418`*^6 $CellContext`t + 
              Log[2.9552401942122875`/$CellContext`\[Epsilon]]], 
           "compilation" -> ScientificForm[261125., 5], "total" -> 
           261125 (2 + 
             Ceiling[2.6651280903044418`*^6 $CellContext`t + 
               Log[2.9552401942122875`/$CellContext`\[Epsilon]]])|>|>, 
       "AllowEmbedding" -> True, "InitialShape" -> 
       TypeSystem`PackageScope`HeaderShape[<|{All, 
            TypeSystem`PackageScope`KeyDummy[6]} -> 1, {All, "query"} -> 
          1, {All, "compilation"} -> 1, {All, "total"} -> 1|>, 
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`ColumnShape[
           TypeSystem`PackageScope`KeyValueShape[
            TypeSystem`PackageScope`AtomShape[56.00000000000001], 
            TypeSystem`PackageScope`Limited[
             
             TypeSystem`PackageScope`RowShape[<|
              "query" -> TypeSystem`PackageScope`UnknownShape[False], 
               "compilation" -> TypeSystem`PackageScope`UnknownShape[False], 
               "total" -> TypeSystem`PackageScope`UnknownShape[False]|>], 
             DirectedInfinity[1], 3, {All}]]], 2, 
          DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Assoc[
         TypeSystem`Atom[String], 
         TypeSystem`Struct[{"query", "compilation", "total"}, {
          TypeSystem`AnyType, TypeSystem`AnyType, TypeSystem`AnyType}], 2], 
       "Meta" -> <||>, "RowTarget" -> 20, "ColumnTarget" -> 10, "Shape" -> 
       TypeSystem`PackageScope`HeaderShape[<|{All, 
            TypeSystem`PackageScope`KeyDummy[6]} -> 1, {All, "query"} -> 
          1, {All, "compilation"} -> 1, {All, "total"} -> 1|>, 
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`ColumnShape[
           TypeSystem`PackageScope`KeyValueShape[
            TypeSystem`PackageScope`AtomShape[56.00000000000001], 
            TypeSystem`PackageScope`Limited[
             
             TypeSystem`PackageScope`RowShape[<|
              "query" -> TypeSystem`PackageScope`UnknownShape[False], 
               "compilation" -> TypeSystem`PackageScope`UnknownShape[False], 
               "total" -> TypeSystem`PackageScope`UnknownShape[False]|>], 
             DirectedInfinity[1], 3, {All}]]], 2, 
          DirectedInfinity[1], {}]], "Type" -> TypeSystem`Assoc[
         TypeSystem`Atom[String], 
         TypeSystem`Struct[{"query", "compilation", "total"}, {
          TypeSystem`AnyType, TypeSystem`AnyType, TypeSystem`AnyType}], 2], 
       "Path" -> {}, "DisplayedRowCount" -> 2, "DisplayedColumnCount" -> 3, 
       "DataRowCount" -> 2, "DataColumnCount" -> 3, "SortPaths" -> {}, 
       "SortDirections" -> {}, "HiddenItemsMap" -> Null, "UpdateType" -> 1|>, 
      TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
      TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
      TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
      TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
      TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
      DynamicModule[{
       TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
          Style[
           Grid[{{
              Item[
               Pane[
                Annotation[
                 Mouseover[
                  
                  Graphics[{}, ImageSize -> 6, BaselinePosition -> 
                   Scaled[-0.15]], 
                  Graphics[{
                    GrayLevel[0.6], 
                    
                    Polygon[{{2^Rational[-1, 2], -2^Rational[-1, 2]}, {
                    2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], -2^
                    Rational[-1, 2]}}]}, ImageSize -> 6, BaselinePosition -> 
                   Scaled[-0.15]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                  All, Keys}, "KeyDummy", True], "Mouse"], 
                ImageSize -> {{1, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
               GrayLevel[0.95], Alignment -> {Left, Baseline}], 
              Item[
               Pane[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["query", 
                    Style[
                    "query", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "query"}, 1]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                  All, "query"}, "ColumnHeader", True], "Mouse"], 
                ImageSize -> {{1, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
               GrayLevel[0.95], Alignment -> {Left, Baseline}], 
              Item[
               Pane[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["compilation", 
                    Style[
                    "compilation", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "compilation"}, 1]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                  All, "compilation"}, "ColumnHeader", True], "Mouse"], 
                ImageSize -> {{1, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
               GrayLevel[0.95], Alignment -> {Left, Baseline}], 
              Item[
               Pane[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["total", 
                    Style[
                    "total", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "total"}, 1]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                  All, "total"}, "ColumnHeader", True], "Mouse"], 
                ImageSize -> {{1, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
               GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
              Item[
               Pane[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["exact", 
                    Style[
                    "exact", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["exact"]}, 1]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["exact"]}, "RowHeader", False], "Mouse"], 
                ImageSize -> {{56.00000000000001, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
               GrayLevel[0.95], Alignment -> {Left, Baseline}], 
              Item[
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   RowBox[{"2", "+", 
                    RowBox[{"Ceiling", "[", 
                    RowBox[{
                    RowBox[{"2.086294164914044`*^6", " ", "t"}], "+", 
                    RowBox[{"Log", "[", 
                    FractionBox["2.9552401942122875`", "\[Epsilon]"], "]"}]}],
                     "]"}]}], FontFamily -> Dynamic[
                    CurrentValue[{"StyleHints", "CodeFont"}]], 
                   ShowStringCharacters -> True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["exact"], 
                   Key["query"]}, "Item", False], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}], 
              Item[
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   TagBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"\"2.6113\"", "\[Times]", 
                    SuperscriptBox["10", "\"5\""]}], ShowStringCharacters -> 
                    False], 261125., AutoDelete -> True], 
                    ScientificForm[#, 5]& ], FontFamily -> Dynamic[
                    CurrentValue[{"StyleHints", "CodeFont"}]], 
                   ShowStringCharacters -> True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["exact"], 
                   Key["compilation"]}, "Item", False], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}], 
              Item[
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   RowBox[{"261125", " ", 
                    RowBox[{"(", 
                    RowBox[{"2", "+", 
                    RowBox[{"Ceiling", "[", 
                    RowBox[{
                    RowBox[{"2.086294164914044`*^6", " ", "t"}], "+", 
                    RowBox[{"Log", "[", 
                    FractionBox["2.9552401942122875`", "\[Epsilon]"], "]"}]}],
                     "]"}]}], ")"}]}], FontFamily -> Dynamic[
                    CurrentValue[{"StyleHints", "CodeFont"}]], 
                   ShowStringCharacters -> True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["exact"], 
                   Key["total"]}, "Item", False], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}]}, {
              Item[
               Pane[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["bound", 
                    Style[
                    "bound", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["bound"]}, 1]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["bound"]}, "RowHeader", False], "Mouse"], 
                ImageSize -> {{56.00000000000001, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
               GrayLevel[0.95], Alignment -> {Left, Baseline}], 
              Item[
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   RowBox[{"2", "+", 
                    RowBox[{"Ceiling", "[", 
                    RowBox[{
                    RowBox[{"2.6651280903044418`*^6", " ", "t"}], "+", 
                    RowBox[{"Log", "[", 
                    FractionBox["2.9552401942122875`", "\[Epsilon]"], "]"}]}],
                     "]"}]}], FontFamily -> Dynamic[
                    CurrentValue[{"StyleHints", "CodeFont"}]], 
                   ShowStringCharacters -> True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["bound"], 
                   Key["query"]}, "Item", False], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}], 
              Item[
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   TagBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"\"2.6113\"", "\[Times]", 
                    SuperscriptBox["10", "\"5\""]}], ShowStringCharacters -> 
                    False], 261125., AutoDelete -> True], 
                    ScientificForm[#, 5]& ], FontFamily -> Dynamic[
                    CurrentValue[{"StyleHints", "CodeFont"}]], 
                   ShowStringCharacters -> True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["bound"], 
                   Key["compilation"]}, "Item", False], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}], 
              Item[
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   RowBox[{"261125", " ", 
                    RowBox[{"(", 
                    RowBox[{"2", "+", 
                    RowBox[{"Ceiling", "[", 
                    RowBox[{
                    RowBox[{"2.6651280903044418`*^6", " ", "t"}], "+", 
                    RowBox[{"Log", "[", 
                    FractionBox["2.9552401942122875`", "\[Epsilon]"], "]"}]}],
                     "]"}]}], ")"}]}], FontFamily -> Dynamic[
                    CurrentValue[{"StyleHints", "CodeFont"}]], 
                   ShowStringCharacters -> True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["bound"], 
                   Key["total"]}, "Item", False], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}]}}, 
            BaseStyle -> {
             ContextMenu -> 
              Dynamic[TypeSystem`NestedGrid`PackagePrivate`$\
contextMenuTrigger; 
                Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                  TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                  TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger, TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu,
                   True, TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger = 
                   TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                  TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                   Block[{TypeSystem`NestedGrid`PackagePrivate`$\
globalScrollPos = {TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                    
                    With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
              "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, 
            Dividers -> All, FrameStyle -> GrayLevel[0.7490196078431373], 
            Spacings -> {0, 0}, Alignment -> Left, 
            BaseStyle -> {
             FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
              Plain}], LineBreakWithin -> False, ContextMenu -> {}, 
           NumberMarks -> False, ShowAutoStyles -> False]], 
        TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
       Dynamic[
        TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
        TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
           Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
           
           Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
             TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
             TypeSystem`NestedGrid`PackagePrivate`datasetData[
              TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
               FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
               TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
               TypeSystem`NestedGrid`PackagePrivate`renderGrid[
               TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
               TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
              Not[
               FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
              TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
              TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
         TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
         TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
         TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
           FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
           TypeSystem`SparseGrid[
            TypeSystem`H["(data no longer present)"]], 
           TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
        TrackedSymbols :> {
         TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
          TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
       DynamicModuleValues :> {}], 
      TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
       TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
        TypeSystem`PackageScope`SubViewPathbar[
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
         TypeSystem`NestedGrid`PackagePrivate`updateState[
         TypeSystem`NestedGrid`PackagePrivate`$state$$, 
          TypeSystem`NestedGrid`PackagePrivate`$path$$, 
          TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
          TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
       TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
      TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
       Framed[
        Dynamic[
         Replace[
         TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
          TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
             TypeSystem`NestedGrid`PackagePrivate`localHold[
             TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
             Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
             TypeSystem`NestedGrid`PackagePrivate`localHold[
             TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
              Blank[]], 
             Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
              Blank[]], 
             Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
              Blank[]]] :> (
            Increment[
             TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
            TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
             TypeSystem`NestedGrid`PackagePrivate`path$; 
            TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
             TypeSystem`NestedGrid`PackagePrivate`pathType$; 
            TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
             TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
            TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
             TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
            TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
             TypeSystem`NestedGrid`PackagePrivate`path$, 
              TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
           Spacer[10], Blank[] :> Spacer[10]}], 
         TrackedSymbols :> {
          TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], 
        FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
        Top, ImageSize -> {Automatic, 15}], FontSize -> 1], 
      TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
      TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
      "8d519cc1-0f23-46b7-8901-65f2e4ef3efb"][{
        Key["exact"], 
        Key["query"]}, "Item", False]}, 
      DynamicWrapperBox[
       DynamicBox[ToBoxes[
         Dataset`DatasetContent[
         2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
          "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], 
          "State" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], 
          "VPos" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], 
          "HPos" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], 
          "TopBar" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], 
          "BottomBar" -> 
          Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
          Hold[
            TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
        ImageSizeCache->{869., {51.3544921875, 56.6455078125}},
        TrackedSymbols:>{
         TypeSystem`NestedGrid`PackagePrivate`$state$$, 
          TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
       MouseAnnotation[],
       ImageSizeCache->{869., {51.3544921875, 56.6455078125}}],
      BaseStyle->{LineBreakWithin -> False},
      DynamicModuleValues:>{},
      Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
       CreateUUID[]),
      UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
     Deploy,
     DefaultBaseStyle->"Deploy"],
    Dataset`InterpretDataset[1],
    Editable->False,
    SelectWithContents->True,
    Selectable->False]}],
  SequenceForm["Time Evolution Cost:", 
   Dataset[<|
    "exact" -> <|
      "query" -> 2 + 
        Ceiling[2.086294164914044*^6 $CellContext`t + 
          Log[2.9552401942122875`/$CellContext`\[Epsilon]]], "compilation" -> 
       ScientificForm[261125., 5], "total" -> 
       261125 (2 + 
         Ceiling[2.086294164914044*^6 $CellContext`t + 
           Log[2.9552401942122875`/$CellContext`\[Epsilon]]])|>, 
     "bound" -> <|
      "query" -> 2 + 
        Ceiling[2.6651280903044418`*^6 $CellContext`t + 
          Log[2.9552401942122875`/$CellContext`\[Epsilon]]], "compilation" -> 
       ScientificForm[261125., 5], "total" -> 
       261125 (2 + 
         Ceiling[2.6651280903044418`*^6 $CellContext`t + 
           Log[2.9552401942122875`/$CellContext`\[Epsilon]]])|>|>, 
    TypeSystem`Assoc[
     TypeSystem`Atom[String], 
     TypeSystem`Struct[{"query", "compilation", "total"}, {
      TypeSystem`AnyType, TypeSystem`AnyType, TypeSystem`AnyType}], 2], <||>]],
  Editable->False]], "Print",
 CellChangeTimes->{3.962712383863021*^9, 3.9629933200972223`*^9},
 CellLabel->
  "During evaluation of \
In[65]:=",ExpressionUUID->"efbfdb64-3996-4db1-ae13-444974b3944c"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Part 4: Data Analysis and Visualization of Instance Results", "Section",
 CellChangeTimes->{{3.962644781298802*^9, 3.962644785627905*^9}, {
   3.962712397120653*^9, 3.962712455775867*^9}, {3.962712517638339*^9, 
   3.962712518954318*^9}, {3.962714230333821*^9, 3.962714250091754*^9}, {
   3.962722774497026*^9, 3.962722774661989*^9}, {3.96332318944163*^9, 
   3.963323191173397*^9}, 
   3.963408476492545*^9},ExpressionUUID->"9ef7873f-0b3d-4333-82ec-\
f77988d176b5"],

Cell["\<\
After computing the QRE for all the instances, we are now ready to visualize \
all the costs together!\
\>", "Text",
 CellChangeTimes->{{3.96340849353083*^9, 
  3.9634085176920547`*^9}},ExpressionUUID->"0255f73b-d797-4716-ade8-\
3c5ba342aa04"],

Cell["\<\
If you have execute all the previous code, you should have obtained a \
collection of .mx files storing all the QRE results in the local directory. \
You can uncomment the code below to easily retrieve them if needed.\
\>", "Text",
 CellChangeTimes->{{3.963408479408812*^9, 3.963408482734493*^9}, {
  3.963408553422248*^9, 
  3.9634086578898077`*^9}},ExpressionUUID->"814c1671-1362-4619-a46e-\
cf26edf22e4c"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "Load", " ", "data", " ", "from", " ", "QRE", " ", "runs", " ", "above", 
    " ", "if", " ", "not", " ", "in", " ", "kernel", " ", "already"}], " ", 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Get", "[", 
     RowBox[{"FileNameJoin", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"NotebookDirectory", "[", "]"}], ",", 
        "\"\<Instance1Result.mx\>\""}], "}"}], "]"}], "]"}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"Get", "[", 
     RowBox[{"FileNameJoin", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"NotebookDirectory", "[", "]"}], ",", 
        "\"\<Instance2Result.mx\>\""}], "}"}], "]"}], "]"}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"Get", "[", 
     RowBox[{"FileNameJoin", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"NotebookDirectory", "[", "]"}], ",", 
        "\"\<InstanceDMTMClass3Result.mx\>\""}], "}"}], "]"}], "]"}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"Get", "[", 
     RowBox[{"FileNameJoin", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"NotebookDirectory", "[", "]"}], ",", 
        "\"\<InstanceDMTMClass5Result.mx\>\""}], "}"}], "]"}], "]"}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"Get", "[", 
     RowBox[{"FileNameJoin", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"NotebookDirectory", "[", "]"}], ",", 
        "\"\<InstanceDMTMClass9Result.mx\>\""}], "}"}], "]"}], "]"}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"Get", "[", 
     RowBox[{"FileNameJoin", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"NotebookDirectory", "[", "]"}], ",", 
        "\"\<InstanceWGSClass3Result.mx\>\""}], "}"}], "]"}], "]"}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"Get", "[", 
     RowBox[{"FileNameJoin", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"NotebookDirectory", "[", "]"}], ",", 
        "\"\<InstanceWGSClass5Result.mx\>\""}], "}"}], "]"}], "]"}], ";"}], 
   "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Get", "[", 
     RowBox[{"FileNameJoin", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"NotebookDirectory", "[", "]"}], ",", 
        "\"\<Instance1Basis.mx\>\""}], "}"}], "]"}], "]"}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"Get", "[", 
     RowBox[{"FileNameJoin", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"NotebookDirectory", "[", "]"}], ",", 
        "\"\<Instance2Basis.mx\>\""}], "}"}], "]"}], "]"}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"Get", "[", 
     RowBox[{"FileNameJoin", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"NotebookDirectory", "[", "]"}], ",", 
        "\"\<InstanceBasisDMTMClass3.mx\>\""}], "}"}], "]"}], "]"}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"Get", "[", 
     RowBox[{"FileNameJoin", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"NotebookDirectory", "[", "]"}], ",", 
        "\"\<InstanceBasisDMTMClass5.mx\>\""}], "}"}], "]"}], "]"}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"Get", "[", 
     RowBox[{"FileNameJoin", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"NotebookDirectory", "[", "]"}], ",", 
        "\"\<InstanceBasisDMTMClass9.mx\>\""}], "}"}], "]"}], "]"}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"Get", "[", 
     RowBox[{"FileNameJoin", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"NotebookDirectory", "[", "]"}], ",", 
        "\"\<InstanceBasisWGSClass3.mx\>\""}], "}"}], "]"}], "]"}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"Get", "[", 
     RowBox[{"FileNameJoin", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"NotebookDirectory", "[", "]"}], ",", 
        "\"\<InstanceBasisWGSClass5.mx\>\""}], "}"}], "]"}], "]"}], ";"}], 
   "*)"}]}]], "Input",
 CellChangeTimes->{{3.962714058051449*^9, 3.9627140904262114`*^9}, {
   3.962714152482304*^9, 3.962714198534013*^9}, 3.962722591143303*^9, {
   3.96272265020111*^9, 3.962722708671383*^9}, {3.96272274051001*^9, 
   3.9627227900289717`*^9}, {3.962723008374419*^9, 3.962723075833021*^9}, {
   3.9627231100830708`*^9, 3.962723139720417*^9}, {3.9627336567644672`*^9, 
   3.962733664535053*^9}, {3.962804425471507*^9, 3.962804452336082*^9}, 
   3.962808546839683*^9},ExpressionUUID->"9deeecc7-be3d-4e0a-baa0-\
3dc5ea8e4f4c"],

Cell[CellGroupData[{

Cell["\<\
Figure 6 : Normalized Distribution of Rescaling Factors for Each Problem \
Instance\
\>", "Subsection",
 CellChangeTimes->{{3.962714058051449*^9, 3.9627140904262114`*^9}, {
  3.963068920289811*^9, 
  3.963068949239204*^9}},ExpressionUUID->"775f5d05-de36-4525-aab0-\
9d46622b7067"],

Cell["\<\
We first plot the rescaling factors for different chemical instances across \
all terms in the corresponding Hamiltonians.\
\>", "Text",
 CellChangeTimes->{{3.96340891429467*^9, 
  3.96340896611087*^9}},ExpressionUUID->"b2a3d3d8-77a5-489d-a71e-\
0dc1ac4f692d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "Get", " ", "scaling", " ", "factor", " ", "data", " ", "from", " ", "all",
     " ", "instance", " ", "results", " ", "we", " ", "computed", " ", 
    "before"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"dataNH3BF3", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"Instance1Result", "[", "\"\<exact\>\"", "]"}], "[", 
        "\"\<\[Lambda]TermExact\>\"", "]"}], ",", 
       RowBox[{
        RowBox[{"Instance1Result", "[", "\"\<bound\>\"", "]"}], "[", 
        "\"\<\[Lambda]TermBound\>\"", "]"}]}], "}"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"dataDMTMSmall", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"Instance2Result", "[", "\"\<exact\>\"", "]"}], "[", 
        "\"\<\[Lambda]TermExact\>\"", "]"}], ",", 
       RowBox[{
        RowBox[{"Instance2Result", "[", "\"\<bound\>\"", "]"}], "[", 
        "\"\<\[Lambda]TermBound\>\"", "]"}]}], "}"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"dataDMTM3", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"InstanceDMTMClass3Result", "[", "\"\<exact\>\"", "]"}], "[", 
        "\"\<\[Lambda]TermExact\>\"", "]"}], ",", 
       RowBox[{
        RowBox[{"InstanceDMTMClass3Result", "[", "\"\<bound\>\"", "]"}], "[", 
        "\"\<\[Lambda]TermBound\>\"", "]"}]}], "}"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"dataDMTM5", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"InstanceDMTMClass5Result", "[", "\"\<exact\>\"", "]"}], "[", 
        "\"\<\[Lambda]TermExact\>\"", "]"}], ",", 
       RowBox[{
        RowBox[{"InstanceDMTMClass5Result", "[", "\"\<bound\>\"", "]"}], "[", 
        "\"\<\[Lambda]TermBound\>\"", "]"}]}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"dataDMTM9", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"InstanceDMTMClass9Result", "[", "\"\<exact\>\"", "]"}], "[", 
        "\"\<\[Lambda]TermExact\>\"", "]"}], ",", 
       RowBox[{
        RowBox[{"InstanceDMTMClass9Result", "[", "\"\<bound\>\"", "]"}], "[", 
        "\"\<\[Lambda]TermBound\>\"", "]"}]}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"dataWGS3", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"InstanceWGSClass3Result", "[", "\"\<exact\>\"", "]"}], "[", 
        "\"\<\[Lambda]TermExact\>\"", "]"}], ",", 
       RowBox[{
        RowBox[{"InstanceWGSClass3Result", "[", "\"\<bound\>\"", "]"}], "[", 
        "\"\<\[Lambda]TermBound\>\"", "]"}]}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"dataWGS5", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"InstanceWGSClass5Result", "[", "\"\<exact\>\"", "]"}], "[", 
        "\"\<\[Lambda]TermExact\>\"", "]"}], ",", 
       RowBox[{
        RowBox[{"InstanceWGSClass5Result", "[", "\"\<bound\>\"", "]"}], "[", 
        "\"\<\[Lambda]TermBound\>\"", "]"}]}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"allTermData", "=", 
     RowBox[{"{", 
      RowBox[{
      "dataNH3BF3", ",", "dataDMTMSmall", ",", "dataDMTM3", ",", "dataDMTM5", 
       ",", "dataDMTM9", ",", "dataWGS3", ",", "dataWGS5"}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"exactTermData", "=", 
     RowBox[{"First", "/@", "allTermData"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"totalExactData", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"Instance1Result", "[", "\"\<exact\>\"", "]"}], "[", 
        "\"\<\[Lambda]Exact\>\"", "]"}], ",", 
       RowBox[{
        RowBox[{"Instance2Result", "[", "\"\<exact\>\"", "]"}], "[", 
        "\"\<\[Lambda]Exact\>\"", "]"}], ",", 
       RowBox[{
        RowBox[{"InstanceDMTMClass3Result", "[", "\"\<exact\>\"", "]"}], "[", 
        "\"\<\[Lambda]Exact\>\"", "]"}], ",", 
       RowBox[{
        RowBox[{"InstanceDMTMClass5Result", "[", "\"\<exact\>\"", "]"}], "[", 
        "\"\<\[Lambda]Exact\>\"", "]"}], ",", 
       RowBox[{
        RowBox[{"InstanceDMTMClass9Result", "[", "\"\<exact\>\"", "]"}], "[", 
        "\"\<\[Lambda]Exact\>\"", "]"}], ",", 
       RowBox[{
        RowBox[{"InstanceWGSClass3Result", "[", "\"\<exact\>\"", "]"}], "[", 
        "\"\<\[Lambda]Exact\>\"", "]"}], ",", 
       RowBox[{
        RowBox[{"InstanceWGSClass5Result", "[", "\"\<exact\>\"", "]"}], "[", 
        "\"\<\[Lambda]Exact\>\"", "]"}]}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
    "Check", " ", "total", " ", "rescaling", " ", "from", " ", "term", " ", 
     "based", " ", "rescaling", " ", "are", " ", "all", " ", "correct"}], " ",
     "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"checkSum", "=", 
     RowBox[{"(", 
      RowBox[{"Total", "/@", 
       RowBox[{"Values", "/@", "exactTermData"}]}], ")"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"totalExactData", "==", "checkSum"}], "\n", "\[IndentingNewLine]", 
   
   RowBox[{"(*", " ", 
    RowBox[{"Create", " ", "figure"}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{"rescalingFactorDistBarChart", "=", 
    RowBox[{"BarChart", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"Normalize", "[", 
         RowBox[{"#", ",", "Total"}], "]"}], "&"}], "/@", 
       RowBox[{"Values", "/@", "exactTermData"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"ChartLayout", "->", "\"\<Stacked\>\""}], ",", 
      RowBox[{"Axes", "->", "False"}], ",", 
      RowBox[{"Frame", "->", "True"}], ",", 
      RowBox[{
      "PlotLabel", "->", "\"\<Rescaling Factor Normalized Distribution\>\""}],
       ",", "\[IndentingNewLine]", 
      RowBox[{"ChartLegends", "->", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Style", "[", 
          RowBox[{
           RowBox[{"Subscript", "[", 
            RowBox[{"\"\<\[Lambda]\>\"", ",", 
             RowBox[{"Subscript", "[", 
              RowBox[{"\"\<T\>\"", ",", "\"\<el\>\""}], "]"}]}], "]"}], ",", 
           "14", ",", 
           RowBox[{"FontFamily", "->", "\"\<Times\>\""}]}], "]"}], ",", 
         RowBox[{"Style", "[", 
          RowBox[{
           RowBox[{"Subscript", "[", 
            RowBox[{"\"\<\[Lambda]\>\"", ",", 
             RowBox[{"Subscript", "[", 
              RowBox[{"\"\<T\>\"", ",", "\"\<ion\>\""}], "]"}]}], "]"}], ",", 
           "14", ",", 
           RowBox[{"FontFamily", "->", "\"\<Times\>\""}]}], "]"}], ",", 
         RowBox[{"Style", "[", 
          RowBox[{
           RowBox[{"Subscript", "[", 
            RowBox[{"\"\<\[Lambda]\>\"", ",", 
             RowBox[{"Subscript", "[", 
              RowBox[{"\"\<V\>\"", ",", "\"\<el\>\""}], "]"}]}], "]"}], ",", 
           "14", ",", 
           RowBox[{"FontFamily", "->", "\"\<Times\>\""}]}], "]"}], ",", 
         RowBox[{"Style", "[", 
          RowBox[{
           RowBox[{"Subscript", "[", 
            RowBox[{"\"\<\[Lambda]\>\"", ",", 
             RowBox[{"Subscript", "[", 
              RowBox[{"\"\<V\>\"", ",", "\"\<ion\>\""}], "]"}]}], "]"}], ",", 
           "14", ",", 
           RowBox[{"FontFamily", "->", "\"\<Times\>\""}]}], "]"}], ",", 
         RowBox[{"Style", "[", 
          RowBox[{
           RowBox[{"Subscript", "[", 
            RowBox[{"\"\<\[Lambda]\>\"", ",", 
             RowBox[{"Subscript", "[", 
              RowBox[{"\"\<V\>\"", ",", "\"\<loc\>\""}], "]"}]}], "]"}], ",", 
           "14", ",", 
           RowBox[{"FontFamily", "->", "\"\<Times\>\""}]}], "]"}], ",", 
         RowBox[{"Style", "[", 
          RowBox[{
           RowBox[{"Subscript", "[", 
            RowBox[{"\"\<\[Lambda]\>\"", ",", 
             RowBox[{"Subscript", "[", 
              RowBox[{"\"\<V\>\"", ",", "\"\<NL\>\""}], "]"}]}], "]"}], ",", 
           "14", ",", 
           RowBox[{"FontFamily", "->", "\"\<Times\>\""}]}], "]"}]}], "}"}]}], 
      ",", "\[IndentingNewLine]", 
      RowBox[{"LabelingFunction", "->", 
       RowBox[{"(", 
        RowBox[{"Function", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"value", ",", "index", ",", "barPos"}], "}"}], ",", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"index", "[", 
              RowBox[{"[", "2", "]"}], "]"}], "==", "2"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"Placed", "[", 
             RowBox[{
              RowBox[{"Row", "[", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"NumberForm", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"Values", "[", "exactTermData", "]"}], "[", 
                    RowBox[{"[", 
                    RowBox[{
                    RowBox[{"index", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ",", 
                    RowBox[{"index", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], "]"}], "]"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"Infinity", ",", "1"}], "}"}]}], "]"}], ",", 
                 "\"\< (\>\"", ",", 
                 RowBox[{"ScientificForm", "[", 
                  RowBox[{"value", ",", "3"}], "]"}], ",", "\"\<)\>\""}], 
                "}"}], "]"}], ",", "Above"}], "]"}], ",", 
            RowBox[{"Placed", "[", 
             RowBox[{
              RowBox[{"Row", "[", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"NumberForm", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"Values", "[", "exactTermData", "]"}], "[", 
                    RowBox[{"[", 
                    RowBox[{
                    RowBox[{"index", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ",", 
                    RowBox[{"index", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], "]"}], "]"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"Infinity", ",", "1"}], "}"}]}], "]"}], ",", 
                 "\"\< (\>\"", ",", 
                 RowBox[{"NumberForm", "[", 
                  RowBox[{"value", ",", 
                   RowBox[{"{", 
                    RowBox[{"Infinity", ",", "3"}], "}"}]}], "]"}], ",", 
                 "\"\<)\>\""}], "}"}], "]"}], ",", "Center"}], "]"}]}], 
           "]"}]}], "]"}], ")"}]}], ",", "\[IndentingNewLine]", 
      RowBox[{"ChartLabels", "->", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
          "\"\<NH3-BF3\>\"", ",", "\"\<DMTM Molecular\>\"", ",", 
           "\"\<DMTM 3x3\>\"", ",", "\"\<DMTM 5x5\>\"", ",", 
           "\"\<DMTM 9x9\>\"", ",", "\"\<WGS 3x3x2\>\"", ",", 
           "\"\<WGS 5x5x2\>\""}], "}"}], ",", "None"}], "}"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Epilog", "->", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"Style", "[", 
          RowBox[{
           RowBox[{"Text", "[", 
            RowBox[{
             RowBox[{"Style", "[", 
              RowBox[{
               RowBox[{"totalExactData", "[", 
                RowBox[{"[", "i", "]"}], "]"}], ",", "Black"}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", "1.025"}], "}"}]}], "]"}], ",", "11.5"}], 
          "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", 
           RowBox[{"Length", "@", "totalExactData"}]}], "}"}]}], "]"}]}], ",",
       "\[IndentingNewLine]", 
      RowBox[{"PlotTheme", "->", "\"\<Scientific\>\""}], ",", 
      RowBox[{"ImageSize", "->", "800"}], ",", 
      RowBox[{"LabelStyle", "->", 
       RowBox[{"Directive", "[", 
        RowBox[{"FontSize", "->", "11.5"}], "]"}]}], ",", 
      RowBox[{"FrameStyle", "->", 
       RowBox[{"Directive", "[", 
        RowBox[{"FontSize", "->", "14"}], "]"}]}]}], "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.9469453373416567`*^9, 3.9469453373433867`*^9}, {
   3.9469456001064863`*^9, 3.9469457300701423`*^9}, {3.946945768839113*^9, 
   3.946945979333909*^9}, {3.946946010710558*^9, 3.946946081628931*^9}, {
   3.946946167164192*^9, 3.9469461721325617`*^9}, {3.946946241986129*^9, 
   3.9469462507081137`*^9}, 3.946946288861115*^9, {3.946946415217251*^9, 
   3.946946416931638*^9}, {3.946946462450223*^9, 3.946946469320965*^9}, {
   3.946946588205173*^9, 3.946946627012847*^9}, {3.9469466627886677`*^9, 
   3.946946698067267*^9}, {3.946946917690619*^9, 3.9469470328140583`*^9}, {
   3.946947074404286*^9, 3.946947078389817*^9}, 3.946947129824486*^9, {
   3.94694720755707*^9, 3.946947219762057*^9}, {3.946947318970175*^9, 
   3.9469473558206244`*^9}, {3.946947431251734*^9, 3.946947470429691*^9}, {
   3.946947606248897*^9, 3.94694761759408*^9}, {3.946948255903349*^9, 
   3.946948317109944*^9}, {3.946949257326741*^9, 3.946949465543868*^9}, {
   3.946949566094829*^9, 3.946949672097187*^9}, {3.946949719910133*^9, 
   3.946949752271507*^9}, {3.946949790618905*^9, 3.946949896867989*^9}, {
   3.9469499401015*^9, 3.946949970094371*^9}, {3.946950043093742*^9, 
   3.946950050895506*^9}, {3.946950111409999*^9, 3.946950123118082*^9}, {
   3.9469502012999887`*^9, 3.946950221941684*^9}, {3.9469864897119093`*^9, 
   3.946986507827303*^9}, {3.946986602522801*^9, 3.9469866709480267`*^9}, {
   3.946986951223599*^9, 3.9469869889790287`*^9}, {3.94698730250369*^9, 
   3.946987346345499*^9}, {3.946987378338692*^9, 3.946987391231485*^9}, 
   3.94698747246084*^9, {3.946987551176155*^9, 3.946987666324455*^9}, {
   3.946987755265584*^9, 3.946987792830069*^9}, {3.946987891867255*^9, 
   3.946987902203516*^9}, {3.94698793604347*^9, 3.946987936375279*^9}, {
   3.946988028880817*^9, 3.9469880457952757`*^9}, {3.946988130955018*^9, 
   3.946988215878443*^9}, {3.946988249286535*^9, 3.946988345359118*^9}, {
   3.946988411767774*^9, 3.946988479021977*^9}, {3.9469885110011997`*^9, 
   3.946988511261885*^9}, {3.9469885545244837`*^9, 3.946988555120453*^9}, 
   3.946988588082923*^9, {3.946988630460907*^9, 3.94698869908023*^9}, {
   3.9469889311812963`*^9, 3.94698896691114*^9}, {3.946989099051114*^9, 
   3.946989183225954*^9}, {3.946989240279502*^9, 3.946989377383128*^9}, {
   3.946989422499642*^9, 3.9469894276510553`*^9}, {3.946989477600202*^9, 
   3.946989489742879*^9}, {3.946989523981434*^9, 3.9469895905548973`*^9}, {
   3.946989658972968*^9, 3.946989685156836*^9}, {3.946989723237856*^9, 
   3.946989731809676*^9}, {3.946989803286668*^9, 3.946989820390217*^9}, {
   3.946989879954974*^9, 3.946989969149441*^9}, 3.9469900145889397`*^9, {
   3.946992013557802*^9, 3.946992016032785*^9}, {3.946992077723345*^9, 
   3.946992177151477*^9}, {3.946995411187213*^9, 3.9469954183533583`*^9}, {
   3.946995535769261*^9, 3.946995537921654*^9}, {3.9469956045344*^9, 
   3.946995655942718*^9}, {3.9469957935785427`*^9, 3.946995874886857*^9}, {
   3.946995916397036*^9, 3.946995983860327*^9}, {3.946996040419196*^9, 
   3.946996041677742*^9}, {3.946996098375275*^9, 3.946996233046632*^9}, {
   3.946996341962963*^9, 3.94699634223203*^9}, {3.9469963944104223`*^9, 
   3.9469964037017183`*^9}, {3.946996455798156*^9, 3.946996543540998*^9}, {
   3.946996629305402*^9, 3.946996651689025*^9}, {3.9469966841974916`*^9, 
   3.946996754039088*^9}, 3.946996911228174*^9, {3.946997062829513*^9, 
   3.946997072335681*^9}, {3.946997103044508*^9, 3.946997105615982*^9}, {
   3.946997148585387*^9, 3.946997188859276*^9}, {3.946997223086345*^9, 
   3.9469972573137817`*^9}, {3.946997348250976*^9, 3.946997377282514*^9}, {
   3.9469974971606894`*^9, 3.946997573293584*^9}, {3.9469976512298403`*^9, 
   3.946997745362198*^9}, {3.946997787068152*^9, 3.946997810716357*^9}, {
   3.946997890695607*^9, 3.946997892925835*^9}, {3.946997957025131*^9, 
   3.946997978709264*^9}, 3.946998033334457*^9, {3.94699808834851*^9, 
   3.946998125407113*^9}, {3.946998166109549*^9, 3.946998166585875*^9}, {
   3.946998661670419*^9, 3.946998667364472*^9}, {3.946998874001523*^9, 
   3.946998946808182*^9}, {3.946999071355717*^9, 3.946999083247139*^9}, {
   3.9469991720740547`*^9, 3.946999202228114*^9}, {3.946999284481599*^9, 
   3.946999319897462*^9}, {3.94699943362058*^9, 3.9469994346170464`*^9}, {
   3.946999466894002*^9, 3.946999468164247*^9}, {3.94699953322176*^9, 
   3.946999556792992*^9}, {3.947005995717065*^9, 3.947006008050314*^9}, {
   3.947006117886696*^9, 3.947006162884993*^9}, {3.94700631643211*^9, 
   3.947006529436021*^9}, {3.947006567851351*^9, 3.947006694233249*^9}, {
   3.947006771610481*^9, 3.947006773243136*^9}, {3.94700681960106*^9, 
   3.94700683092546*^9}, {3.947006861507563*^9, 3.947006862892962*^9}, {
   3.9470069098463497`*^9, 3.9470069103146753`*^9}, {3.947006947641728*^9, 
   3.947006948847183*^9}, {3.947007154181097*^9, 3.947007222533091*^9}, {
   3.947007309004959*^9, 3.947007320951849*^9}, 3.947007362711212*^9, {
   3.947007439044302*^9, 3.94700746169979*^9}, {3.947007491950587*^9, 
   3.947007529909077*^9}, {3.947008325381703*^9, 3.947008326339088*^9}, {
   3.947008454335561*^9, 3.947008493023989*^9}, {3.9470085298191347`*^9, 
   3.9470085314053087`*^9}, {3.947008618295994*^9, 3.9470086591536827`*^9}, {
   3.9470087349269447`*^9, 3.947008756383365*^9}, {3.947078790085224*^9, 
   3.947078833705113*^9}, {3.9470788661247053`*^9, 3.947078990549944*^9}, {
   3.947079029907744*^9, 3.947079045771268*^9}, {3.947079095571644*^9, 
   3.947079104628843*^9}, {3.947079183147655*^9, 3.947079227109618*^9}, {
   3.947079289459439*^9, 3.947079542897884*^9}, {3.947079598048026*^9, 
   3.947079623022443*^9}, {3.947080172258836*^9, 3.947080176942568*^9}, {
   3.947080357146571*^9, 3.947080374879174*^9}, {3.94708042817068*^9, 
   3.947080457688369*^9}, {3.947080517277765*^9, 3.947080545276112*^9}, {
   3.947082809736431*^9, 3.947083103144842*^9}, {3.9470831336841903`*^9, 
   3.947083204674533*^9}, {3.947083415745219*^9, 3.947083419710425*^9}, {
   3.947765208730159*^9, 3.947765212137824*^9}, {3.947765534326928*^9, 
   3.947765542940445*^9}, {3.947765578145358*^9, 3.947765631966256*^9}, {
   3.94776573886884*^9, 3.947765906361903*^9}, {3.9477659369383793`*^9, 
   3.947765960803227*^9}, {3.947766454968656*^9, 3.947766465846158*^9}, {
   3.947766507580201*^9, 3.947766512469552*^9}, {3.947766592862848*^9, 
   3.947766693064354*^9}, {3.947767288660413*^9, 3.947767304705885*^9}, {
   3.947768011965941*^9, 3.947768037016737*^9}, {3.947768772687708*^9, 
   3.947768774903837*^9}, {3.947768806256391*^9, 3.947768865636663*^9}, {
   3.947769056128624*^9, 3.947769070821294*^9}, {3.947769102184947*^9, 
   3.947769178934717*^9}, {3.947769210603627*^9, 3.947769211058568*^9}, {
   3.94776926204452*^9, 3.947769326382971*^9}, {3.947769356547557*^9, 
   3.94776936075431*^9}, {3.947769416659593*^9, 3.94776946890039*^9}, {
   3.947769957505079*^9, 3.947770016756225*^9}, {3.947773716074295*^9, 
   3.947773719225247*^9}, {3.948322911152459*^9, 3.948322915889806*^9}, {
   3.948322981471202*^9, 3.94832298856994*^9}, {3.948832356793294*^9, 
   3.948832437091838*^9}, {3.948832529418812*^9, 3.948832549229122*^9}, {
   3.948832590032608*^9, 3.948832632185877*^9}, {3.948832796857953*^9, 
   3.948832796904763*^9}, {3.94883291838855*^9, 3.948832929434948*^9}, {
   3.962714045824646*^9, 3.962714073830928*^9}, 3.96272280748042*^9, {
   3.962722853248568*^9, 3.962722853627467*^9}, 3.962722891256698*^9, 
   3.962722922035701*^9, 3.962722963075139*^9, {3.962723144943961*^9, 
   3.962723172899548*^9}, {3.963407875570485*^9, 3.9634078986961613`*^9}, {
   3.96340833592763*^9, 3.963408353068866*^9}, {3.9634084161981087`*^9, 
   3.963408418433506*^9}},ExpressionUUID->"071121f4-d202-4fac-ac4e-\
c96bd0672a01"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{
  3.962722856568446*^9, 3.96272289159968*^9, 3.962722922346405*^9, 
   3.962722963351144*^9, {3.962723149338941*^9, 3.962723178568316*^9}, 
   3.962808549867984*^9, 3.962993320305273*^9},
 CellLabel->"Out[78]=",ExpressionUUID->"68ba377e-7bf4-4a1c-8e2a-a6ca9413985f"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{
      Opacity[0], 
      PointBox[{{0.4107501820830298, 0.}, {7.451201747997087, 
       0.}}]}, {{}, {{{}, {{}, {{
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.40599999999999997`]]], 
            RGBColor[0.9, 0.36, 0.054]], 
           
           RectangleBox[{0.5487982520029133, 0.}, {1.4512017479970867`, 
            0.2555110061401397}, "RoundingRadius" -> 0]}, {
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.40599999999999997`]]], 
            RGBColor[0.9270654, 0.5003406, 0.021599999999999994`]], 
           
           RectangleBox[{0.5487982520029133, 0.2555110061401397}, {
            1.4512017479970867`, 0.2557508362473523}, "RoundingRadius" -> 
            0]}, {
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.40599999999999997`]]], 
            RGBColor[0.8132514, 0.5871208, 0.09015460000000006]], 
           
           RectangleBox[{0.5487982520029133, 0.2557508362473523}, {
            1.4512017479970867`, 0.596947884406279}, "RoundingRadius" -> 0]}, {
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.40599999999999997`]]], 
            RGBColor[
            0.4176785999999998, 0.5667802000000001, 0.36061840000000017`]], 
           
           RectangleBox[{0.5487982520029133, 0.596947884406279}, {
            1.4512017479970867`, 0.6383757561076578}, "RoundingRadius" -> 
            0]}, {
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.40599999999999997`]]], 
            RGBColor[0.31759180000000004`, 0.5071208, 0.5737826]], 
           
           RectangleBox[{0.5487982520029133, 0.6383757561076578}, {
            1.4512017479970867`, 0.8871086963869539}, "RoundingRadius" -> 
            0]}, {
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.40599999999999997`]]], 
            RGBColor[0.365248, 0.427802, 0.758297]], 
           
           RectangleBox[{0.5487982520029133, 0.8871086963869539}, {
            1.4512017479970867`, 1.}, "RoundingRadius" -> 
            0]}}}, {}, {}}, {{}, {{}, {{
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.40599999999999997`]]], 
            RGBColor[0.9, 0.36, 0.054]], 
           
           RectangleBox[{1.5487982520029133`, 0.}, {2.4512017479970867`, 
            0.19929425680440752`}, "RoundingRadius" -> 0]}, {
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.40599999999999997`]]], 
            RGBColor[0.9270654, 0.5003406, 0.021599999999999994`]], 
           
           RectangleBox[{1.5487982520029133`, 0.19929425680440752`}, {
            2.4512017479970867`, 0.19964222782896807`}, "RoundingRadius" -> 
            0]}, {
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.40599999999999997`]]], 
            RGBColor[0.8132514, 0.5871208, 0.09015460000000006]], 
           
           RectangleBox[{1.5487982520029133`, 0.19964222782896807`}, {
            2.4512017479970867`, 0.6354042261112458}, "RoundingRadius" -> 
            0]}, {
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.40599999999999997`]]], 
            RGBColor[
            0.4176785999999998, 0.5667802000000001, 0.36061840000000017`]], 
           
           RectangleBox[{1.5487982520029133`, 0.6354042261112458}, {
            2.4512017479970867`, 0.6823493696198304}, "RoundingRadius" -> 
            0]}, {
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.40599999999999997`]]], 
            RGBColor[0.31759180000000004`, 0.5071208, 0.5737826]], 
           RectangleBox[{1.5487982520029133`, 0.6823493696198304}, {
            2.4512017479970867`, 0.9101848646201309}, "RoundingRadius" -> 
            0]}, {
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.40599999999999997`]]], 
            RGBColor[0.365248, 0.427802, 0.758297]], 
           
           RectangleBox[{1.5487982520029133`, 0.9101848646201309}, {
            2.4512017479970867`, 1.}, "RoundingRadius" -> 
            0]}}}, {}, {}}, {{}, {{}, {{
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.40599999999999997`]]], 
            RGBColor[0.9, 0.36, 0.054]], 
           
           RectangleBox[{2.5487982520029133`, 0.}, {3.4512017479970867`, 
            0.194253434468067}, "RoundingRadius" -> 0]}, {
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.40599999999999997`]]], 
            RGBColor[0.9270654, 0.5003406, 0.021599999999999994`]], 
           
           RectangleBox[{2.5487982520029133`, 0.194253434468067}, {
            3.4512017479970867`, 0.19428646828398063`}, "RoundingRadius" -> 
            0]}, {
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.40599999999999997`]]], 
            RGBColor[0.8132514, 0.5871208, 0.09015460000000006]], 
           
           RectangleBox[{2.5487982520029133`, 0.19428646828398063`}, {
            3.4512017479970867`, 0.6425289324414193}, "RoundingRadius" -> 
            0]}, {
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.40599999999999997`]]], 
            RGBColor[
            0.4176785999999998, 0.5667802000000001, 0.36061840000000017`]], 
           
           RectangleBox[{2.5487982520029133`, 0.6425289324414193}, {
            3.4512017479970867`, 0.6911620407110447}, "RoundingRadius" -> 
            0]}, {
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.40599999999999997`]]], 
            RGBColor[0.31759180000000004`, 0.5071208, 0.5737826]], 
           
           RectangleBox[{2.5487982520029133`, 0.6911620407110447}, {
            3.4512017479970867`, 0.8950156479912192}, "RoundingRadius" -> 
            0]}, {
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.40599999999999997`]]], 
            RGBColor[0.365248, 0.427802, 0.758297]], 
           
           RectangleBox[{2.5487982520029133`, 0.8950156479912192}, {
            3.4512017479970867`, 1.}, "RoundingRadius" -> 
            0]}}}, {}, {}}, {{}, {{}, {{
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.40599999999999997`]]], 
            RGBColor[0.9, 0.36, 0.054]], 
           
           RectangleBox[{3.5487982520029133`, 0.}, {4.451201747997087, 
            0.05228615146462109}, "RoundingRadius" -> 0]}, {
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.40599999999999997`]]], 
            RGBColor[0.9270654, 0.5003406, 0.021599999999999994`]], 
           
           RectangleBox[{3.5487982520029133`, 0.05228615146462109}, {
            4.451201747997087, 0.052303127742613406`}, "RoundingRadius" -> 
            0]}, {
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.40599999999999997`]]], 
            RGBColor[0.8132514, 0.5871208, 0.09015460000000006]], 
           
           RectangleBox[{3.5487982520029133`, 0.052303127742613406`}, {
            4.451201747997087, 0.498656955124364}, "RoundingRadius" -> 0]}, {
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.40599999999999997`]]], 
            RGBColor[
            0.4176785999999998, 0.5667802000000001, 0.36061840000000017`]], 
           RectangleBox[{3.5487982520029133`, 0.498656955124364}, {
            4.451201747997087, 0.566676469535402}, "RoundingRadius" -> 0]}, {
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.40599999999999997`]]], 
            RGBColor[0.31759180000000004`, 0.5071208, 0.5737826]], 
           
           RectangleBox[{3.5487982520029133`, 0.566676469535402}, {
            4.451201747997087, 0.8497064090886337}, "RoundingRadius" -> 0]}, {
          
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.40599999999999997`]]], 
            RGBColor[0.365248, 0.427802, 0.758297]], 
           
           RectangleBox[{3.5487982520029133`, 0.8497064090886337}, {
            4.451201747997087, 1.}, "RoundingRadius" -> 
            0]}}}, {}, {}}, {{}, {{}, {{
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.40599999999999997`]]], 
            RGBColor[0.9, 0.36, 0.054]], 
           
           RectangleBox[{4.548798252002913, 0.}, {5.451201747997087, 
            0.0208151781976298}, "RoundingRadius" -> 0]}, {
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.40599999999999997`]]], 
            RGBColor[0.9270654, 0.5003406, 0.021599999999999994`]], 
           
           RectangleBox[{4.548798252002913, 0.0208151781976298}, {
            5.451201747997087, 0.020819961533104645`}, "RoundingRadius" -> 
            0]}, {
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.40599999999999997`]]], 
            RGBColor[0.8132514, 0.5871208, 0.09015460000000006]], 
           
           RectangleBox[{4.548798252002913, 0.020819961533104645`}, {
            5.451201747997087, 0.4996734872834057}, "RoundingRadius" -> 0]}, {
          
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.40599999999999997`]]], 
            RGBColor[
            0.4176785999999998, 0.5667802000000001, 0.36061840000000017`]], 
           
           RectangleBox[{4.548798252002913, 0.4996734872834057}, {
            5.451201747997087, 0.5674194158067449}, "RoundingRadius" -> 0]}, {
          
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.40599999999999997`]]], 
            RGBColor[0.31759180000000004`, 0.5071208, 0.5737826]], 
           
           RectangleBox[{4.548798252002913, 0.5674194158067449}, {
            5.451201747997087, 0.8488385041844291}, "RoundingRadius" -> 0]}, {
          
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.40599999999999997`]]], 
            RGBColor[0.365248, 0.427802, 0.758297]], 
           
           RectangleBox[{4.548798252002913, 0.8488385041844291}, {
            5.451201747997087, 1.}, "RoundingRadius" -> 
            0]}}}, {}, {}}, {{}, {{}, {{
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.40599999999999997`]]], 
            RGBColor[0.9, 0.36, 0.054]], 
           
           RectangleBox[{5.548798252002913, 0.}, {6.451201747997087, 
            0.05546911291318501}, "RoundingRadius" -> 0]}, {
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.40599999999999997`]]], 
            RGBColor[0.9270654, 0.5003406, 0.021599999999999994`]], 
           
           RectangleBox[{5.548798252002913, 0.05546911291318501}, {
            6.451201747997087, 0.05548068972442277}, "RoundingRadius" -> 0]}, {
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.40599999999999997`]]], 
            RGBColor[0.8132514, 0.5871208, 0.09015460000000006]], 
           
           RectangleBox[{5.548798252002913, 0.05548068972442277}, {
            6.451201747997087, 0.5322972628315779}, "RoundingRadius" -> 0]}, {
          
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.40599999999999997`]]], 
            RGBColor[
            0.4176785999999998, 0.5667802000000001, 0.36061840000000017`]], 
           
           RectangleBox[{5.548798252002913, 0.5322972628315779}, {
            6.451201747997087, 0.6072217518765342}, "RoundingRadius" -> 0]}, {
          
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.40599999999999997`]]], 
            RGBColor[0.31759180000000004`, 0.5071208, 0.5737826]], 
           
           RectangleBox[{5.548798252002913, 0.6072217518765342}, {
            6.451201747997087, 0.727498187885801}, "RoundingRadius" -> 0]}, {
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.40599999999999997`]]], 
            RGBColor[0.365248, 0.427802, 0.758297]], 
           
           RectangleBox[{5.548798252002913, 0.727498187885801}, {
            6.451201747997087, 1.}, "RoundingRadius" -> 
            0]}}}, {}, {}}, {{}, {{}, {{
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.40599999999999997`]]], 
            RGBColor[0.9, 0.36, 0.054]], 
           
           RectangleBox[{6.548798252002913, 0.}, {7.451201747997087, 
            0.03700926782792855}, "RoundingRadius" -> 0]}, {
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.40599999999999997`]]], 
            RGBColor[0.9270654, 0.5003406, 0.021599999999999994`]], 
           
           RectangleBox[{6.548798252002913, 0.03700926782792855}, {
            7.451201747997087, 0.037015677217124725`}, "RoundingRadius" -> 
            0]}, {
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.40599999999999997`]]], 
            RGBColor[0.8132514, 0.5871208, 0.09015460000000006]], 
           
           RectangleBox[{6.548798252002913, 0.037015677217124725`}, {
            7.451201747997087, 0.5861969917370777}, "RoundingRadius" -> 0]}, {
          
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.40599999999999997`]]], 
            RGBColor[
            0.4176785999999998, 0.5667802000000001, 0.36061840000000017`]], 
           
           RectangleBox[{6.548798252002913, 0.5861969917370777}, {
            7.451201747997087, 0.6609827437734016}, "RoundingRadius" -> 0]}, {
          
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.40599999999999997`]]], 
            RGBColor[0.31759180000000004`, 0.5071208, 0.5737826]], 
           
           RectangleBox[{6.548798252002913, 0.6609827437734016}, {
            7.451201747997087, 0.7648530548432579}, "RoundingRadius" -> 0]}, {
          
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.40599999999999997`]]], 
            RGBColor[0.365248, 0.427802, 0.758297]], 
           
           RectangleBox[{6.548798252002913, 0.7648530548432579}, {
            7.451201747997087, 1.}, "RoundingRadius" -> 
            0]}}}, {}, {}}}, {}, {}}, {}, {
      InsetBox[
       FormBox[
        StyleBox[
         TemplateBox[{
           TagBox[
            InterpretationBox[
             StyleBox["\"6518.0\"", ShowStringCharacters -> False], 
             6517.956262799431, AutoDelete -> True], NumberForm[#, {
              DirectedInfinity[1], 1}]& ], "\" (\"", 
           TagBox[
            InterpretationBox[
             StyleBox["\"0.256\"", ShowStringCharacters -> False], 
             0.2555110061401397, AutoDelete -> True], NumberForm[#, {
              DirectedInfinity[1], 3}]& ], "\")\""}, "RowDefault"], {
          Directive[FontSize -> 11.5]}, StripOnInput -> False], 
        TraditionalForm], {1., 0.12775550307006986`}, 
       ImageScaled[{0.5, 0.5}]], 
      InsetBox[
       FormBox[
        StyleBox[
         TemplateBox[{
           TagBox[
            InterpretationBox[
             StyleBox["\"6.1\"", ShowStringCharacters -> False], 
             6.117944478903405, AutoDelete -> True], NumberForm[#, {
              DirectedInfinity[1], 1}]& ], "\" (\"", 
           TagBox[
            InterpretationBox[
             StyleBox[
              RowBox[{"\"2.4\"", "\[Times]", 
                SuperscriptBox["10", "\"-4\""]}], ShowStringCharacters -> 
              False], 0.00023983010721258417`, AutoDelete -> True], 
            ScientificForm[#, 3]& ], "\")\""}, "RowDefault"], {
          Directive[FontSize -> 11.5]}, StripOnInput -> False], 
        TraditionalForm], 
       Offset[{0, 4}, {1., 0.2557508362473523}], 
       ImageScaled[{0.5, 0}]], 
      InsetBox[
       FormBox[
        StyleBox[
         TemplateBox[{
           TagBox[
            InterpretationBox[
             StyleBox["\"8703.8\"", ShowStringCharacters -> False], 
             8703.76376537147, AutoDelete -> True], NumberForm[#, {
              DirectedInfinity[1], 1}]& ], "\" (\"", 
           TagBox[
            InterpretationBox[
             StyleBox["\"0.341\"", ShowStringCharacters -> False], 
             0.3411970481589267, AutoDelete -> True], NumberForm[#, {
              DirectedInfinity[1], 3}]& ], "\")\""}, "RowDefault"], {
          Directive[FontSize -> 11.5]}, StripOnInput -> False], 
        TraditionalForm], {1., 0.42634936032681564`}, 
       ImageScaled[{0.5, 0.5}]], 
      InsetBox[
       FormBox[
        StyleBox[
         TemplateBox[{
           TagBox[
            InterpretationBox[
             StyleBox["\"1056.8\"", ShowStringCharacters -> False], 
             1056.8040096963698`, AutoDelete -> True], NumberForm[#, {
              DirectedInfinity[1], 1}]& ], "\" (\"", 
           TagBox[
            InterpretationBox[
             StyleBox["\"0.041\"", ShowStringCharacters -> False], 
             0.04142787170137883, AutoDelete -> True], NumberForm[#, {
              DirectedInfinity[1], 3}]& ], "\")\""}, "RowDefault"], {
          Directive[FontSize -> 11.5]}, StripOnInput -> False], 
        TraditionalForm], {1., 0.6176618202569684}, 
       ImageScaled[{0.5, 0.5}]], 
      InsetBox[
       FormBox[
        StyleBox[
         TemplateBox[{
           TagBox[
            InterpretationBox[
             StyleBox["\"6345.1\"", ShowStringCharacters -> False], 
             6345.05123810111, AutoDelete -> True], NumberForm[#, {
              DirectedInfinity[1], 1}]& ], "\" (\"", 
           TagBox[
            InterpretationBox[
             StyleBox["\"0.249\"", ShowStringCharacters -> False], 
             0.248732940279296, AutoDelete -> True], NumberForm[#, {
              DirectedInfinity[1], 3}]& ], "\")\""}, "RowDefault"], {
          Directive[FontSize -> 11.5]}, StripOnInput -> False], 
        TraditionalForm], {1., 0.7627422262473058}, 
       ImageScaled[{0.5, 0.5}]], 
      InsetBox[
       FormBox[
        StyleBox[
         TemplateBox[{
           TagBox[
            InterpretationBox[
             StyleBox["\"2879.8\"", ShowStringCharacters -> False], 
             2879.799937058962, AutoDelete -> True], NumberForm[#, {
              DirectedInfinity[1], 1}]& ], "\" (\"", 
           TagBox[
            InterpretationBox[
             StyleBox["\"0.113\"", ShowStringCharacters -> False], 
             0.1128913036130462, AutoDelete -> True], NumberForm[#, {
              DirectedInfinity[1], 3}]& ], "\")\""}, "RowDefault"], {
          Directive[FontSize -> 11.5]}, StripOnInput -> False], 
        TraditionalForm], {1., 0.9435543481934769}, 
       ImageScaled[{0.5, 0.5}]], 
      InsetBox[
       FormBox[
        StyleBox[
         TemplateBox[{
           TagBox[
            InterpretationBox[
             StyleBox["\"12066.6\"", ShowStringCharacters -> False], 
             12066.644365807066`, AutoDelete -> True], NumberForm[#, {
              DirectedInfinity[1], 1}]& ], "\" (\"", 
           TagBox[
            InterpretationBox[
             StyleBox["\"0.199\"", ShowStringCharacters -> False], 
             0.19929425680440752`, AutoDelete -> True], NumberForm[#, {
              DirectedInfinity[1], 3}]& ], "\")\""}, "RowDefault"], {
          Directive[FontSize -> 11.5]}, StripOnInput -> False], 
        TraditionalForm], {2., 0.09964712840220376}, 
       ImageScaled[{0.5, 0.5}]], 
      InsetBox[
       FormBox[
        StyleBox[
         TemplateBox[{
           TagBox[
            InterpretationBox[
             StyleBox["\"21.1\"", ShowStringCharacters -> False], 
             21.068557972037382`, AutoDelete -> True], NumberForm[#, {
              DirectedInfinity[1], 1}]& ], "\" (\"", 
           TagBox[
            InterpretationBox[
             StyleBox[
              RowBox[{"\"3.48\"", "\[Times]", 
                SuperscriptBox["10", "\"-4\""]}], ShowStringCharacters -> 
              False], 0.00034797102456055767`, AutoDelete -> True], 
            ScientificForm[#, 3]& ], "\")\""}, "RowDefault"], {
          Directive[FontSize -> 11.5]}, StripOnInput -> False], 
        TraditionalForm], 
       Offset[{0, 4}, {2., 0.19964222782896807`}], 
       ImageScaled[{0.5, 0}]], 
      InsetBox[
       FormBox[
        StyleBox[
         TemplateBox[{
           TagBox[
            InterpretationBox[
             StyleBox["\"26384.0\"", ShowStringCharacters -> False], 
             26384.027044824445`, AutoDelete -> True], NumberForm[#, {
              DirectedInfinity[1], 1}]& ], "\" (\"", 
           TagBox[
            InterpretationBox[
             StyleBox["\"0.436\"", ShowStringCharacters -> False], 
             0.4357619982822778, AutoDelete -> True], NumberForm[#, {
              DirectedInfinity[1], 3}]& ], "\")\""}, "RowDefault"], {
          Directive[FontSize -> 11.5]}, StripOnInput -> False], 
        TraditionalForm], {2., 0.4175232269701069}, 
       ImageScaled[{0.5, 0.5}]], 
      InsetBox[
       FormBox[
        StyleBox[
         TemplateBox[{
           TagBox[
            InterpretationBox[
             StyleBox["\"2842.4\"", ShowStringCharacters -> False], 
             2842.381714872068, AutoDelete -> True], NumberForm[#, {
              DirectedInfinity[1], 1}]& ], "\" (\"", 
           TagBox[
            InterpretationBox[
             StyleBox["\"0.047\"", ShowStringCharacters -> False], 
             0.04694514350858457, AutoDelete -> True], NumberForm[#, {
              DirectedInfinity[1], 3}]& ], "\")\""}, "RowDefault"], {
          Directive[FontSize -> 11.5]}, StripOnInput -> False], 
        TraditionalForm], {2., 0.6588767978655381}, 
       ImageScaled[{0.5, 0.5}]], 
      InsetBox[
       FormBox[
        StyleBox[
         TemplateBox[{
           TagBox[
            InterpretationBox[
             StyleBox["\"13794.7\"", ShowStringCharacters -> False], 
             13794.727134432109`, AutoDelete -> True], NumberForm[#, {
              DirectedInfinity[1], 1}]& ], "\" (\"", 
           TagBox[
            InterpretationBox[
             StyleBox["\"0.228\"", ShowStringCharacters -> False], 
             0.2278354950003006, AutoDelete -> True], NumberForm[#, {
              DirectedInfinity[1], 3}]& ], "\")\""}, "RowDefault"], {
          Directive[FontSize -> 11.5]}, StripOnInput -> False], 
        TraditionalForm], {2., 0.7962671171199807}, 
       ImageScaled[{0.5, 0.5}]], 
      InsetBox[
       FormBox[
        StyleBox[
         TemplateBox[{
           TagBox[
            InterpretationBox[
             StyleBox["\"5438.0\"", ShowStringCharacters -> False], 
             5438.025734777362, AutoDelete -> True], NumberForm[#, {
              DirectedInfinity[1], 1}]& ], "\" (\"", 
           TagBox[
            InterpretationBox[
             StyleBox["\"0.090\"", ShowStringCharacters -> False], 
             0.08981513537986911, AutoDelete -> True], NumberForm[#, {
              DirectedInfinity[1], 3}]& ], "\")\""}, "RowDefault"], {
          Directive[FontSize -> 11.5]}, StripOnInput -> False], 
        TraditionalForm], {2., 0.9550924323100655}, 
       ImageScaled[{0.5, 0.5}]], 
      InsetBox[
       FormBox[
        StyleBox[
         TemplateBox[{
           TagBox[
            InterpretationBox[
             StyleBox["\"43678.6\"", ShowStringCharacters -> False], 
             43678.618280893126`, AutoDelete -> True], NumberForm[#, {
              DirectedInfinity[1], 1}]& ], "\" (\"", 
           TagBox[
            InterpretationBox[
             StyleBox["\"0.194\"", ShowStringCharacters -> False], 
             0.194253434468067, AutoDelete -> True], NumberForm[#, {
              DirectedInfinity[1], 3}]& ], "\")\""}, "RowDefault"], {
          Directive[FontSize -> 11.5]}, StripOnInput -> False], 
        TraditionalForm], {3., 0.0971267172340335}, 
       ImageScaled[{0.5, 0.5}]], 
      InsetBox[
       FormBox[
        StyleBox[
         TemplateBox[{
           TagBox[
            InterpretationBox[
             StyleBox["\"7.4\"", ShowStringCharacters -> False], 
             7.427778250633906, AutoDelete -> True], NumberForm[#, {
              DirectedInfinity[1], 1}]& ], "\" (\"", 
           TagBox[
            InterpretationBox[
             StyleBox[
              RowBox[{"\"3.3\"", "\[Times]", 
                SuperscriptBox["10", "\"-5\""]}], ShowStringCharacters -> 
              False], 0.0000330338159136325, AutoDelete -> True], 
            ScientificForm[#, 3]& ], "\")\""}, "RowDefault"], {
          Directive[FontSize -> 11.5]}, StripOnInput -> False], 
        TraditionalForm], 
       Offset[{0, 4}, {3., 0.19428646828398063`}], 
       ImageScaled[{0.5, 0}]], 
      InsetBox[
       FormBox[
        StyleBox[
         TemplateBox[{
           TagBox[
            InterpretationBox[
             StyleBox["\"100789.0\"", ShowStringCharacters -> False], 
             100789.01072113698`, AutoDelete -> True], NumberForm[#, {
              DirectedInfinity[1], 1}]& ], "\" (\"", 
           TagBox[
            InterpretationBox[
             StyleBox["\"0.448\"", ShowStringCharacters -> False], 
             0.4482424641574387, AutoDelete -> True], NumberForm[#, {
              DirectedInfinity[1], 3}]& ], "\")\""}, "RowDefault"], {
          Directive[FontSize -> 11.5]}, StripOnInput -> False], 
        TraditionalForm], {3., 0.4184077003627}, 
       ImageScaled[{0.5, 0.5}]], 
      InsetBox[
       FormBox[
        StyleBox[
         TemplateBox[{
           TagBox[
            InterpretationBox[
             StyleBox["\"10935.3\"", ShowStringCharacters -> False], 
             10935.338043001302`, AutoDelete -> True], NumberForm[#, {
              DirectedInfinity[1], 1}]& ], "\" (\"", 
           TagBox[
            InterpretationBox[
             StyleBox["\"0.049\"", ShowStringCharacters -> False], 
             0.04863310826962537, AutoDelete -> True], NumberForm[#, {
              DirectedInfinity[1], 3}]& ], "\")\""}, "RowDefault"], {
          Directive[FontSize -> 11.5]}, StripOnInput -> False], 
        TraditionalForm], {3., 0.666845486576232}, 
       ImageScaled[{0.5, 0.5}]], 
      InsetBox[
       FormBox[
        StyleBox[
         TemplateBox[{
           TagBox[
            InterpretationBox[
             StyleBox["\"45837.3\"", ShowStringCharacters -> False], 
             45837.253389914, AutoDelete -> True], NumberForm[#, {
              DirectedInfinity[1], 1}]& ], "\" (\"", 
           TagBox[
            InterpretationBox[
             StyleBox["\"0.204\"", ShowStringCharacters -> False], 
             0.2038536072801746, AutoDelete -> True], NumberForm[#, {
              DirectedInfinity[1], 3}]& ], "\")\""}, "RowDefault"], {
          Directive[FontSize -> 11.5]}, StripOnInput -> False], 
        TraditionalForm], {3., 0.7930888443511319}, 
       ImageScaled[{0.5, 0.5}]], 
      InsetBox[
       FormBox[
        StyleBox[
         TemplateBox[{
           TagBox[
            InterpretationBox[
             StyleBox["\"23606.1\"", ShowStringCharacters -> False], 
             23606.127991586505`, AutoDelete -> True], NumberForm[#, {
              DirectedInfinity[1], 1}]& ], "\" (\"", 
           TagBox[
            InterpretationBox[
             StyleBox["\"0.105\"", ShowStringCharacters -> False], 
             0.10498435200878078`, AutoDelete -> True], NumberForm[#, {
              DirectedInfinity[1], 3}]& ], "\")\""}, "RowDefault"], {
          Directive[FontSize -> 11.5]}, StripOnInput -> False], 
        TraditionalForm], {3., 0.9475078239956096}, 
       ImageScaled[{0.5, 0.5}]], 
      InsetBox[
       FormBox[
        StyleBox[
         TemplateBox[{
           TagBox[
            InterpretationBox[
             StyleBox["\"43688.2\"", ShowStringCharacters -> False], 
             43688.182822729286`, AutoDelete -> True], NumberForm[#, {
              DirectedInfinity[1], 1}]& ], "\" (\"", 
           TagBox[
            InterpretationBox[
             StyleBox["\"0.052\"", ShowStringCharacters -> False], 
             0.05228615146462109, AutoDelete -> True], NumberForm[#, {
              DirectedInfinity[1], 3}]& ], "\")\""}, "RowDefault"], {
          Directive[FontSize -> 11.5]}, StripOnInput -> False], 
        TraditionalForm], {4., 0.026143075732310544`}, 
       ImageScaled[{0.5, 0.5}]], 
      InsetBox[
       FormBox[
        StyleBox[
         TemplateBox[{
           TagBox[
            InterpretationBox[
             StyleBox["\"14.2\"", ShowStringCharacters -> False], 
             14.184687834209845`, AutoDelete -> True], NumberForm[#, {
              DirectedInfinity[1], 1}]& ], "\" (\"", 
           TagBox[
            InterpretationBox[
             StyleBox[
              RowBox[{"\"1.7\"", "\[Times]", 
                SuperscriptBox["10", "\"-5\""]}], ShowStringCharacters -> 
              False], 0.00001697627799231799, AutoDelete -> True], 
            ScientificForm[#, 3]& ], "\")\""}, "RowDefault"], {
          Directive[FontSize -> 11.5]}, StripOnInput -> False], 
        TraditionalForm], 
       Offset[{0, 4}, {4., 0.052303127742613406`}], 
       ImageScaled[{0.5, 0}]], 
      InsetBox[
       FormBox[
        StyleBox[
         TemplateBox[{
           TagBox[
            InterpretationBox[
             StyleBox["\"372955.1\"", ShowStringCharacters -> False], 
             372955.1146535161, AutoDelete -> True], NumberForm[#, {
              DirectedInfinity[1], 1}]& ], "\" (\"", 
           TagBox[
            InterpretationBox[
             StyleBox["\"0.446\"", ShowStringCharacters -> False], 
             0.44635382738175056`, AutoDelete -> True], NumberForm[#, {
              DirectedInfinity[1], 3}]& ], "\")\""}, "RowDefault"], {
          Directive[FontSize -> 11.5]}, StripOnInput -> False], 
        TraditionalForm], {4., 0.2754800414334887}, 
       ImageScaled[{0.5, 0.5}]], 
      InsetBox[
       FormBox[
        StyleBox[
         TemplateBox[{
           TagBox[
            InterpretationBox[
             StyleBox["\"56834.3\"", ShowStringCharacters -> False], 
             56834.34136691881, AutoDelete -> True], NumberForm[#, {
              DirectedInfinity[1], 1}]& ], "\" (\"", 
           TagBox[
            InterpretationBox[
             StyleBox["\"0.068\"", ShowStringCharacters -> False], 
             0.06801951441103798, AutoDelete -> True], NumberForm[#, {
              DirectedInfinity[1], 3}]& ], "\")\""}, "RowDefault"], {
          Directive[FontSize -> 11.5]}, StripOnInput -> False], 
        TraditionalForm], {4., 0.5326667123298829}, 
       ImageScaled[{0.5, 0.5}]], 
      InsetBox[
       FormBox[
        StyleBox[
         TemplateBox[{
           TagBox[
            InterpretationBox[
             StyleBox["\"236488.3\"", ShowStringCharacters -> False], 
             236488.31281595293`, AutoDelete -> True], NumberForm[#, {
              DirectedInfinity[1], 1}]& ], "\" (\"", 
           TagBox[
            InterpretationBox[
             StyleBox["\"0.283\"", ShowStringCharacters -> False], 
             0.28302993955323175`, AutoDelete -> True], NumberForm[#, {
              DirectedInfinity[1], 3}]& ], "\")\""}, "RowDefault"], {
          Directive[FontSize -> 11.5]}, StripOnInput -> False], 
        TraditionalForm], {4., 0.7081914393120179}, 
       ImageScaled[{0.5, 0.5}]], 
      InsetBox[
       FormBox[
        StyleBox[
         TemplateBox[{
           TagBox[
            InterpretationBox[
             StyleBox["\"125579.2\"", ShowStringCharacters -> False], 
             125579.21539249469`, AutoDelete -> True], NumberForm[#, {
              DirectedInfinity[1], 1}]& ], "\" (\"", 
           TagBox[
            InterpretationBox[
             StyleBox["\"0.150\"", ShowStringCharacters -> False], 
             0.15029359091136626`, AutoDelete -> True], NumberForm[#, {
              DirectedInfinity[1], 3}]& ], "\")\""}, "RowDefault"], {
          Directive[FontSize -> 11.5]}, StripOnInput -> False], 
        TraditionalForm], {4., 0.9248532045443169}, 
       ImageScaled[{0.5, 0.5}]], 
      InsetBox[
       FormBox[
        StyleBox[
         TemplateBox[{
           TagBox[
            InterpretationBox[
             StyleBox["\"154440.4\"", ShowStringCharacters -> False], 
             154440.35490426174`, AutoDelete -> True], NumberForm[#, {
              DirectedInfinity[1], 1}]& ], "\" (\"", 
           TagBox[
            InterpretationBox[
             StyleBox["\"0.021\"", ShowStringCharacters -> False], 
             0.0208151781976298, AutoDelete -> True], NumberForm[#, {
              DirectedInfinity[1], 3}]& ], "\")\""}, "RowDefault"], {
          Directive[FontSize -> 11.5]}, StripOnInput -> False], 
        TraditionalForm], {5., 0.0104075890988149}, 
       ImageScaled[{0.5, 0.5}]], 
      InsetBox[
       FormBox[
        StyleBox[
         TemplateBox[{
           TagBox[
            InterpretationBox[
             StyleBox["\"35.5\"", ShowStringCharacters -> False], 
             35.490449389713476`, AutoDelete -> True], NumberForm[#, {
              DirectedInfinity[1], 1}]& ], "\" (\"", 
           TagBox[
            InterpretationBox[
             StyleBox[
              RowBox[{"\"4.78\"", "\[Times]", 
                SuperscriptBox["10", "\"-6\""]}], ShowStringCharacters -> 
              False], 4.7833354748426734`*^-6, AutoDelete -> True], 
            ScientificForm[#, 3]& ], "\")\""}, "RowDefault"], {
          Directive[FontSize -> 11.5]}, StripOnInput -> False], 
        TraditionalForm], 
       Offset[{0, 4}, {5., 0.020819961533104645`}], 
       ImageScaled[{0.5, 0}]], 
      InsetBox[
       FormBox[
        StyleBox[
         TemplateBox[{
           TagBox[
            InterpretationBox[
             StyleBox[
              RowBox[{"\"3.6\"", "\[Times]", 
                SuperscriptBox["10", "\"6\""]}], ShowStringCharacters -> 
              False], 3.552902971181607*^6, AutoDelete -> True], 
            NumberForm[#, {
              DirectedInfinity[1], 1}]& ], "\" (\"", 
           TagBox[
            InterpretationBox[
             StyleBox["\"0.479\"", ShowStringCharacters -> False], 
             0.47885352575030105`, AutoDelete -> True], NumberForm[#, {
              DirectedInfinity[1], 3}]& ], "\")\""}, "RowDefault"], {
          Directive[FontSize -> 11.5]}, StripOnInput -> False], 
        TraditionalForm], {5., 0.2602467244082552}, 
       ImageScaled[{0.5, 0.5}]], 
      InsetBox[
       FormBox[
        StyleBox[
         TemplateBox[{
           TagBox[
            InterpretationBox[
             StyleBox["\"502647.9\"", ShowStringCharacters -> False], 
             502647.8824790767, AutoDelete -> True], NumberForm[#, {
              DirectedInfinity[1], 1}]& ], "\" (\"", 
           TagBox[
            InterpretationBox[
             StyleBox["\"0.068\"", ShowStringCharacters -> False], 
             0.06774592852333926, AutoDelete -> True], NumberForm[#, {
              DirectedInfinity[1], 3}]& ], "\")\""}, "RowDefault"], {
          Directive[FontSize -> 11.5]}, StripOnInput -> False], 
        TraditionalForm], {5., 0.5335464515450753}, 
       ImageScaled[{0.5, 0.5}]], 
      InsetBox[
       FormBox[
        StyleBox[
         TemplateBox[{
           TagBox[
            InterpretationBox[
             StyleBox[
              RowBox[{"\"2.1\"", "\[Times]", 
                SuperscriptBox["10", "\"6\""]}], ShowStringCharacters -> 
              False], 2.0880178624092855`*^6, AutoDelete -> True], 
            NumberForm[#, {
              DirectedInfinity[1], 1}]& ], "\" (\"", 
           TagBox[
            InterpretationBox[
             StyleBox["\"0.281\"", ShowStringCharacters -> False], 
             0.28141908837768415`, AutoDelete -> True], NumberForm[#, {
              DirectedInfinity[1], 3}]& ], "\")\""}, "RowDefault"], {
          Directive[FontSize -> 11.5]}, StripOnInput -> False], 
        TraditionalForm], {5., 0.708128959995587}, 
       ImageScaled[{0.5, 0.5}]], 
      InsetBox[
       FormBox[
        StyleBox[
         TemplateBox[{
           TagBox[
            InterpretationBox[
             StyleBox[
              RowBox[{"\"1.1\"", "\[Times]", 
                SuperscriptBox["10", "\"6\""]}], ShowStringCharacters -> 
              False], 1.121558260994093*^6, AutoDelete -> True], 
            NumberForm[#, {
              DirectedInfinity[1], 1}]& ], "\" (\"", 
           TagBox[
            InterpretationBox[
             StyleBox["\"0.151\"", ShowStringCharacters -> False], 
             0.15116149581557087`, AutoDelete -> True], NumberForm[#, {
              DirectedInfinity[1], 3}]& ], "\")\""}, "RowDefault"], {
          Directive[FontSize -> 11.5]}, StripOnInput -> False], 
        TraditionalForm], {5., 0.9244192520922145}, 
       ImageScaled[{0.5, 0.5}]], 
      InsetBox[
       FormBox[
        StyleBox[
         TemplateBox[{
           TagBox[
            InterpretationBox[
             StyleBox["\"21280.2\"", ShowStringCharacters -> False], 
             21280.194886693345`, AutoDelete -> True], NumberForm[#, {
              DirectedInfinity[1], 1}]& ], "\" (\"", 
           TagBox[
            InterpretationBox[
             StyleBox["\"0.055\"", ShowStringCharacters -> False], 
             0.05546911291318501, AutoDelete -> True], NumberForm[#, {
              DirectedInfinity[1], 3}]& ], "\")\""}, "RowDefault"], {
          Directive[FontSize -> 11.5]}, StripOnInput -> False], 
        TraditionalForm], {6., 0.027734556456592504`}, 
       ImageScaled[{0.5, 0.5}]], 
      InsetBox[
       FormBox[
        StyleBox[
         TemplateBox[{
           TagBox[
            InterpretationBox[
             StyleBox["\"4.4\"", ShowStringCharacters -> False], 
             4.441332957526168, AutoDelete -> True], NumberForm[#, {
              DirectedInfinity[1], 1}]& ], "\" (\"", 
           TagBox[
            InterpretationBox[
             StyleBox[
              RowBox[{"\"1.16\"", "\[Times]", 
                SuperscriptBox["10", "\"-5\""]}], ShowStringCharacters -> 
              False], 0.000011576811237763501`, AutoDelete -> True], 
            ScientificForm[#, 3]& ], "\")\""}, "RowDefault"], {
          Directive[FontSize -> 11.5]}, StripOnInput -> False], 
        TraditionalForm], 
       Offset[{0, 4}, {6., 0.05548068972442277}], 
       ImageScaled[{0.5, 0}]], 
      InsetBox[
       FormBox[
        StyleBox[
         TemplateBox[{
           TagBox[
            InterpretationBox[
             StyleBox["\"182926.1\"", ShowStringCharacters -> False], 
             182926.11992562882`, AutoDelete -> True], NumberForm[#, {
              DirectedInfinity[1], 1}]& ], "\" (\"", 
           TagBox[
            InterpretationBox[
             StyleBox["\"0.477\"", ShowStringCharacters -> False], 
             0.47681657310715514`, AutoDelete -> True], NumberForm[#, {
              DirectedInfinity[1], 3}]& ], "\")\""}, "RowDefault"], {
          Directive[FontSize -> 11.5]}, StripOnInput -> False], 
        TraditionalForm], {6., 0.2938889762780003}, 
       ImageScaled[{0.5, 0.5}]], 
      InsetBox[
       FormBox[
        StyleBox[
         TemplateBox[{
           TagBox[
            InterpretationBox[
             StyleBox["\"28744.1\"", ShowStringCharacters -> False], 
             28744.063947047525`, AutoDelete -> True], NumberForm[#, {
              DirectedInfinity[1], 1}]& ], "\" (\"", 
           TagBox[
            InterpretationBox[
             StyleBox["\"0.075\"", ShowStringCharacters -> False], 
             0.07492448904495624, AutoDelete -> True], NumberForm[#, {
              DirectedInfinity[1], 3}]& ], "\")\""}, "RowDefault"], {
          Directive[FontSize -> 11.5]}, StripOnInput -> False], 
        TraditionalForm], {6., 0.569759507354056}, 
       ImageScaled[{0.5, 0.5}]], 
      InsetBox[
       FormBox[
        StyleBox[
         TemplateBox[{
           TagBox[
            InterpretationBox[
             StyleBox["\"46142.9\"", ShowStringCharacters -> False], 
             46142.90483714776, AutoDelete -> True], NumberForm[#, {
              DirectedInfinity[1], 1}]& ], "\" (\"", 
           TagBox[
            InterpretationBox[
             StyleBox["\"0.120\"", ShowStringCharacters -> False], 
             0.12027643600926685`, AutoDelete -> True], NumberForm[#, {
              DirectedInfinity[1], 3}]& ], "\")\""}, "RowDefault"], {
          Directive[FontSize -> 11.5]}, StripOnInput -> False], 
        TraditionalForm], {6., 0.6673599698811676}, 
       ImageScaled[{0.5, 0.5}]], 
      InsetBox[
       FormBox[
        StyleBox[
         TemplateBox[{
           TagBox[
            InterpretationBox[
             StyleBox["\"104542.7\"", ShowStringCharacters -> False], 
             104542.71511143728`, AutoDelete -> True], NumberForm[#, {
              DirectedInfinity[1], 1}]& ], "\" (\"", 
           TagBox[
            InterpretationBox[
             StyleBox["\"0.273\"", ShowStringCharacters -> False], 
             0.27250181211419894`, AutoDelete -> True], NumberForm[#, {
              DirectedInfinity[1], 3}]& ], "\")\""}, "RowDefault"], {
          Directive[FontSize -> 11.5]}, StripOnInput -> False], 
        TraditionalForm], {6., 0.8637490939429004}, 
       ImageScaled[{0.5, 0.5}]], 
      InsetBox[
       FormBox[
        StyleBox[
         TemplateBox[{
           TagBox[
            InterpretationBox[
             StyleBox["\"56809.6\"", ShowStringCharacters -> False], 
             56809.57633515057, AutoDelete -> True], NumberForm[#, {
              DirectedInfinity[1], 1}]& ], "\" (\"", 
           TagBox[
            InterpretationBox[
             StyleBox["\"0.037\"", ShowStringCharacters -> False], 
             0.03700926782792855, AutoDelete -> True], NumberForm[#, {
              DirectedInfinity[1], 3}]& ], "\")\""}, "RowDefault"], {
          Directive[FontSize -> 11.5]}, StripOnInput -> False], 
        TraditionalForm], {7., 0.018504633913964275`}, 
       ImageScaled[{0.5, 0.5}]], 
      InsetBox[
       FormBox[
        StyleBox[
         TemplateBox[{
           TagBox[
            InterpretationBox[
             StyleBox["\"9.8\"", ShowStringCharacters -> False], 
             9.83847306827717, AutoDelete -> True], NumberForm[#, {
              DirectedInfinity[1], 1}]& ], "\" (\"", 
           TagBox[
            InterpretationBox[
             StyleBox[
              RowBox[{"\"6.41\"", "\[Times]", 
                SuperscriptBox["10", "\"-6\""]}], ShowStringCharacters -> 
              False], 6.409389196173923*^-6, AutoDelete -> True], 
            ScientificForm[#, 3]& ], "\")\""}, "RowDefault"], {
          Directive[FontSize -> 11.5]}, StripOnInput -> False], 
        TraditionalForm], 
       Offset[{0, 4}, {7., 0.037015677217124725`}], 
       ImageScaled[{0.5, 0}]], 
      InsetBox[
       FormBox[
        StyleBox[
         TemplateBox[{
           TagBox[
            InterpretationBox[
             StyleBox["\"842998.5\"", ShowStringCharacters -> False], 
             842998.5146994957, AutoDelete -> True], NumberForm[#, {
              DirectedInfinity[1], 1}]& ], "\" (\"", 
           TagBox[
            InterpretationBox[
             StyleBox["\"0.549\"", ShowStringCharacters -> False], 
             0.549181314519953, AutoDelete -> True], NumberForm[#, {
              DirectedInfinity[1], 3}]& ], "\")\""}, "RowDefault"], {
          Directive[FontSize -> 11.5]}, StripOnInput -> False], 
        TraditionalForm], {7., 0.31160633447710123`}, 
       ImageScaled[{0.5, 0.5}]], 
      InsetBox[
       FormBox[
        StyleBox[
         TemplateBox[{
           TagBox[
            InterpretationBox[
             StyleBox["\"114796.8\"", ShowStringCharacters -> False], 
             114796.83707449822`, AutoDelete -> True], NumberForm[#, {
              DirectedInfinity[1], 1}]& ], "\" (\"", 
           TagBox[
            InterpretationBox[
             StyleBox["\"0.075\"", ShowStringCharacters -> False], 
             0.07478575203632387, AutoDelete -> True], NumberForm[#, {
              DirectedInfinity[1], 3}]& ], "\")\""}, "RowDefault"], {
          Directive[FontSize -> 11.5]}, StripOnInput -> False], 
        TraditionalForm], {7., 0.6235898677552396}, 
       ImageScaled[{0.5, 0.5}]], 
      InsetBox[
       FormBox[
        StyleBox[
         TemplateBox[{
           TagBox[
            InterpretationBox[
             StyleBox["\"159441.9\"", ShowStringCharacters -> False], 
             159441.91041860756`, AutoDelete -> True], NumberForm[#, {
              DirectedInfinity[1], 1}]& ], "\" (\"", 
           TagBox[
            InterpretationBox[
             StyleBox["\"0.104\"", ShowStringCharacters -> False], 
             0.10387031106985634`, AutoDelete -> True], NumberForm[#, {
              DirectedInfinity[1], 3}]& ], "\")\""}, "RowDefault"], {
          Directive[FontSize -> 11.5]}, StripOnInput -> False], 
        TraditionalForm], {7., 0.7129178993083298}, 
       ImageScaled[{0.5, 0.5}]], 
      InsetBox[
       FormBox[
        StyleBox[
         TemplateBox[{
           TagBox[
            InterpretationBox[
             StyleBox["\"360952.8\"", ShowStringCharacters -> False], 
             360952.78601481864`, AutoDelete -> True], NumberForm[#, {
              DirectedInfinity[1], 1}]& ], "\" (\"", 
           TagBox[
            InterpretationBox[
             StyleBox["\"0.235\"", ShowStringCharacters -> False], 
             0.23514694515674214`, AutoDelete -> True], NumberForm[#, {
              DirectedInfinity[1], 3}]& ], "\")\""}, "RowDefault"], {
          Directive[FontSize -> 11.5]}, StripOnInput -> False], 
        TraditionalForm], {7., 0.882426527421629}, 
       ImageScaled[{0.5, 0.5}]]}, {}, {}, {}}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0.4107501820830298, 0.}, 
     CoordinatesToolOptions -> {"DisplayFunction" -> ({
         Identity[
          Part[#, 1]], 
         Identity[
          Part[#, 2]]}& ), "CopiedValueFunction" -> ({
         Identity[
          Part[#, 1]], 
         Identity[
          Part[#, 2]]}& )}, Epilog -> {
       StyleBox[
        InsetBox[
         FormBox[
          StyleBox["25509.493157506244`", 
           GrayLevel[0], StripOnInput -> False], TraditionalForm], {
         1, 1.025}], {11.5}, StripOnInput -> False], 
       StyleBox[
        InsetBox[
         FormBox[
          StyleBox["60546.87455268508`", 
           GrayLevel[0], StripOnInput -> False], TraditionalForm], {
         2, 1.025}], {11.5}, StripOnInput -> False], 
       StyleBox[
        InsetBox[
         FormBox[
          StyleBox["224853.77620478254`", 
           GrayLevel[0], StripOnInput -> False], TraditionalForm], {
         3, 1.025}], {11.5}, StripOnInput -> False], 
       StyleBox[
        InsetBox[
         FormBox[
          StyleBox["835559.351739446`", 
           GrayLevel[0], StripOnInput -> False], TraditionalForm], {
         4, 1.025}], {11.5}, StripOnInput -> False], 
       StyleBox[
        InsetBox[
         FormBox[
          StyleBox["7.419602822417714`*^6", 
           GrayLevel[0], StripOnInput -> False], TraditionalForm], {
         5, 1.025}], {11.5}, StripOnInput -> False], 
       StyleBox[
        InsetBox[
         FormBox[
          StyleBox["383640.44004091225`", 
           GrayLevel[0], StripOnInput -> False], TraditionalForm], {
         6, 1.025}], {11.5}, StripOnInput -> False], 
       StyleBox[
        InsetBox[
         FormBox[
          StyleBox["1.535009463015639`*^6", 
           GrayLevel[0], StripOnInput -> False], TraditionalForm], {
         7, 1.025}], {11.5}, StripOnInput -> False]}, Frame -> True, 
     FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
     Directive[FontSize -> 14], 
     FrameTicks -> {{Automatic, Automatic}, {{{1., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {1., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {1., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {1., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {1., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {1., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {1.5, 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {1., 
          FormBox["\"NH3-BF3\"", TraditionalForm], {0, 0}}, {2., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {2., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {2., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {2., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {2., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {2., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {2.5, 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {2., 
          FormBox["\"DMTM Molecular\"", TraditionalForm], {0, 0}}, {3., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {3., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {3., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {3., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {3., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {3., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {3.5, 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {3., 
          FormBox["\"DMTM 3x3\"", TraditionalForm], {0, 0}}, {4., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {4., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {4., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {4., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {4., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {4., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {4.5, 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {4., 
          FormBox["\"DMTM 5x5\"", TraditionalForm], {0, 0}}, {5., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {5., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {5., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {5., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {5., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {5., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {5.5, 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {5., 
          FormBox["\"DMTM 9x9\"", TraditionalForm], {0, 0}}, {6., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {6., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {6., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {6., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {6., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {6., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {6.5, 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {6., 
          FormBox["\"WGS 3x3x2\"", TraditionalForm], {0, 0}}, {7., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {7., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {7., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {7., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {7., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {7., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {7., 
          FormBox["\"WGS 5x5x2\"", TraditionalForm], {0, 0}}}, {{1., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {1., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {1., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {1., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {1., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {1., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {1.5, 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {2., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {2., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {2., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {2., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {2., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {2., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {2.5, 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {3., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {3., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {3., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {3., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {3., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {3., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {3.5, 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {4., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {4., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {4., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {4., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {4., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {4., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {4.5, 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {5., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {5., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {5., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {5., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {5., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {5., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {5.5, 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {6., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {6., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {6., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {6., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {6., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {6., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {6.5, 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {7., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {7., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {7., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {7., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {7., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {7., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}}}}, 
     GridLines -> {{0}, {0}}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 800, LabelStyle -> 
     Directive[FontSize -> 11.5], PlotLabel -> 
     FormBox["\"Rescaling Factor Normalized Distribution\"", TraditionalForm],
      PlotRange -> {{All, All}, {All, All}}, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {None, 
        Scaled[0.05]}}, Ticks -> {None, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{
       StyleBox[
        SubscriptBox["\"\[Lambda]\"", 
         SubscriptBox["\"T\"", "\"el\""]], 14, FontFamily -> "Times", 
        StripOnInput -> False], 
       StyleBox[
        SubscriptBox["\"\[Lambda]\"", 
         SubscriptBox["\"T\"", "\"ion\""]], 14, FontFamily -> "Times", 
        StripOnInput -> False], 
       StyleBox[
        SubscriptBox["\"\[Lambda]\"", 
         SubscriptBox["\"V\"", "\"el\""]], 14, FontFamily -> "Times", 
        StripOnInput -> False], 
       StyleBox[
        SubscriptBox["\"\[Lambda]\"", 
         SubscriptBox["\"V\"", "\"ion\""]], 14, FontFamily -> "Times", 
        StripOnInput -> False], 
       StyleBox[
        SubscriptBox["\"\[Lambda]\"", 
         SubscriptBox["\"V\"", "\"loc\""]], 14, FontFamily -> "Times", 
        StripOnInput -> False], 
       StyleBox[
        SubscriptBox["\"\[Lambda]\"", 
         SubscriptBox["\"V\"", "\"NL\""]], 14, FontFamily -> "Times", 
        StripOnInput -> False]}, "SwatchLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Thickness[Small], 
                    Opacity[0.40599999999999997`]]], 
                    RGBColor[0.365248, 0.427802, 0.758297]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Thickness[Small], 
                    Opacity[0.40599999999999997`]]], 
                    RGBColor[0.31759180000000004`, 0.5071208, 0.5737826]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Thickness[Small], 
                    Opacity[0.40599999999999997`]]], 
                    RGBColor[
                    0.4176785999999998, 0.5667802000000001, 
                    0.36061840000000017`]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Thickness[Small], 
                    Opacity[0.40599999999999997`]]], 
                    RGBColor[0.8132514, 0.5871208, 0.09015460000000006]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Thickness[Small], 
                    Opacity[0.40599999999999997`]]], 
                    RGBColor[0.9270654, 0.5003406, 0.021599999999999994`]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Thickness[Small], 
                    Opacity[0.40599999999999997`]]], 
                    RGBColor[0.9, 0.36, 0.054]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.3}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
          Directive[FontSize -> 11.5], FontFamily -> "Arial"}, Background -> 
         Automatic, StripOnInput -> False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.40599999999999997`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    
                    TemplateBox[<|"color" -> GrayLevel[1]|>, 
                    "GrayLevelColorSwatchTemplate"]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.40599999999999997`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    
                    TemplateBox[<|"color" -> GrayLevel[1]|>, 
                    "GrayLevelColorSwatchTemplate"]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.40599999999999997`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    
                    TemplateBox[<|"color" -> GrayLevel[1]|>, 
                    "GrayLevelColorSwatchTemplate"]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.40599999999999997`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    
                    TemplateBox[<|"color" -> GrayLevel[1]|>, 
                    "GrayLevelColorSwatchTemplate"]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.40599999999999997`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    
                    TemplateBox[<|"color" -> GrayLevel[1]|>, 
                    "GrayLevelColorSwatchTemplate"]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.40599999999999997`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    
                    TemplateBox[<|"color" -> GrayLevel[1]|>, 
                    "GrayLevelColorSwatchTemplate"]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.40599999999999997`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    
                    TemplateBox[<|"color" -> GrayLevel[1]|>, 
                    "GrayLevelColorSwatchTemplate"]}], "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.40599999999999997`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    
                    TemplateBox[<|"color" -> RGBColor[0.9, 0.36, 0.054]|>, 
                    "RGBColorSwatchTemplate"]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.40599999999999997`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> 
                    RGBColor[0.9270654, 0.5003406, 0.021599999999999994`]|>, 
                    "RGBColorSwatchTemplate"]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.40599999999999997`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> 
                    RGBColor[0.8132514, 0.5871208, 0.09015460000000006]|>, 
                    "RGBColorSwatchTemplate"]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.40599999999999997`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> 
                    RGBColor[
                    0.4176785999999998, 0.5667802000000001, 
                    0.36061840000000017`]|>, "RGBColorSwatchTemplate"]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.40599999999999997`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> 
                    RGBColor[0.31759180000000004`, 0.5071208, 0.5737826]|>, 
                    "RGBColorSwatchTemplate"]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.40599999999999997`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.365248, 0.427802, 0.758297]|>, 
                    "RGBColorSwatchTemplate"]}], "]"}]}], "}"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               RowBox[{"{", "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6}], 
                 "}"}]}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", "None", "}"}], ",", 
                 RowBox[{"{", 
                   
                   RowBox[{
                    "Automatic", ",", "Automatic", ",", "Automatic", ",", 
                    "Automatic", ",", "Automatic", ",", "Automatic"}], 
                   "}"}]}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"Directive", "[", 
                    RowBox[{"FontSize", "\[Rule]", "11.5`"}], "]"}], "}"}], 
                 ",", 
                 RowBox[{"{", 
                   RowBox[{"Directive", "[", 
                    RowBox[{"FontSize", "\[Rule]", "11.5`"}], "]"}], "}"}]}], 
               "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"ReversedColumn\""}]}], 
         "]"}]& ), Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.962722856568446*^9, 3.96272289159968*^9, 3.962722922346405*^9, 
   3.962722963351144*^9, {3.962723149338941*^9, 3.962723178568316*^9}, 
   3.962808549867984*^9, 3.962993320838207*^9},
 CellLabel->"Out[79]=",ExpressionUUID->"0f8da590-0daa-49ca-8aca-7d4681ccb5a2"]
}, Open  ]],

Cell["\<\
Inside each color bar we show the values of the rescaling factor for that \
term, and in parenthesis the relative contribution to the total rescaling \
(the \[Lambda]Tion bar is negligible, so the corresponding number is at the \
bottom of the \[Lambda]Vel bar). The total rescaling factor is shown on top \
of each bar stack. We can see that the electron Coulomb terms appear to have \
the most contribution to the total rescaling factor amount. (see Fig. 6)\
\>", "Text",
 CellChangeTimes->{{3.9634090351884108`*^9, 3.963409067390114*^9}, {
  3.963409167755418*^9, 3.963409204182611*^9}, {3.963409246945161*^9, 
  3.963409259894203*^9}, {3.9635688176707287`*^9, 
  3.9635688203083143`*^9}},ExpressionUUID->"9cf6817e-5f63-48f0-8720-\
fdf8e2c68634"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Figure 7: Normalized Distribution of 1 Block Encoding Compiling Costs (In # \
of Toffolis) for Each Problem Instance\
\>", "Subsection",
 CellChangeTimes->{{3.9469453373416567`*^9, 3.9469453373433867`*^9}, {
   3.9469456001064863`*^9, 3.9469457300701423`*^9}, {3.946945768839113*^9, 
   3.946945979333909*^9}, {3.946946010710558*^9, 3.946946081628931*^9}, {
   3.946946167164192*^9, 3.9469461721325617`*^9}, {3.946946241986129*^9, 
   3.9469462507081137`*^9}, 3.946946288861115*^9, {3.946946415217251*^9, 
   3.946946416931638*^9}, {3.946946462450223*^9, 3.946946469320965*^9}, {
   3.946946588205173*^9, 3.946946627012847*^9}, {3.9469466627886677`*^9, 
   3.946946698067267*^9}, {3.946946917690619*^9, 3.9469470328140583`*^9}, {
   3.946947074404286*^9, 3.946947078389817*^9}, 3.946947129824486*^9, {
   3.94694720755707*^9, 3.946947219762057*^9}, {3.946947318970175*^9, 
   3.9469473558206244`*^9}, {3.946947431251734*^9, 3.946947470429691*^9}, {
   3.946947606248897*^9, 3.94694761759408*^9}, {3.946948255903349*^9, 
   3.946948317109944*^9}, {3.946949257326741*^9, 3.946949465543868*^9}, {
   3.946949566094829*^9, 3.946949672097187*^9}, {3.946949719910133*^9, 
   3.946949752271507*^9}, {3.946949790618905*^9, 3.946949896867989*^9}, {
   3.9469499401015*^9, 3.946949970094371*^9}, {3.946950043093742*^9, 
   3.946950050895506*^9}, {3.946950111409999*^9, 3.946950123118082*^9}, {
   3.9469502012999887`*^9, 3.946950221941684*^9}, {3.9469864897119093`*^9, 
   3.946986507827303*^9}, {3.946986602522801*^9, 3.9469866709480267`*^9}, {
   3.946986951223599*^9, 3.9469869889790287`*^9}, {3.94698730250369*^9, 
   3.946987346345499*^9}, {3.946987378338692*^9, 3.946987391231485*^9}, 
   3.94698747246084*^9, {3.946987551176155*^9, 3.946987666324455*^9}, {
   3.946987755265584*^9, 3.946987792830069*^9}, {3.946987891867255*^9, 
   3.946987902203516*^9}, {3.94698793604347*^9, 3.946987936375279*^9}, {
   3.946988028880817*^9, 3.9469880457952757`*^9}, {3.946988130955018*^9, 
   3.946988215878443*^9}, {3.946988249286535*^9, 3.946988345359118*^9}, {
   3.946988411767774*^9, 3.946988479021977*^9}, {3.9469885110011997`*^9, 
   3.946988511261885*^9}, {3.9469885545244837`*^9, 3.946988555120453*^9}, 
   3.946988588082923*^9, {3.946988630460907*^9, 3.94698869908023*^9}, {
   3.9469889311812963`*^9, 3.94698896691114*^9}, {3.946989099051114*^9, 
   3.946989183225954*^9}, {3.946989240279502*^9, 3.946989377383128*^9}, {
   3.946989422499642*^9, 3.9469894276510553`*^9}, {3.946989477600202*^9, 
   3.946989489742879*^9}, {3.946989523981434*^9, 3.9469895905548973`*^9}, {
   3.946989658972968*^9, 3.946989685156836*^9}, {3.946989723237856*^9, 
   3.946989731809676*^9}, {3.946989803286668*^9, 3.946989820390217*^9}, {
   3.946989879954974*^9, 3.946989969149441*^9}, 3.9469900145889397`*^9, {
   3.946992013557802*^9, 3.946992016032785*^9}, {3.946992077723345*^9, 
   3.946992177151477*^9}, {3.946995411187213*^9, 3.9469954183533583`*^9}, {
   3.946995535769261*^9, 3.946995537921654*^9}, {3.9469956045344*^9, 
   3.946995655942718*^9}, {3.9469957935785427`*^9, 3.946995874886857*^9}, {
   3.946995916397036*^9, 3.946995983860327*^9}, {3.946996040419196*^9, 
   3.946996041677742*^9}, {3.946996098375275*^9, 3.946996233046632*^9}, {
   3.946996341962963*^9, 3.94699634223203*^9}, {3.9469963944104223`*^9, 
   3.9469964037017183`*^9}, {3.946996455798156*^9, 3.946996543540998*^9}, {
   3.946996629305402*^9, 3.946996651689025*^9}, {3.9469966841974916`*^9, 
   3.946996754039088*^9}, 3.946996911228174*^9, {3.946997062829513*^9, 
   3.946997072335681*^9}, {3.946997103044508*^9, 3.946997105615982*^9}, {
   3.946997148585387*^9, 3.946997188859276*^9}, {3.946997223086345*^9, 
   3.9469972573137817`*^9}, {3.946997348250976*^9, 3.946997377282514*^9}, {
   3.9469974971606894`*^9, 3.946997573293584*^9}, {3.9469976512298403`*^9, 
   3.946997745362198*^9}, {3.946997787068152*^9, 3.946997810716357*^9}, {
   3.946997890695607*^9, 3.946997892925835*^9}, {3.946997957025131*^9, 
   3.946997978709264*^9}, 3.946998033334457*^9, {3.94699808834851*^9, 
   3.946998125407113*^9}, {3.946998166109549*^9, 3.946998166585875*^9}, {
   3.946998661670419*^9, 3.946998667364472*^9}, {3.946998874001523*^9, 
   3.946998946808182*^9}, {3.946999071355717*^9, 3.946999083247139*^9}, {
   3.9469991720740547`*^9, 3.946999202228114*^9}, {3.946999284481599*^9, 
   3.946999319897462*^9}, {3.94699943362058*^9, 3.9469994346170464`*^9}, {
   3.946999466894002*^9, 3.946999468164247*^9}, {3.94699953322176*^9, 
   3.946999556792992*^9}, {3.947005995717065*^9, 3.947006008050314*^9}, {
   3.947006117886696*^9, 3.947006162884993*^9}, {3.94700631643211*^9, 
   3.947006529436021*^9}, {3.947006567851351*^9, 3.947006694233249*^9}, {
   3.947006771610481*^9, 3.947006773243136*^9}, {3.94700681960106*^9, 
   3.94700683092546*^9}, {3.947006861507563*^9, 3.947006862892962*^9}, {
   3.9470069098463497`*^9, 3.9470069103146753`*^9}, {3.947006947641728*^9, 
   3.947006948847183*^9}, {3.947007154181097*^9, 3.947007222533091*^9}, {
   3.947007309004959*^9, 3.947007320951849*^9}, 3.947007362711212*^9, {
   3.947007439044302*^9, 3.94700746169979*^9}, {3.947007491950587*^9, 
   3.947007529909077*^9}, {3.947008325381703*^9, 3.947008326339088*^9}, {
   3.947008454335561*^9, 3.947008493023989*^9}, {3.9470085298191347`*^9, 
   3.9470085314053087`*^9}, {3.947008618295994*^9, 3.9470086591536827`*^9}, {
   3.9470087349269447`*^9, 3.947008756383365*^9}, {3.947078790085224*^9, 
   3.947078833705113*^9}, {3.9470788661247053`*^9, 3.947078990549944*^9}, {
   3.947079029907744*^9, 3.947079045771268*^9}, {3.947079095571644*^9, 
   3.947079104628843*^9}, {3.947079183147655*^9, 3.947079227109618*^9}, {
   3.947079289459439*^9, 3.947079542897884*^9}, {3.947079598048026*^9, 
   3.947079623022443*^9}, {3.947080172258836*^9, 3.947080176942568*^9}, {
   3.947080357146571*^9, 3.947080374879174*^9}, {3.94708042817068*^9, 
   3.947080457688369*^9}, {3.947080517277765*^9, 3.947080545276112*^9}, {
   3.947082809736431*^9, 3.947083103144842*^9}, {3.9470831336841903`*^9, 
   3.947083204674533*^9}, {3.947083415745219*^9, 3.947083419710425*^9}, {
   3.947765208730159*^9, 3.947765212137824*^9}, {3.947765534326928*^9, 
   3.947765542940445*^9}, {3.947765578145358*^9, 3.947765631966256*^9}, {
   3.94776573886884*^9, 3.947765906361903*^9}, {3.9477659369383793`*^9, 
   3.947765960803227*^9}, {3.947766454968656*^9, 3.947766465846158*^9}, {
   3.947766507580201*^9, 3.947766512469552*^9}, {3.947766592862848*^9, 
   3.947766693064354*^9}, {3.947767288660413*^9, 3.947767304705885*^9}, {
   3.947768011965941*^9, 3.947768037016737*^9}, {3.947768772687708*^9, 
   3.947768774903837*^9}, {3.947768806256391*^9, 3.947768865636663*^9}, {
   3.947769056128624*^9, 3.947769070821294*^9}, {3.947769102184947*^9, 
   3.947769178934717*^9}, {3.947769210603627*^9, 3.947769211058568*^9}, {
   3.94776926204452*^9, 3.947769326382971*^9}, {3.947769356547557*^9, 
   3.94776936075431*^9}, {3.947769416659593*^9, 3.94776946890039*^9}, {
   3.947769957505079*^9, 3.947770016756225*^9}, {3.947773716074295*^9, 
   3.947773719225247*^9}, {3.948322911152459*^9, 3.948322915889806*^9}, {
   3.948322981471202*^9, 3.94832298856994*^9}, {3.948832356793294*^9, 
   3.948832437091838*^9}, {3.948832529418812*^9, 3.948832549229122*^9}, {
   3.948832590032608*^9, 3.948832632185877*^9}, {3.948832796857953*^9, 
   3.948832796904763*^9}, {3.94883291838855*^9, 3.948832929434948*^9}, 
   3.962714045824646*^9, {3.9627140855761833`*^9, 3.962714105098906*^9}, {
   3.963069143927795*^9, 3.963069166680007*^9}, {3.963069285291016*^9, 
   3.963069326645797*^9}, {3.963070580944096*^9, 3.963070581627182*^9}, {
   3.9634095884307127`*^9, 
   3.963409589474368*^9}},ExpressionUUID->"e5ef9d5d-e761-4417-a40f-\
f4a48067c79b"],

Cell["\<\
Next, we plot the block encoding cost (denoted as compilation cost).\
\>", "Text",
 CellChangeTimes->{{3.963409593842305*^9, 
  3.963409616095124*^9}},ExpressionUUID->"421f27f1-4ea6-4c9d-bf96-\
33af74956d85"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "Get", " ", "block", " ", "encoding", " ", "data", " ", "from", " ", "all",
     " ", "instance", " ", "results", " ", "we", " ", "computed", " ", 
    "before"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"compdataNH3BF3", "=", 
     RowBox[{"Instance1Result", "[", "\"\<compilationCost\>\"", "]"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"compdataDMTMSmall", "=", 
     RowBox[{"Instance2Result", "[", "\"\<compilationCost\>\"", "]"}]}], 
    ";"}], "\n", 
   RowBox[{
    RowBox[{"compdataDMTM3", "=", 
     RowBox[{
     "InstanceDMTMClass3Result", "[", "\"\<compilationCost\>\"", "]"}]}], 
    ";"}], "\n", 
   RowBox[{
    RowBox[{"compdataDMTM5", "=", 
     RowBox[{
     "InstanceDMTMClass5Result", "[", "\"\<compilationCost\>\"", "]"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"compdataDMTM9", "=", 
     RowBox[{
     "InstanceDMTMClass9Result", "[", "\"\<compilationCost\>\"", "]"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"compdataWGS3", "=", 
     RowBox[{
     "InstanceWGSClass3Result", "[", "\"\<compilationCost\>\"", "]"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"compdataWGS5", "=", 
     RowBox[{
     "InstanceWGSClass5Result", "[", "\"\<compilationCost\>\"", "]"}]}], 
    ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"allcompData", "=", 
     RowBox[{"{", 
      RowBox[{
      "compdataNH3BF3", ",", "compdataDMTMSmall", ",", "compdataDMTM3", ",", 
       "compdataDMTM5", ",", "compdataDMTM9", ",", "compdataWGS3", ",", 
       "compdataWGS5"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"breakdownCompData", "=", 
     RowBox[{"First", "/@", "allcompData"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"totalCompData", "=", 
     RowBox[{"allcompData", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", "2"}], "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"Create", " ", "figure"}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{"compilingDistBarChart", "=", 
    RowBox[{"BarChart", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"Normalize", "[", 
          RowBox[{"#", ",", "Total"}], "]"}], "&"}], "/@", 
        "breakdownCompData"}], "*", "1.0"}], ",", "\[IndentingNewLine]", 
      RowBox[{"ChartLayout", "->", "\"\<Stacked\>\""}], ",", 
      RowBox[{"Axes", "->", "False"}], ",", 
      RowBox[{"Frame", "->", "True"}], ",", 
      RowBox[{
      "PlotLabel", "->", "\"\<Compiling Cost Normalized Distribution\>\""}], 
      ",", "\[IndentingNewLine]", 
      RowBox[{"ChartLegends", "->", 
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Style", "[", 
           RowBox[{"#", ",", "14"}], "]"}], "&"}], ",", 
         RowBox[{"{", 
          RowBox[{
          "\"\<Shared\>\"", ",", "\"\<Kin\>\"", ",", "\"\<Coul\>\"", ",", 
           "\"\<Loc\>\"", ",", "\"\<NL\>\""}], "}"}]}], "]"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"LabelingFunction", "->", 
       RowBox[{"(", 
        RowBox[{"Function", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"value", ",", "index", ",", "barPos"}], "}"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"index", "[", 
              RowBox[{"[", "2", "]"}], "]"}], "==", "4"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"Placed", "[", 
             RowBox[{
              RowBox[{"Row", "[", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"NumberForm", "[", 
                  RowBox[{
                   RowBox[{"breakdownCompData", "[", 
                    RowBox[{"[", 
                    RowBox[{
                    RowBox[{"index", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ",", 
                    RowBox[{"index", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], "]"}], "]"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"Infinity", ",", "1"}], "}"}]}], "]"}], ",", 
                 "\"\< (\>\"", ",", 
                 RowBox[{"ScientificForm", "[", 
                  RowBox[{"value", ",", "3"}], "]"}], ",", "\"\<)\>\""}], 
                "}"}], "]"}], ",", "Above"}], "]"}], ",", 
            RowBox[{"Placed", "[", 
             RowBox[{
              RowBox[{"Row", "[", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"NumberForm", "[", 
                  RowBox[{
                   RowBox[{"breakdownCompData", "[", 
                    RowBox[{"[", 
                    RowBox[{
                    RowBox[{"index", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ",", 
                    RowBox[{"index", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], "]"}], "]"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"Infinity", ",", "1"}], "}"}]}], "]"}], ",", 
                 "\"\< (\>\"", ",", 
                 RowBox[{"NumberForm", "[", 
                  RowBox[{"value", ",", 
                   RowBox[{"{", 
                    RowBox[{"Infinity", ",", "3"}], "}"}]}], "]"}], ",", 
                 "\"\<)\>\""}], "}"}], "]"}], ",", "Center"}], "]"}]}], 
           "]"}]}], "]"}], ")"}]}], ",", "\[IndentingNewLine]", 
      RowBox[{"ChartLabels", "->", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
          "\"\<NH3-BF3\>\"", ",", "\"\<DMTM Molecular\>\"", ",", 
           "\"\<DMTM 3x3\>\"", ",", "\"\<DMTM 5x5\>\"", ",", 
           "\"\<DMTM 9x9\>\"", ",", "\"\<WGS 3x3x2\>\"", ",", 
           "\"\<WGS 5x5x2\>\""}], "}"}], ",", "None"}], "}"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Epilog", "->", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"Style", "[", 
          RowBox[{
           RowBox[{"Text", "[", 
            RowBox[{
             RowBox[{"Style", "[", 
              RowBox[{
               RowBox[{"totalCompData", "[", 
                RowBox[{"[", "i", "]"}], "]"}], ",", "Black"}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", "1.025"}], "}"}]}], "]"}], ",", "11.5"}], 
          "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", 
           RowBox[{"Length", "@", "totalCompData"}]}], "}"}]}], "]"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"PlotTheme", "->", "\"\<Scientific\>\""}], ",", 
      RowBox[{"ImageSize", "->", "800"}], ",", 
      RowBox[{"LabelStyle", "->", 
       RowBox[{"Directive", "[", 
        RowBox[{"FontSize", "->", "11.5"}], "]"}]}], ",", 
      RowBox[{"FrameStyle", "->", 
       RowBox[{"Directive", "[", 
        RowBox[{"FontSize", "->", "14"}], "]"}]}]}], "]"}]}], 
   "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.9469453373416567`*^9, 3.9469453373433867`*^9}, {
   3.9469456001064863`*^9, 3.9469457300701423`*^9}, {3.946945768839113*^9, 
   3.946945979333909*^9}, {3.946946010710558*^9, 3.946946081628931*^9}, {
   3.946946167164192*^9, 3.9469461721325617`*^9}, {3.946946241986129*^9, 
   3.9469462507081137`*^9}, 3.946946288861115*^9, {3.946946415217251*^9, 
   3.946946416931638*^9}, {3.946946462450223*^9, 3.946946469320965*^9}, {
   3.946946588205173*^9, 3.946946627012847*^9}, {3.9469466627886677`*^9, 
   3.946946698067267*^9}, {3.946946917690619*^9, 3.9469470328140583`*^9}, {
   3.946947074404286*^9, 3.946947078389817*^9}, 3.946947129824486*^9, {
   3.94694720755707*^9, 3.946947219762057*^9}, {3.946947318970175*^9, 
   3.9469473558206244`*^9}, {3.946947431251734*^9, 3.946947470429691*^9}, {
   3.946947606248897*^9, 3.94694761759408*^9}, {3.946948255903349*^9, 
   3.946948317109944*^9}, {3.946949257326741*^9, 3.946949465543868*^9}, {
   3.946949566094829*^9, 3.946949672097187*^9}, {3.946949719910133*^9, 
   3.946949752271507*^9}, {3.946949790618905*^9, 3.946949896867989*^9}, {
   3.9469499401015*^9, 3.946949970094371*^9}, {3.946950043093742*^9, 
   3.946950050895506*^9}, {3.946950111409999*^9, 3.946950123118082*^9}, {
   3.9469502012999887`*^9, 3.946950221941684*^9}, {3.9469864897119093`*^9, 
   3.946986507827303*^9}, {3.946986602522801*^9, 3.9469866709480267`*^9}, {
   3.946986951223599*^9, 3.9469869889790287`*^9}, {3.94698730250369*^9, 
   3.946987346345499*^9}, {3.946987378338692*^9, 3.946987391231485*^9}, 
   3.94698747246084*^9, {3.946987551176155*^9, 3.946987666324455*^9}, {
   3.946987755265584*^9, 3.946987792830069*^9}, {3.946987891867255*^9, 
   3.946987902203516*^9}, {3.94698793604347*^9, 3.946987936375279*^9}, {
   3.946988028880817*^9, 3.9469880457952757`*^9}, {3.946988130955018*^9, 
   3.946988215878443*^9}, {3.946988249286535*^9, 3.946988345359118*^9}, {
   3.946988411767774*^9, 3.946988479021977*^9}, {3.9469885110011997`*^9, 
   3.946988511261885*^9}, {3.9469885545244837`*^9, 3.946988555120453*^9}, 
   3.946988588082923*^9, {3.946988630460907*^9, 3.94698869908023*^9}, {
   3.9469889311812963`*^9, 3.94698896691114*^9}, {3.946989099051114*^9, 
   3.946989183225954*^9}, {3.946989240279502*^9, 3.946989377383128*^9}, {
   3.946989422499642*^9, 3.9469894276510553`*^9}, {3.946989477600202*^9, 
   3.946989489742879*^9}, {3.946989523981434*^9, 3.9469895905548973`*^9}, {
   3.946989658972968*^9, 3.946989685156836*^9}, {3.946989723237856*^9, 
   3.946989731809676*^9}, {3.946989803286668*^9, 3.946989820390217*^9}, {
   3.946989879954974*^9, 3.946989969149441*^9}, 3.9469900145889397`*^9, {
   3.946992013557802*^9, 3.946992016032785*^9}, {3.946992077723345*^9, 
   3.946992177151477*^9}, {3.946995411187213*^9, 3.9469954183533583`*^9}, {
   3.946995535769261*^9, 3.946995537921654*^9}, {3.9469956045344*^9, 
   3.946995655942718*^9}, {3.9469957935785427`*^9, 3.946995874886857*^9}, {
   3.946995916397036*^9, 3.946995983860327*^9}, {3.946996040419196*^9, 
   3.946996041677742*^9}, {3.946996098375275*^9, 3.946996233046632*^9}, {
   3.946996341962963*^9, 3.94699634223203*^9}, {3.9469963944104223`*^9, 
   3.9469964037017183`*^9}, {3.946996455798156*^9, 3.946996543540998*^9}, {
   3.946996629305402*^9, 3.946996651689025*^9}, {3.9469966841974916`*^9, 
   3.946996754039088*^9}, 3.946996911228174*^9, {3.946997062829513*^9, 
   3.946997072335681*^9}, {3.946997103044508*^9, 3.946997105615982*^9}, {
   3.946997148585387*^9, 3.946997188859276*^9}, {3.946997223086345*^9, 
   3.9469972573137817`*^9}, {3.946997348250976*^9, 3.946997377282514*^9}, {
   3.9469974971606894`*^9, 3.946997573293584*^9}, {3.9469976512298403`*^9, 
   3.946997745362198*^9}, {3.946997787068152*^9, 3.946997810716357*^9}, {
   3.946997890695607*^9, 3.946997892925835*^9}, {3.946997957025131*^9, 
   3.946997978709264*^9}, 3.946998033334457*^9, {3.94699808834851*^9, 
   3.946998125407113*^9}, {3.946998166109549*^9, 3.946998166585875*^9}, {
   3.946998661670419*^9, 3.946998667364472*^9}, {3.946998874001523*^9, 
   3.946998946808182*^9}, {3.946999071355717*^9, 3.946999083247139*^9}, {
   3.9469991720740547`*^9, 3.946999202228114*^9}, {3.946999284481599*^9, 
   3.946999319897462*^9}, {3.94699943362058*^9, 3.9469994346170464`*^9}, {
   3.946999466894002*^9, 3.946999468164247*^9}, {3.94699953322176*^9, 
   3.946999556792992*^9}, {3.947005995717065*^9, 3.947006008050314*^9}, {
   3.947006117886696*^9, 3.947006162884993*^9}, {3.94700631643211*^9, 
   3.947006529436021*^9}, {3.947006567851351*^9, 3.947006694233249*^9}, {
   3.947006771610481*^9, 3.947006773243136*^9}, {3.94700681960106*^9, 
   3.94700683092546*^9}, {3.947006861507563*^9, 3.947006862892962*^9}, {
   3.9470069098463497`*^9, 3.9470069103146753`*^9}, {3.947006947641728*^9, 
   3.947006948847183*^9}, {3.947007154181097*^9, 3.947007222533091*^9}, {
   3.947007309004959*^9, 3.947007320951849*^9}, 3.947007362711212*^9, {
   3.947007439044302*^9, 3.94700746169979*^9}, {3.947007491950587*^9, 
   3.947007529909077*^9}, {3.947008325381703*^9, 3.947008326339088*^9}, {
   3.947008454335561*^9, 3.947008493023989*^9}, {3.9470085298191347`*^9, 
   3.9470085314053087`*^9}, {3.947008618295994*^9, 3.9470086591536827`*^9}, {
   3.9470087349269447`*^9, 3.947008756383365*^9}, {3.947078790085224*^9, 
   3.947078833705113*^9}, {3.9470788661247053`*^9, 3.947078990549944*^9}, {
   3.947079029907744*^9, 3.947079045771268*^9}, {3.947079095571644*^9, 
   3.947079104628843*^9}, {3.947079183147655*^9, 3.947079227109618*^9}, {
   3.947079289459439*^9, 3.947079542897884*^9}, {3.947079598048026*^9, 
   3.947079623022443*^9}, {3.947080172258836*^9, 3.947080176942568*^9}, {
   3.947080357146571*^9, 3.947080374879174*^9}, {3.94708042817068*^9, 
   3.947080457688369*^9}, {3.947080517277765*^9, 3.947080545276112*^9}, {
   3.947082809736431*^9, 3.947083103144842*^9}, {3.9470831336841903`*^9, 
   3.947083204674533*^9}, {3.947083415745219*^9, 3.947083419710425*^9}, {
   3.947765208730159*^9, 3.947765212137824*^9}, {3.947765534326928*^9, 
   3.947765542940445*^9}, {3.947765578145358*^9, 3.947765631966256*^9}, {
   3.94776573886884*^9, 3.947765906361903*^9}, {3.9477659369383793`*^9, 
   3.947765960803227*^9}, {3.947766454968656*^9, 3.947766465846158*^9}, {
   3.947766507580201*^9, 3.947766512469552*^9}, {3.947766592862848*^9, 
   3.947766693064354*^9}, {3.947767288660413*^9, 3.947767304705885*^9}, {
   3.947768011965941*^9, 3.947768037016737*^9}, {3.947768772687708*^9, 
   3.947768774903837*^9}, {3.947768806256391*^9, 3.947768865636663*^9}, {
   3.947769056128624*^9, 3.947769070821294*^9}, {3.947769102184947*^9, 
   3.947769178934717*^9}, {3.947769210603627*^9, 3.947769211058568*^9}, {
   3.94776926204452*^9, 3.947769326382971*^9}, {3.947769356547557*^9, 
   3.94776936075431*^9}, {3.947769416659593*^9, 3.94776946890039*^9}, {
   3.947769957505079*^9, 3.947770016756225*^9}, {3.947773716074295*^9, 
   3.947773719225247*^9}, {3.948322911152459*^9, 3.948322915889806*^9}, {
   3.948322981471202*^9, 3.94832298856994*^9}, {3.948832356793294*^9, 
   3.948832437091838*^9}, {3.948832529418812*^9, 3.948832549229122*^9}, {
   3.948832590032608*^9, 3.948832632185877*^9}, {3.948832796857953*^9, 
   3.948832796904763*^9}, {3.94883291838855*^9, 3.948832929434948*^9}, 
   3.962714045824646*^9, {3.9627140855761833`*^9, 3.962714118573938*^9}, {
   3.962723208847669*^9, 3.962723212344586*^9}, {3.963408361020343*^9, 
   3.9634084023793716`*^9}},ExpressionUUID->"b272699c-b13d-491a-9aed-\
d7fa9113bba3"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{
      Opacity[0], 
      PointBox[{{0.4107501820830298, 0.}, {7.451201747997087, 
       0.}}]}, {{}, {{{}, {{}, {{
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.45499999999999996`]]], 
            RGBColor[0.9, 0.36, 0.054]], 
           
           RectangleBox[{0.5487982520029133, 0.}, {1.4512017479970867`, 
            0.018491016411857148`}, "RoundingRadius" -> 0]}, {
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.45499999999999996`]]], 
            RGBColor[0.93383175, 0.53542575, 0.013499999999999998`]], 
           
           RectangleBox[{0.5487982520029133, 0.018491016411857148`}, {
            1.4512017479970867`, 0.061748329922072034`}, "RoundingRadius" -> 
            0]}, {
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.45499999999999996`]]], 
            RGBColor[0.6154649999999999, 0.5769505, 0.22538650000000005`]], 
           
           RectangleBox[{0.5487982520029133, 0.061748329922072034`}, {
            1.4512017479970867`, 0.12311323047345427`}, "RoundingRadius" -> 
            0]}, {
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.45499999999999996`]]], 
            RGBColor[0.30567775, 0.5269505, 0.5276540000000001]], 
           
           RectangleBox[{0.5487982520029133, 0.12311323047345427`}, {
            1.4512017479970867`, 0.12926970205917773`}, "RoundingRadius" -> 
            0]}, {
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.45499999999999996`]]], 
            RGBColor[0.365248, 0.427802, 0.758297]], 
           
           RectangleBox[{0.5487982520029133, 0.12926970205917773`}, {
            1.4512017479970867`, 1.}, "RoundingRadius" -> 
            0]}}}, {}, {}}, {{}, {{}, {{
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.45499999999999996`]]], 
            RGBColor[0.9, 0.36, 0.054]], 
           
           RectangleBox[{1.5487982520029133`, 0.}, {2.4512017479970867`, 
            0.031057922450933462`}, "RoundingRadius" -> 0]}, {
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.45499999999999996`]]], 
            RGBColor[0.93383175, 0.53542575, 0.013499999999999998`]], 
           
           RectangleBox[{1.5487982520029133`, 0.031057922450933462`}, {
            2.4512017479970867`, 0.07410244135950216}, "RoundingRadius" -> 
            0]}, {
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.45499999999999996`]]], 
            RGBColor[0.6154649999999999, 0.5769505, 0.22538650000000005`]], 
           
           RectangleBox[{1.5487982520029133`, 0.07410244135950216}, {
            2.4512017479970867`, 0.13715653422690283`}, "RoundingRadius" -> 
            0]}, {
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.45499999999999996`]]], 
            RGBColor[0.30567775, 0.5269505, 0.5276540000000001]], 
           
           RectangleBox[{1.5487982520029133`, 0.13715653422690283`}, {
            2.4512017479970867`, 0.14385830540928674`}, "RoundingRadius" -> 
            0]}, {
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.45499999999999996`]]], 
            RGBColor[0.365248, 0.427802, 0.758297]], 
           
           RectangleBox[{1.5487982520029133`, 0.14385830540928674`}, {
            2.4512017479970867`, 1.}, "RoundingRadius" -> 
            0]}}}, {}, {}}, {{}, {{}, {{
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.45499999999999996`]]], 
            RGBColor[0.9, 0.36, 0.054]], 
           RectangleBox[{2.5487982520029133`, 0.}, {3.4512017479970867`, 
            0.054451356579016154`}, "RoundingRadius" -> 0]}, {
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.45499999999999996`]]], 
            RGBColor[0.93383175, 0.53542575, 0.013499999999999998`]], 
           
           RectangleBox[{2.5487982520029133`, 0.054451356579016154`}, {
            3.4512017479970867`, 0.09175597260703644}, "RoundingRadius" -> 
            0]}, {
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.45499999999999996`]]], 
            RGBColor[0.6154649999999999, 0.5769505, 0.22538650000000005`]], 
           
           RectangleBox[{2.5487982520029133`, 0.09175597260703644}, {
            3.4512017479970867`, 0.14845522505096975`}, "RoundingRadius" -> 
            0]}, {
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.45499999999999996`]]], 
            RGBColor[0.30567775, 0.5269505, 0.5276540000000001]], 
           
           RectangleBox[{2.5487982520029133`, 0.14845522505096975`}, {
            3.4512017479970867`, 0.15670448010873544`}, "RoundingRadius" -> 
            0]}, {
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.45499999999999996`]]], 
            RGBColor[0.365248, 0.427802, 0.758297]], 
           
           RectangleBox[{2.5487982520029133`, 0.15670448010873544`}, {
            3.4512017479970867`, 1.}, "RoundingRadius" -> 
            0]}}}, {}, {}}, {{}, {{}, {{
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.45499999999999996`]]], 
            RGBColor[0.9, 0.36, 0.054]], 
           
           RectangleBox[{3.5487982520029133`, 0.}, {4.451201747997087, 
            0.11627940532819016`}, "RoundingRadius" -> 0]}, {
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.45499999999999996`]]], 
            RGBColor[0.93383175, 0.53542575, 0.013499999999999998`]], 
           
           RectangleBox[{3.5487982520029133`, 0.11627940532819016`}, {
            4.451201747997087, 0.15520914998100166`}, "RoundingRadius" -> 
            0]}, {
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.45499999999999996`]]], 
            RGBColor[0.6154649999999999, 0.5769505, 0.22538650000000005`]], 
           
           RectangleBox[{3.5487982520029133`, 0.15520914998100166`}, {
            4.451201747997087, 0.21615291011144083`}, "RoundingRadius" -> 
            0]}, {
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.45499999999999996`]]], 
            RGBColor[0.30567775, 0.5269505, 0.5276540000000001]], 
           
           RectangleBox[{3.5487982520029133`, 0.21615291011144083`}, {
            4.451201747997087, 0.22395425009499165`}, "RoundingRadius" -> 
            0]}, {
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.45499999999999996`]]], 
            RGBColor[0.365248, 0.427802, 0.758297]], 
           
           RectangleBox[{3.5487982520029133`, 0.22395425009499165`}, {
            4.451201747997087, 1.}, "RoundingRadius" -> 
            0]}}}, {}, {}}, {{}, {{}, {{
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.45499999999999996`]]], 
            RGBColor[0.9, 0.36, 0.054]], 
           
           RectangleBox[{4.548798252002913, 0.}, {5.451201747997087, 
            0.27490377806911154`}, "RoundingRadius" -> 0]}, {
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.45499999999999996`]]], 
            RGBColor[0.93383175, 0.53542575, 0.013499999999999998`]], 
           
           RectangleBox[{4.548798252002913, 0.27490377806911154`}, {
            5.451201747997087, 0.3067183589340924}, "RoundingRadius" -> 0]}, {
          
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.45499999999999996`]]], 
            RGBColor[0.6154649999999999, 0.5769505, 0.22538650000000005`]], 
           
           RectangleBox[{4.548798252002913, 0.3067183589340924}, {
            5.451201747997087, 0.36649864342851535`}, "RoundingRadius" -> 
            0]}, {
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.45499999999999996`]]], 
            RGBColor[0.30567775, 0.5269505, 0.5276540000000001]], 
           
           RectangleBox[{4.548798252002913, 0.36649864342851535`}, {
            5.451201747997087, 0.37243671085747937`}, "RoundingRadius" -> 
            0]}, {
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.45499999999999996`]]], 
            RGBColor[0.365248, 0.427802, 0.758297]], 
           
           RectangleBox[{4.548798252002913, 0.37243671085747937`}, {
            5.451201747997087, 1.}, "RoundingRadius" -> 
            0]}}}, {}, {}}, {{}, {{}, {{
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.45499999999999996`]]], 
            RGBColor[0.9, 0.36, 0.054]], 
           
           RectangleBox[{5.548798252002913, 0.}, {6.451201747997087, 
            0.10966418019314744`}, "RoundingRadius" -> 0]}, {
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.45499999999999996`]]], 
            RGBColor[0.93383175, 0.53542575, 0.013499999999999998`]], 
           
           RectangleBox[{5.548798252002913, 0.10966418019314744`}, {
            6.451201747997087, 0.1488869221866703}, "RoundingRadius" -> 0]}, {
          
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.45499999999999996`]]], 
            RGBColor[0.6154649999999999, 0.5769505, 0.22538650000000005`]], 
           
           RectangleBox[{5.548798252002913, 0.1488869221866703}, {
            6.451201747997087, 0.20828511130778132`}, "RoundingRadius" -> 
            0]}, {
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.45499999999999996`]]], 
            RGBColor[0.30567775, 0.5269505, 0.5276540000000001]], 
           
           RectangleBox[{5.548798252002913, 0.20828511130778132`}, {
            6.451201747997087, 0.2153555138441788}, "RoundingRadius" -> 0]}, {
          
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.45499999999999996`]]], 
            RGBColor[0.365248, 0.427802, 0.758297]], 
           
           RectangleBox[{5.548798252002913, 0.2153555138441788}, {
            6.451201747997087, 1.}, "RoundingRadius" -> 
            0]}}}, {}, {}}, {{}, {{}, {{
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.45499999999999996`]]], 
            RGBColor[0.9, 0.36, 0.054]], 
           
           RectangleBox[{6.548798252002913, 0.}, {7.451201747997087, 
            0.2166625179511728}, "RoundingRadius" -> 0]}, {
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.45499999999999996`]]], 
            RGBColor[0.93383175, 0.53542575, 0.013499999999999998`]], 
           
           RectangleBox[{6.548798252002913, 0.2166625179511728}, {
            7.451201747997087, 0.2514198180947822}, "RoundingRadius" -> 0]}, {
          
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.45499999999999996`]]], 
            RGBColor[0.6154649999999999, 0.5769505, 0.22538650000000005`]], 
           
           RectangleBox[{6.548798252002913, 0.2514198180947822}, {
            7.451201747997087, 0.3084346577309718}, "RoundingRadius" -> 0]}, {
          
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.45499999999999996`]]], 
            RGBColor[0.30567775, 0.5269505, 0.5276540000000001]], 
           
           RectangleBox[{6.548798252002913, 0.3084346577309718}, {
            7.451201747997087, 0.3141713738630924}, "RoundingRadius" -> 0]}, {
          
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.45499999999999996`]]], 
            RGBColor[0.365248, 0.427802, 0.758297]], 
           
           RectangleBox[{6.548798252002913, 0.3141713738630924}, {
            7.451201747997087, 1.}, "RoundingRadius" -> 
            0]}}}, {}, {}}}, {}, {}}, {}, {
      InsetBox[
       FormBox[
        StyleBox[
         TemplateBox[{
           TagBox[
            InterpretationBox[
             StyleBox["\"3424\"", ShowStringCharacters -> False], 3424, 
             Editable -> False], NumberForm[#, {
              DirectedInfinity[1], 1}]& ], "\" (\"", 
           TagBox[
            InterpretationBox[
             StyleBox["\"0.018\"", ShowStringCharacters -> False], 
             0.018491016411857148`, AutoDelete -> True], NumberForm[#, {
              DirectedInfinity[1], 3}]& ], "\")\""}, "RowDefault"], {
          Directive[FontSize -> 11.5]}, StripOnInput -> False], 
        TraditionalForm], {1., 0.009245508205928574}, 
       ImageScaled[{0.5, 0.5}]], 
      InsetBox[
       FormBox[
        StyleBox[
         TemplateBox[{
           TagBox[
            InterpretationBox[
             StyleBox["\"8010\"", ShowStringCharacters -> False], 8010, 
             Editable -> False], NumberForm[#, {
              DirectedInfinity[1], 1}]& ], "\" (\"", 
           TagBox[
            InterpretationBox[
             StyleBox["\"0.043\"", ShowStringCharacters -> False], 
             0.04325731351021488, AutoDelete -> True], NumberForm[#, {
              DirectedInfinity[1], 3}]& ], "\")\""}, "RowDefault"], {
          Directive[FontSize -> 11.5]}, StripOnInput -> False], 
        TraditionalForm], {1., 0.04011967316696459}, 
       ImageScaled[{0.5, 0.5}]], 
      InsetBox[
       FormBox[
        StyleBox[
         TemplateBox[{
           TagBox[
            InterpretationBox[
             StyleBox["\"11363\"", ShowStringCharacters -> False], 11363, 
             Editable -> False], NumberForm[#, {
              DirectedInfinity[1], 1}]& ], "\" (\"", 
           TagBox[
            InterpretationBox[
             StyleBox["\"0.061\"", ShowStringCharacters -> False], 
             0.06136490055138224, AutoDelete -> True], NumberForm[#, {
              DirectedInfinity[1], 3}]& ], "\")\""}, "RowDefault"], {
          Directive[FontSize -> 11.5]}, StripOnInput -> False], 
        TraditionalForm], {1., 0.09243078019776316}, 
       ImageScaled[{0.5, 0.5}]], 
      InsetBox[
       FormBox[
        StyleBox[
         TemplateBox[{
           TagBox[
            InterpretationBox[
             StyleBox["\"1140\"", ShowStringCharacters -> False], 1140, 
             Editable -> False], NumberForm[#, {
              DirectedInfinity[1], 1}]& ], "\" (\"", 
           TagBox[
            InterpretationBox[
             StyleBox[
              RowBox[{"\"6.16\"", "\[Times]", 
                SuperscriptBox["10", "\"-3\""]}], ShowStringCharacters -> 
              False], 0.006156471585723466, AutoDelete -> True], 
            ScientificForm[#, 3]& ], "\")\""}, "RowDefault"], {
          Directive[FontSize -> 11.5]}, StripOnInput -> False], 
        TraditionalForm], 
       Offset[{0, 4}, {1., 0.12926970205917773`}], 
       ImageScaled[{0.5, 0}]], 
      InsetBox[
       FormBox[
        StyleBox[
         TemplateBox[{
           TagBox[
            InterpretationBox[
             StyleBox["\"161234\"", ShowStringCharacters -> False], 161234, 
             Editable -> False], NumberForm[#, {
              DirectedInfinity[1], 1}]& ], "\" (\"", 
           TagBox[
            InterpretationBox[
             StyleBox["\"0.871\"", ShowStringCharacters -> False], 
             0.8707302979408222, AutoDelete -> True], NumberForm[#, {
              DirectedInfinity[1], 3}]& ], "\")\""}, "RowDefault"], {
          Directive[FontSize -> 11.5]}, StripOnInput -> False], 
        TraditionalForm], {1., 0.5646348510295889}, 
       ImageScaled[{0.5, 0.5}]], 
      InsetBox[
       FormBox[
        StyleBox[
         TemplateBox[{
           TagBox[
            InterpretationBox[
             StyleBox["\"6488\"", ShowStringCharacters -> False], 6488, 
             Editable -> False], NumberForm[#, {
              DirectedInfinity[1], 1}]& ], "\" (\"", 
           TagBox[
            InterpretationBox[
             StyleBox["\"0.031\"", ShowStringCharacters -> False], 
             0.031057922450933462`, AutoDelete -> True], NumberForm[#, {
              DirectedInfinity[1], 3}]& ], "\")\""}, "RowDefault"], {
          Directive[FontSize -> 11.5]}, StripOnInput -> False], 
        TraditionalForm], {2., 0.015528961225466731`}, 
       ImageScaled[{0.5, 0.5}]], 
      InsetBox[
       FormBox[
        StyleBox[
         TemplateBox[{
           TagBox[
            InterpretationBox[
             StyleBox["\"8992\"", ShowStringCharacters -> False], 8992, 
             Editable -> False], NumberForm[#, {
              DirectedInfinity[1], 1}]& ], "\" (\"", 
           TagBox[
            InterpretationBox[
             StyleBox["\"0.043\"", ShowStringCharacters -> False], 
             0.043044518908568696`, AutoDelete -> True], NumberForm[#, {
              DirectedInfinity[1], 3}]& ], "\")\""}, "RowDefault"], {
          Directive[FontSize -> 11.5]}, StripOnInput -> False], 
        TraditionalForm], {2., 0.05258018190521781}, 
       ImageScaled[{0.5, 0.5}]], 
      InsetBox[
       FormBox[
        StyleBox[
         TemplateBox[{
           TagBox[
            InterpretationBox[
             StyleBox["\"13172\"", ShowStringCharacters -> False], 13172, 
             Editable -> False], NumberForm[#, {
              DirectedInfinity[1], 1}]& ], "\" (\"", 
           TagBox[
            InterpretationBox[
             StyleBox["\"0.063\"", ShowStringCharacters -> False], 
             0.06305409286740067, AutoDelete -> True], NumberForm[#, {
              DirectedInfinity[1], 3}]& ], "\")\""}, "RowDefault"], {
          Directive[FontSize -> 11.5]}, StripOnInput -> False], 
        TraditionalForm], {2., 0.1056294877932025}, 
       ImageScaled[{0.5, 0.5}]], 
      InsetBox[
       FormBox[
        StyleBox[
         TemplateBox[{
           TagBox[
            InterpretationBox[
             StyleBox["\"1400\"", ShowStringCharacters -> False], 1400, 
             Editable -> False], NumberForm[#, {
              DirectedInfinity[1], 1}]& ], "\" (\"", 
           TagBox[
            InterpretationBox[
             StyleBox[
              RowBox[{"\"6.7\"", "\[Times]", 
                SuperscriptBox["10", "\"-3\""]}], ShowStringCharacters -> 
              False], 0.006701771182383916, AutoDelete -> True], 
            ScientificForm[#, 3]& ], "\")\""}, "RowDefault"], {
          Directive[FontSize -> 11.5]}, StripOnInput -> False], 
        TraditionalForm], 
       Offset[{0, 4}, {2., 0.14385830540928674`}], 
       ImageScaled[{0.5, 0}]], 
      InsetBox[
       FormBox[
        StyleBox[
         TemplateBox[{
           TagBox[
            InterpretationBox[
             StyleBox["\"178848\"", ShowStringCharacters -> False], 178848, 
             Editable -> False], NumberForm[#, {
              DirectedInfinity[1], 1}]& ], "\" (\"", 
           TagBox[
            InterpretationBox[
             StyleBox["\"0.856\"", ShowStringCharacters -> False], 
             0.8561416945907132, AutoDelete -> True], NumberForm[#, {
              DirectedInfinity[1], 3}]& ], "\")\""}, "RowDefault"], {
          Directive[FontSize -> 11.5]}, StripOnInput -> False], 
        TraditionalForm], {2., 0.5719291527046434}, 
       ImageScaled[{0.5, 0.5}]], 
      InsetBox[
       FormBox[
        StyleBox[
         TemplateBox[{
           TagBox[
            InterpretationBox[
             StyleBox["\"10416\"", ShowStringCharacters -> False], 10416, 
             Editable -> False], NumberForm[#, {
              DirectedInfinity[1], 1}]& ], "\" (\"", 
           TagBox[
            InterpretationBox[
             StyleBox["\"0.054\"", ShowStringCharacters -> False], 
             0.054451356579016154`, AutoDelete -> True], NumberForm[#, {
              DirectedInfinity[1], 3}]& ], "\")\""}, "RowDefault"], {
          Directive[FontSize -> 11.5]}, StripOnInput -> False], 
        TraditionalForm], {3., 0.027225678289508077`}, 
       ImageScaled[{0.5, 0.5}]], 
      InsetBox[
       FormBox[
        StyleBox[
         TemplateBox[{
           TagBox[
            InterpretationBox[
             StyleBox["\"7136\"", ShowStringCharacters -> False], 7136, 
             Editable -> False], NumberForm[#, {
              DirectedInfinity[1], 1}]& ], "\" (\"", 
           TagBox[
            InterpretationBox[
             StyleBox["\"0.037\"", ShowStringCharacters -> False], 
             0.037304616028020286`, AutoDelete -> True], NumberForm[#, {
              DirectedInfinity[1], 3}]& ], "\")\""}, "RowDefault"], {
          Directive[FontSize -> 11.5]}, StripOnInput -> False], 
        TraditionalForm], {3., 0.0731036645930263}, 
       ImageScaled[{0.5, 0.5}]], 
      InsetBox[
       FormBox[
        StyleBox[
         TemplateBox[{
           TagBox[
            InterpretationBox[
             StyleBox["\"10846\"", ShowStringCharacters -> False], 10846, 
             Editable -> False], NumberForm[#, {
              DirectedInfinity[1], 1}]& ], "\" (\"", 
           TagBox[
            InterpretationBox[
             StyleBox["\"0.057\"", ShowStringCharacters -> False], 
             0.0566992524439333, AutoDelete -> True], NumberForm[#, {
              DirectedInfinity[1], 3}]& ], "\")\""}, "RowDefault"], {
          Directive[FontSize -> 11.5]}, StripOnInput -> False], 
        TraditionalForm], {3., 0.1201055988290031}, 
       ImageScaled[{0.5, 0.5}]], 
      InsetBox[
       FormBox[
        StyleBox[
         TemplateBox[{
           TagBox[
            InterpretationBox[
             StyleBox["\"1578\"", ShowStringCharacters -> False], 1578, 
             Editable -> False], NumberForm[#, {
              DirectedInfinity[1], 1}]& ], "\" (\"", 
           TagBox[
            InterpretationBox[
             StyleBox[
              RowBox[{"\"8.25\"", "\[Times]", 
                SuperscriptBox["10", "\"-3\""]}], ShowStringCharacters -> 
              False], 0.008249255057765695, AutoDelete -> True], 
            ScientificForm[#, 3]& ], "\")\""}, "RowDefault"], {
          Directive[FontSize -> 11.5]}, StripOnInput -> False], 
        TraditionalForm], 
       Offset[{0, 4}, {3., 0.15670448010873544`}], 
       ImageScaled[{0.5, 0}]], 
      InsetBox[
       FormBox[
        StyleBox[
         TemplateBox[{
           TagBox[
            InterpretationBox[
             StyleBox["\"161314\"", ShowStringCharacters -> False], 161314, 
             Editable -> False], NumberForm[#, {
              DirectedInfinity[1], 1}]& ], "\" (\"", 
           TagBox[
            InterpretationBox[
             StyleBox["\"0.843\"", ShowStringCharacters -> False], 
             0.8432955198912646, AutoDelete -> True], NumberForm[#, {
              DirectedInfinity[1], 3}]& ], "\")\""}, "RowDefault"], {
          Directive[FontSize -> 11.5]}, StripOnInput -> False], 
        TraditionalForm], {3., 0.5783522400543677}, 
       ImageScaled[{0.5, 0.5}]], 
      InsetBox[
       FormBox[
        StyleBox[
         TemplateBox[{
           TagBox[
            InterpretationBox[
             StyleBox["\"24176\"", ShowStringCharacters -> False], 24176, 
             Editable -> False], NumberForm[#, {
              DirectedInfinity[1], 1}]& ], "\" (\"", 
           TagBox[
            InterpretationBox[
             StyleBox["\"0.116\"", ShowStringCharacters -> False], 
             0.11627940532819016`, AutoDelete -> True], NumberForm[#, {
              DirectedInfinity[1], 3}]& ], "\")\""}, "RowDefault"], {
          Directive[FontSize -> 11.5]}, StripOnInput -> False], 
        TraditionalForm], {4., 0.05813970266409508}, 
       ImageScaled[{0.5, 0.5}]], 
      InsetBox[
       FormBox[
        StyleBox[
         TemplateBox[{
           TagBox[
            InterpretationBox[
             StyleBox["\"8094\"", ShowStringCharacters -> False], 8094, 
             Editable -> False], NumberForm[#, {
              DirectedInfinity[1], 1}]& ], "\" (\"", 
           TagBox[
            InterpretationBox[
             StyleBox["\"0.039\"", ShowStringCharacters -> False], 
             0.038929744652811515`, AutoDelete -> True], NumberForm[#, {
              DirectedInfinity[1], 3}]& ], "\")\""}, "RowDefault"], {
          Directive[FontSize -> 11.5]}, StripOnInput -> False], 
        TraditionalForm], {4., 0.1357442776545959}, 
       ImageScaled[{0.5, 0.5}]], 
      InsetBox[
       FormBox[
        StyleBox[
         TemplateBox[{
           TagBox[
            InterpretationBox[
             StyleBox["\"12671\"", ShowStringCharacters -> False], 12671, 
             Editable -> False], NumberForm[#, {
              DirectedInfinity[1], 1}]& ], "\" (\"", 
           TagBox[
            InterpretationBox[
             StyleBox["\"0.061\"", ShowStringCharacters -> False], 
             0.06094376013043917, AutoDelete -> True], NumberForm[#, {
              DirectedInfinity[1], 3}]& ], "\")\""}, "RowDefault"], {
          Directive[FontSize -> 11.5]}, StripOnInput -> False], 
        TraditionalForm], {4., 0.18568103004622125`}, 
       ImageScaled[{0.5, 0.5}]], 
      InsetBox[
       FormBox[
        StyleBox[
         TemplateBox[{
           TagBox[
            InterpretationBox[
             StyleBox["\"1622\"", ShowStringCharacters -> False], 1622, 
             Editable -> False], NumberForm[#, {
              DirectedInfinity[1], 1}]& ], "\" (\"", 
           TagBox[
            InterpretationBox[
             StyleBox[
              RowBox[{"\"7.8\"", "\[Times]", 
                SuperscriptBox["10", "\"-3\""]}], ShowStringCharacters -> 
              False], 0.007801339983550812, AutoDelete -> True], 
            ScientificForm[#, 3]& ], "\")\""}, "RowDefault"], {
          Directive[FontSize -> 11.5]}, StripOnInput -> False], 
        TraditionalForm], 
       Offset[{0, 4}, {4., 0.22395425009499165`}], 
       ImageScaled[{0.5, 0}]], 
      InsetBox[
       FormBox[
        StyleBox[
         TemplateBox[{
           TagBox[
            InterpretationBox[
             StyleBox["\"161350\"", ShowStringCharacters -> False], 161350, 
             Editable -> False], NumberForm[#, {
              DirectedInfinity[1], 1}]& ], "\" (\"", 
           TagBox[
            InterpretationBox[
             StyleBox["\"0.776\"", ShowStringCharacters -> False], 
             0.7760457499050083, AutoDelete -> True], NumberForm[#, {
              DirectedInfinity[1], 3}]& ], "\")\""}, "RowDefault"], {
          Directive[FontSize -> 11.5]}, StripOnInput -> False], 
        TraditionalForm], {4., 0.6119771250474958}, 
       ImageScaled[{0.5, 0.5}]], 
      InsetBox[
       FormBox[
        StyleBox[
         TemplateBox[{
           TagBox[
            InterpretationBox[
             StyleBox["\"78424\"", ShowStringCharacters -> False], 78424, 
             Editable -> False], NumberForm[#, {
              DirectedInfinity[1], 1}]& ], "\" (\"", 
           TagBox[
            InterpretationBox[
             StyleBox["\"0.275\"", ShowStringCharacters -> False], 
             0.27490377806911154`, AutoDelete -> True], NumberForm[#, {
              DirectedInfinity[1], 3}]& ], "\")\""}, "RowDefault"], {
          Directive[FontSize -> 11.5]}, StripOnInput -> False], 
        TraditionalForm], {5., 0.13745188903455577`}, 
       ImageScaled[{0.5, 0.5}]], 
      InsetBox[
       FormBox[
        StyleBox[
         TemplateBox[{
           TagBox[
            InterpretationBox[
             StyleBox["\"9076\"", ShowStringCharacters -> False], 9076, 
             Editable -> False], NumberForm[#, {
              DirectedInfinity[1], 1}]& ], "\" (\"", 
           TagBox[
            InterpretationBox[
             StyleBox["\"0.032\"", ShowStringCharacters -> False], 
             0.031814580864980825`, AutoDelete -> True], NumberForm[#, {
              DirectedInfinity[1], 3}]& ], "\")\""}, "RowDefault"], {
          Directive[FontSize -> 11.5]}, StripOnInput -> False], 
        TraditionalForm], {5., 0.290811068501602}, 
       ImageScaled[{0.5, 0.5}]], 
      InsetBox[
       FormBox[
        StyleBox[
         TemplateBox[{
           TagBox[
            InterpretationBox[
             StyleBox["\"17054\"", ShowStringCharacters -> False], 17054, 
             Editable -> False], NumberForm[#, {
              DirectedInfinity[1], 1}]& ], "\" (\"", 
           TagBox[
            InterpretationBox[
             StyleBox["\"0.060\"", ShowStringCharacters -> False], 
             0.059780284494422985`, AutoDelete -> True], NumberForm[#, {
              DirectedInfinity[1], 3}]& ], "\")\""}, "RowDefault"], {
          Directive[FontSize -> 11.5]}, StripOnInput -> False], 
        TraditionalForm], {5., 0.33660850118130387`}, 
       ImageScaled[{0.5, 0.5}]], 
      InsetBox[
       FormBox[
        StyleBox[
         TemplateBox[{
           TagBox[
            InterpretationBox[
             StyleBox["\"1694\"", ShowStringCharacters -> False], 1694, 
             Editable -> False], NumberForm[#, {
              DirectedInfinity[1], 1}]& ], "\" (\"", 
           TagBox[
            InterpretationBox[
             StyleBox[
              RowBox[{"\"5.94\"", "\[Times]", 
                SuperscriptBox["10", "\"-3\""]}], ShowStringCharacters -> 
              False], 0.005938067428964028, AutoDelete -> True], 
            ScientificForm[#, 3]& ], "\")\""}, "RowDefault"], {
          Directive[FontSize -> 11.5]}, StripOnInput -> False], 
        TraditionalForm], 
       Offset[{0, 4}, {5., 0.37243671085747937`}], 
       ImageScaled[{0.5, 0}]], 
      InsetBox[
       FormBox[
        StyleBox[
         TemplateBox[{
           TagBox[
            InterpretationBox[
             StyleBox["\"179030\"", ShowStringCharacters -> False], 179030, 
             Editable -> False], NumberForm[#, {
              DirectedInfinity[1], 1}]& ], "\" (\"", 
           TagBox[
            InterpretationBox[
             StyleBox["\"0.628\"", ShowStringCharacters -> False], 
             0.6275632891425206, AutoDelete -> True], NumberForm[#, {
              DirectedInfinity[1], 3}]& ], "\")\""}, "RowDefault"], {
          Directive[FontSize -> 11.5]}, StripOnInput -> False], 
        TraditionalForm], {5., 0.6862183554287397}, 
       ImageScaled[{0.5, 0.5}]], 
      InsetBox[
       FormBox[
        StyleBox[
         TemplateBox[{
           TagBox[
            InterpretationBox[
             StyleBox["\"22552\"", ShowStringCharacters -> False], 22552, 
             Editable -> False], NumberForm[#, {
              DirectedInfinity[1], 1}]& ], "\" (\"", 
           TagBox[
            InterpretationBox[
             StyleBox["\"0.110\"", ShowStringCharacters -> False], 
             0.10966418019314744`, AutoDelete -> True], NumberForm[#, {
              DirectedInfinity[1], 3}]& ], "\")\""}, "RowDefault"], {
          Directive[FontSize -> 11.5]}, StripOnInput -> False], 
        TraditionalForm], {6., 0.05483209009657372}, 
       ImageScaled[{0.5, 0.5}]], 
      InsetBox[
       FormBox[
        StyleBox[
         TemplateBox[{
           TagBox[
            InterpretationBox[
             StyleBox["\"8066\"", ShowStringCharacters -> False], 8066, 
             Editable -> False], NumberForm[#, {
              DirectedInfinity[1], 1}]& ], "\" (\"", 
           TagBox[
            InterpretationBox[
             StyleBox["\"0.039\"", ShowStringCharacters -> False], 
             0.03922274199352285, AutoDelete -> True], NumberForm[#, {
              DirectedInfinity[1], 3}]& ], "\")\""}, "RowDefault"], {
          Directive[FontSize -> 11.5]}, StripOnInput -> False], 
        TraditionalForm], {6., 0.12927555118990885`}, 
       ImageScaled[{0.5, 0.5}]], 
      InsetBox[
       FormBox[
        StyleBox[
         TemplateBox[{
           TagBox[
            InterpretationBox[
             StyleBox["\"12215\"", ShowStringCharacters -> False], 12215, 
             Editable -> False], NumberForm[#, {
              DirectedInfinity[1], 1}]& ], "\" (\"", 
           TagBox[
            InterpretationBox[
             StyleBox["\"0.059\"", ShowStringCharacters -> False], 
             0.059398189121111035`, AutoDelete -> True], NumberForm[#, {
              DirectedInfinity[1], 3}]& ], "\")\""}, "RowDefault"], {
          Directive[FontSize -> 11.5]}, StripOnInput -> False], 
        TraditionalForm], {6., 0.1785860167472258}, 
       ImageScaled[{0.5, 0.5}]], 
      InsetBox[
       FormBox[
        StyleBox[
         TemplateBox[{
           TagBox[
            InterpretationBox[
             StyleBox["\"1454\"", ShowStringCharacters -> False], 1454, 
             Editable -> False], NumberForm[#, {
              DirectedInfinity[1], 1}]& ], "\" (\"", 
           TagBox[
            InterpretationBox[
             StyleBox[
              RowBox[{"\"7.07\"", "\[Times]", 
                SuperscriptBox["10", "\"-3\""]}], ShowStringCharacters -> 
              False], 0.007070402536397498, AutoDelete -> True], 
            ScientificForm[#, 3]& ], "\")\""}, "RowDefault"], {
          Directive[FontSize -> 11.5]}, StripOnInput -> False], 
        TraditionalForm], 
       Offset[{0, 4}, {6., 0.2153555138441788}], 
       ImageScaled[{0.5, 0}]], 
      InsetBox[
       FormBox[
        StyleBox[
         TemplateBox[{
           TagBox[
            InterpretationBox[
             StyleBox["\"161359\"", ShowStringCharacters -> False], 161359, 
             Editable -> False], NumberForm[#, {
              DirectedInfinity[1], 1}]& ], "\" (\"", 
           TagBox[
            InterpretationBox[
             StyleBox["\"0.785\"", ShowStringCharacters -> False], 
             0.7846444861558212, AutoDelete -> True], NumberForm[#, {
              DirectedInfinity[1], 3}]& ], "\")\""}, "RowDefault"], {
          Directive[FontSize -> 11.5]}, StripOnInput -> False], 
        TraditionalForm], {6., 0.6076777569220894}, 
       ImageScaled[{0.5, 0.5}]], 
      InsetBox[
       FormBox[
        StyleBox[
         TemplateBox[{
           TagBox[
            InterpretationBox[
             StyleBox["\"56576\"", ShowStringCharacters -> False], 56576, 
             Editable -> False], NumberForm[#, {
              DirectedInfinity[1], 1}]& ], "\" (\"", 
           TagBox[
            InterpretationBox[
             StyleBox["\"0.217\"", ShowStringCharacters -> False], 
             0.2166625179511728, AutoDelete -> True], NumberForm[#, {
              DirectedInfinity[1], 3}]& ], "\")\""}, "RowDefault"], {
          Directive[FontSize -> 11.5]}, StripOnInput -> False], 
        TraditionalForm], {7., 0.1083312589755864}, 
       ImageScaled[{0.5, 0.5}]], 
      InsetBox[
       FormBox[
        StyleBox[
         TemplateBox[{
           TagBox[
            InterpretationBox[
             StyleBox["\"9076\"", ShowStringCharacters -> False], 9076, 
             Editable -> False], NumberForm[#, {
              DirectedInfinity[1], 1}]& ], "\" (\"", 
           TagBox[
            InterpretationBox[
             StyleBox["\"0.035\"", ShowStringCharacters -> False], 
             0.03475730014360938, AutoDelete -> True], NumberForm[#, {
              DirectedInfinity[1], 3}]& ], "\")\""}, "RowDefault"], {
          Directive[FontSize -> 11.5]}, StripOnInput -> False], 
        TraditionalForm], {7., 0.2340411680229775}, 
       ImageScaled[{0.5, 0.5}]], 
      InsetBox[
       FormBox[
        StyleBox[
         TemplateBox[{
           TagBox[
            InterpretationBox[
             StyleBox["\"14888\"", ShowStringCharacters -> False], 14888, 
             Editable -> False], NumberForm[#, {
              DirectedInfinity[1], 1}]& ], "\" (\"", 
           TagBox[
            InterpretationBox[
             StyleBox["\"0.057\"", ShowStringCharacters -> False], 
             0.057014839636189564`, AutoDelete -> True], NumberForm[#, {
              DirectedInfinity[1], 3}]& ], "\")\""}, "RowDefault"], {
          Directive[FontSize -> 11.5]}, StripOnInput -> False], 
        TraditionalForm], {7., 0.279927237912877}, 
       ImageScaled[{0.5, 0.5}]], 
      InsetBox[
       FormBox[
        StyleBox[
         TemplateBox[{
           TagBox[
            InterpretationBox[
             StyleBox["\"1498\"", ShowStringCharacters -> False], 1498, 
             Editable -> False], NumberForm[#, {
              DirectedInfinity[1], 1}]& ], "\" (\"", 
           TagBox[
            InterpretationBox[
             StyleBox[
              RowBox[{"\"5.74\"", "\[Times]", 
                SuperscriptBox["10", "\"-3\""]}], ShowStringCharacters -> 
              False], 0.0057367161321206315`, AutoDelete -> True], 
            ScientificForm[#, 3]& ], "\")\""}, "RowDefault"], {
          Directive[FontSize -> 11.5]}, StripOnInput -> False], 
        TraditionalForm], 
       Offset[{0, 4}, {7., 0.3141713738630924}], 
       ImageScaled[{0.5, 0}]], 
      InsetBox[
       FormBox[
        StyleBox[
         TemplateBox[{
           TagBox[
            InterpretationBox[
             StyleBox["\"179087\"", ShowStringCharacters -> False], 179087, 
             Editable -> False], NumberForm[#, {
              DirectedInfinity[1], 1}]& ], "\" (\"", 
           TagBox[
            InterpretationBox[
             StyleBox["\"0.686\"", ShowStringCharacters -> False], 
             0.6858286261369076, AutoDelete -> True], NumberForm[#, {
              DirectedInfinity[1], 3}]& ], "\")\""}, "RowDefault"], {
          Directive[FontSize -> 11.5]}, StripOnInput -> False], 
        TraditionalForm], {7., 0.6570856869315462}, 
       ImageScaled[{0.5, 0.5}]]}, {}, {}, {}}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0.4107501820830298, 0.}, 
     CoordinatesToolOptions -> {"DisplayFunction" -> ({
         Identity[
          Part[#, 1]], 
         Identity[
          Part[#, 2]]}& ), "CopiedValueFunction" -> ({
         Identity[
          Part[#, 1]], 
         Identity[
          Part[#, 2]]}& )}, Epilog -> {
       StyleBox[
        InsetBox[
         FormBox[
          StyleBox["185171", 
           GrayLevel[0], StripOnInput -> False], TraditionalForm], {
         1, 1.025}], {11.5}, StripOnInput -> False], 
       StyleBox[
        InsetBox[
         FormBox[
          StyleBox["208900", 
           GrayLevel[0], StripOnInput -> False], TraditionalForm], {
         2, 1.025}], {11.5}, StripOnInput -> False], 
       StyleBox[
        InsetBox[
         FormBox[
          StyleBox["191290", 
           GrayLevel[0], StripOnInput -> False], TraditionalForm], {
         3, 1.025}], {11.5}, StripOnInput -> False], 
       StyleBox[
        InsetBox[
         FormBox[
          StyleBox["207913", 
           GrayLevel[0], StripOnInput -> False], TraditionalForm], {
         4, 1.025}], {11.5}, StripOnInput -> False], 
       StyleBox[
        InsetBox[
         FormBox[
          StyleBox["285278", 
           GrayLevel[0], StripOnInput -> False], TraditionalForm], {
         5, 1.025}], {11.5}, StripOnInput -> False], 
       StyleBox[
        InsetBox[
         FormBox[
          StyleBox["205646", 
           GrayLevel[0], StripOnInput -> False], TraditionalForm], {
         6, 1.025}], {11.5}, StripOnInput -> False], 
       StyleBox[
        InsetBox[
         FormBox[
          StyleBox["261125", 
           GrayLevel[0], StripOnInput -> False], TraditionalForm], {
         7, 1.025}], {11.5}, StripOnInput -> False]}, Frame -> True, 
     FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
     Directive[FontSize -> 14], 
     FrameTicks -> {{Automatic, Automatic}, {{{1., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {1., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {1., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {1., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {1., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {1.5, 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {1., 
          FormBox["\"NH3-BF3\"", TraditionalForm], {0, 0}}, {2., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {2., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {2., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {2., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {2., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {2.5, 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {2., 
          FormBox["\"DMTM Molecular\"", TraditionalForm], {0, 0}}, {3., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {3., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {3., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {3., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {3., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {3.5, 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {3., 
          FormBox["\"DMTM 3x3\"", TraditionalForm], {0, 0}}, {4., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {4., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {4., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {4., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {4., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {4.5, 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {4., 
          FormBox["\"DMTM 5x5\"", TraditionalForm], {0, 0}}, {5., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {5., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {5., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {5., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {5., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {5.5, 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {5., 
          FormBox["\"DMTM 9x9\"", TraditionalForm], {0, 0}}, {6., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {6., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {6., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {6., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {6., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {6.5, 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {6., 
          FormBox["\"WGS 3x3x2\"", TraditionalForm], {0, 0}}, {7., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {7., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {7., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {7., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {7., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {7., 
          FormBox["\"WGS 5x5x2\"", TraditionalForm], {0, 0}}}, {{1., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {1., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {1., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {1., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {1., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {1.5, 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {2., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {2., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {2., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {2., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {2., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {2.5, 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {3., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {3., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {3., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {3., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {3., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {3.5, 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {4., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {4., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {4., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {4., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {4., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {4.5, 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {5., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {5., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {5., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {5., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {5., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {5.5, 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {6., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {6., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {6., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {6., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {6., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {6.5, 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {7., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {7., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {7., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {7., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {7., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}}}}, 
     GridLines -> {{0}, {0}}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 800, LabelStyle -> 
     Directive[FontSize -> 11.5], PlotLabel -> 
     FormBox["\"Compiling Cost Normalized Distribution\"", TraditionalForm], 
     PlotRange -> {{All, All}, {All, All}}, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {None, 
        Scaled[0.05]}}, Ticks -> {None, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{
       StyleBox["\"Shared\"", 14, StripOnInput -> False], 
       StyleBox["\"Kin\"", 14, StripOnInput -> False], 
       StyleBox["\"Coul\"", 14, StripOnInput -> False], 
       StyleBox["\"Loc\"", 14, StripOnInput -> False], 
       StyleBox["\"NL\"", 14, StripOnInput -> False]}, "SwatchLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Thickness[Small], 
                    Opacity[0.45499999999999996`]]], 
                    RGBColor[0.365248, 0.427802, 0.758297]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Thickness[Small], 
                    Opacity[0.45499999999999996`]]], 
                    RGBColor[0.30567775, 0.5269505, 0.5276540000000001]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Thickness[Small], 
                    Opacity[0.45499999999999996`]]], 
                    RGBColor[
                    0.6154649999999999, 0.5769505, 0.22538650000000005`]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Thickness[Small], 
                    Opacity[0.45499999999999996`]]], 
                    RGBColor[0.93383175, 0.53542575, 0.013499999999999998`]], 
                    
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Thickness[Small], 
                    Opacity[0.45499999999999996`]]], 
                    RGBColor[0.9, 0.36, 0.054]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.3}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
          Directive[FontSize -> 11.5], FontFamily -> "Arial"}, Background -> 
         Automatic, StripOnInput -> False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.45499999999999996`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    
                    TemplateBox[<|"color" -> GrayLevel[1]|>, 
                    "GrayLevelColorSwatchTemplate"]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.45499999999999996`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    
                    TemplateBox[<|"color" -> GrayLevel[1]|>, 
                    "GrayLevelColorSwatchTemplate"]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.45499999999999996`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    
                    TemplateBox[<|"color" -> GrayLevel[1]|>, 
                    "GrayLevelColorSwatchTemplate"]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.45499999999999996`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    
                    TemplateBox[<|"color" -> GrayLevel[1]|>, 
                    "GrayLevelColorSwatchTemplate"]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.45499999999999996`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    
                    TemplateBox[<|"color" -> GrayLevel[1]|>, 
                    "GrayLevelColorSwatchTemplate"]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.45499999999999996`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    
                    TemplateBox[<|"color" -> GrayLevel[1]|>, 
                    "GrayLevelColorSwatchTemplate"]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.45499999999999996`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    
                    TemplateBox[<|"color" -> GrayLevel[1]|>, 
                    "GrayLevelColorSwatchTemplate"]}], "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.45499999999999996`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    
                    TemplateBox[<|"color" -> RGBColor[0.9, 0.36, 0.054]|>, 
                    "RGBColorSwatchTemplate"]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.45499999999999996`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> 
                    RGBColor[0.93383175, 0.53542575, 0.013499999999999998`]|>,
                     "RGBColorSwatchTemplate"]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.45499999999999996`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> 
                    RGBColor[
                    0.6154649999999999, 0.5769505, 0.22538650000000005`]|>, 
                    "RGBColorSwatchTemplate"]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.45499999999999996`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> 
                    RGBColor[0.30567775, 0.5269505, 0.5276540000000001]|>, 
                    "RGBColorSwatchTemplate"]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.45499999999999996`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.365248, 0.427802, 0.758297]|>, 
                    "RGBColorSwatchTemplate"]}], "]"}]}], "}"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               RowBox[{"{", "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}]}], 
             "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", "None", "}"}], ",", 
                 RowBox[{"{", 
                   
                   RowBox[{
                    "Automatic", ",", "Automatic", ",", "Automatic", ",", 
                    "Automatic", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"Directive", "[", 
                    RowBox[{"FontSize", "\[Rule]", "11.5`"}], "]"}], "}"}], 
                 ",", 
                 RowBox[{"{", 
                   RowBox[{"Directive", "[", 
                    RowBox[{"FontSize", "\[Rule]", "11.5`"}], "]"}], "}"}]}], 
               "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"ReversedColumn\""}]}], 
         "]"}]& ), Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.962723227663767*^9, 3.962808552929947*^9, 
  3.962993321104412*^9},
 CellLabel->"Out[90]=",ExpressionUUID->"174069fb-31b5-4c1b-82d3-4414050b141a"]
}, Open  ]],

Cell["\<\
The numbers inside each color bar indicate the values of the cost for that \
term and in parenthesis, the relative fraction of the total for that term. \
The total compilation cost (sum of all global values per term) is shown on \
top of each bar stack. The numbers above the green bar are for the local \
term. We can see that the non-local terms appear to have the dominating costs \
across all instances. (see Fig. 7)\
\>", "Text",
 CellChangeTimes->{{3.963409094094016*^9, 3.9634091526038113`*^9}, {
  3.963409930636357*^9, 3.9634099698287277`*^9}, {3.963568781212668*^9, 
  3.963568814526739*^9}},ExpressionUUID->"8990c213-80ce-44db-81a7-\
28a2b7c3b02a"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Figure 2: Summary of Total Time Evolution Cost w.r.t. Different Time\
\>", "Subsection",
 CellChangeTimes->{{3.9469453373416567`*^9, 3.9469453373433867`*^9}, {
   3.9469456001064863`*^9, 3.9469457300701423`*^9}, {3.946945768839113*^9, 
   3.946945979333909*^9}, {3.946946010710558*^9, 3.946946081628931*^9}, {
   3.946946167164192*^9, 3.9469461721325617`*^9}, {3.946946241986129*^9, 
   3.9469462507081137`*^9}, 3.946946288861115*^9, {3.946946415217251*^9, 
   3.946946416931638*^9}, {3.946946462450223*^9, 3.946946469320965*^9}, {
   3.946946588205173*^9, 3.946946627012847*^9}, {3.9469466627886677`*^9, 
   3.946946698067267*^9}, {3.946946917690619*^9, 3.9469470328140583`*^9}, {
   3.946947074404286*^9, 3.946947078389817*^9}, 3.946947129824486*^9, {
   3.94694720755707*^9, 3.946947219762057*^9}, {3.946947318970175*^9, 
   3.9469473558206244`*^9}, {3.946947431251734*^9, 3.946947470429691*^9}, {
   3.946947606248897*^9, 3.94694761759408*^9}, {3.946948255903349*^9, 
   3.946948317109944*^9}, {3.946949257326741*^9, 3.946949465543868*^9}, {
   3.946949566094829*^9, 3.946949672097187*^9}, {3.946949719910133*^9, 
   3.946949752271507*^9}, {3.946949790618905*^9, 3.946949896867989*^9}, {
   3.9469499401015*^9, 3.946949970094371*^9}, {3.946950043093742*^9, 
   3.946950050895506*^9}, {3.946950111409999*^9, 3.946950123118082*^9}, {
   3.9469502012999887`*^9, 3.946950221941684*^9}, {3.9469864897119093`*^9, 
   3.946986507827303*^9}, {3.946986602522801*^9, 3.9469866709480267`*^9}, {
   3.946986951223599*^9, 3.9469869889790287`*^9}, {3.94698730250369*^9, 
   3.946987346345499*^9}, {3.946987378338692*^9, 3.946987391231485*^9}, 
   3.94698747246084*^9, {3.946987551176155*^9, 3.946987666324455*^9}, {
   3.946987755265584*^9, 3.946987792830069*^9}, {3.946987891867255*^9, 
   3.946987902203516*^9}, {3.94698793604347*^9, 3.946987936375279*^9}, {
   3.946988028880817*^9, 3.9469880457952757`*^9}, {3.946988130955018*^9, 
   3.946988215878443*^9}, {3.946988249286535*^9, 3.946988345359118*^9}, {
   3.946988411767774*^9, 3.946988479021977*^9}, {3.9469885110011997`*^9, 
   3.946988511261885*^9}, {3.9469885545244837`*^9, 3.946988555120453*^9}, 
   3.946988588082923*^9, {3.946988630460907*^9, 3.94698869908023*^9}, {
   3.9469889311812963`*^9, 3.94698896691114*^9}, {3.946989099051114*^9, 
   3.946989183225954*^9}, {3.946989240279502*^9, 3.946989377383128*^9}, {
   3.946989422499642*^9, 3.9469894276510553`*^9}, {3.946989477600202*^9, 
   3.946989489742879*^9}, {3.946989523981434*^9, 3.9469895905548973`*^9}, {
   3.946989658972968*^9, 3.946989685156836*^9}, {3.946989723237856*^9, 
   3.946989731809676*^9}, {3.946989803286668*^9, 3.946989820390217*^9}, {
   3.946989879954974*^9, 3.946989969149441*^9}, 3.9469900145889397`*^9, {
   3.946992013557802*^9, 3.946992016032785*^9}, {3.946992077723345*^9, 
   3.946992177151477*^9}, {3.946995411187213*^9, 3.9469954183533583`*^9}, {
   3.946995535769261*^9, 3.946995537921654*^9}, {3.9469956045344*^9, 
   3.946995655942718*^9}, {3.9469957935785427`*^9, 3.946995874886857*^9}, {
   3.946995916397036*^9, 3.946995983860327*^9}, {3.946996040419196*^9, 
   3.946996041677742*^9}, {3.946996098375275*^9, 3.946996233046632*^9}, {
   3.946996341962963*^9, 3.94699634223203*^9}, {3.9469963944104223`*^9, 
   3.9469964037017183`*^9}, {3.946996455798156*^9, 3.946996543540998*^9}, {
   3.946996629305402*^9, 3.946996651689025*^9}, {3.9469966841974916`*^9, 
   3.946996754039088*^9}, 3.946996911228174*^9, {3.946997062829513*^9, 
   3.946997072335681*^9}, {3.946997103044508*^9, 3.946997105615982*^9}, {
   3.946997148585387*^9, 3.946997188859276*^9}, {3.946997223086345*^9, 
   3.9469972573137817`*^9}, {3.946997348250976*^9, 3.946997377282514*^9}, {
   3.9469974971606894`*^9, 3.946997573293584*^9}, {3.9469976512298403`*^9, 
   3.946997745362198*^9}, {3.946997787068152*^9, 3.946997810716357*^9}, {
   3.946997890695607*^9, 3.946997892925835*^9}, {3.946997957025131*^9, 
   3.946997978709264*^9}, 3.946998033334457*^9, {3.94699808834851*^9, 
   3.946998125407113*^9}, {3.946998166109549*^9, 3.946998166585875*^9}, {
   3.946998661670419*^9, 3.946998667364472*^9}, {3.946998874001523*^9, 
   3.946998946808182*^9}, {3.946999071355717*^9, 3.946999083247139*^9}, {
   3.9469991720740547`*^9, 3.946999202228114*^9}, {3.946999284481599*^9, 
   3.946999319897462*^9}, {3.94699943362058*^9, 3.9469994346170464`*^9}, {
   3.946999466894002*^9, 3.946999468164247*^9}, {3.94699953322176*^9, 
   3.946999556792992*^9}, {3.947005995717065*^9, 3.947006008050314*^9}, {
   3.947006117886696*^9, 3.947006162884993*^9}, {3.94700631643211*^9, 
   3.947006529436021*^9}, {3.947006567851351*^9, 3.947006694233249*^9}, {
   3.947006771610481*^9, 3.947006773243136*^9}, {3.94700681960106*^9, 
   3.94700683092546*^9}, {3.947006861507563*^9, 3.947006862892962*^9}, {
   3.9470069098463497`*^9, 3.9470069103146753`*^9}, {3.947006947641728*^9, 
   3.947006948847183*^9}, {3.947007154181097*^9, 3.947007222533091*^9}, {
   3.947007309004959*^9, 3.947007320951849*^9}, 3.947007362711212*^9, {
   3.947007439044302*^9, 3.94700746169979*^9}, {3.947007491950587*^9, 
   3.947007529909077*^9}, {3.947008325381703*^9, 3.947008326339088*^9}, {
   3.947008454335561*^9, 3.947008493023989*^9}, {3.9470085298191347`*^9, 
   3.9470085314053087`*^9}, {3.947008618295994*^9, 3.9470086591536827`*^9}, {
   3.9470087349269447`*^9, 3.947008756383365*^9}, {3.947078790085224*^9, 
   3.947078833705113*^9}, {3.9470788661247053`*^9, 3.947078990549944*^9}, {
   3.947079029907744*^9, 3.947079045771268*^9}, {3.947079095571644*^9, 
   3.947079104628843*^9}, {3.947079183147655*^9, 3.947079227109618*^9}, {
   3.947079289459439*^9, 3.947079542897884*^9}, {3.947079598048026*^9, 
   3.947079623022443*^9}, {3.947080172258836*^9, 3.947080176942568*^9}, {
   3.947080357146571*^9, 3.947080374879174*^9}, {3.94708042817068*^9, 
   3.947080457688369*^9}, {3.947080517277765*^9, 3.947080545276112*^9}, {
   3.947082809736431*^9, 3.947083103144842*^9}, {3.9470831336841903`*^9, 
   3.947083204674533*^9}, {3.947083415745219*^9, 3.947083419710425*^9}, {
   3.947765208730159*^9, 3.947765212137824*^9}, {3.947765534326928*^9, 
   3.947765542940445*^9}, {3.947765578145358*^9, 3.947765631966256*^9}, {
   3.94776573886884*^9, 3.947765906361903*^9}, {3.9477659369383793`*^9, 
   3.947765960803227*^9}, {3.947766454968656*^9, 3.947766465846158*^9}, {
   3.947766507580201*^9, 3.947766512469552*^9}, {3.947766592862848*^9, 
   3.947766693064354*^9}, {3.947767288660413*^9, 3.947767304705885*^9}, {
   3.947768011965941*^9, 3.947768037016737*^9}, {3.947768772687708*^9, 
   3.947768774903837*^9}, {3.947768806256391*^9, 3.947768865636663*^9}, {
   3.947769056128624*^9, 3.947769070821294*^9}, {3.947769102184947*^9, 
   3.947769178934717*^9}, {3.947769210603627*^9, 3.947769211058568*^9}, {
   3.94776926204452*^9, 3.947769326382971*^9}, {3.947769356547557*^9, 
   3.94776936075431*^9}, {3.947769416659593*^9, 3.94776946890039*^9}, {
   3.947769957505079*^9, 3.947770016756225*^9}, {3.947773716074295*^9, 
   3.947773719225247*^9}, {3.948322911152459*^9, 3.948322915889806*^9}, {
   3.948322981471202*^9, 3.94832298856994*^9}, {3.948832356793294*^9, 
   3.948832437091838*^9}, {3.948832529418812*^9, 3.948832549229122*^9}, {
   3.948832590032608*^9, 3.948832632185877*^9}, {3.948832796857953*^9, 
   3.948832796904763*^9}, {3.94883291838855*^9, 3.948832929434948*^9}, 
   3.962714045824646*^9, {3.9627140855761833`*^9, 3.962714131815924*^9}, 
   3.963323207283959*^9, {3.96332529478938*^9, 3.963325294965307*^9}, {
   3.963325803317768*^9, 
   3.963325831698236*^9}},ExpressionUUID->"749637a5-5fe9-46f3-b1cc-\
1024b26b8e4f"],

Cell["\<\
Lastly, we combine the rescaling factor cost and the block encoding cost as \
the total QSP cost (see Fig. 2)\
\>", "Text",
 CellChangeTimes->{{3.963409626905108*^9, 3.963409658176206*^9}, {
  3.96356880005504*^9, 
  3.9635688043199053`*^9}},ExpressionUUID->"41a6b4fb-4486-4923-b4d7-\
d309aeb961a3"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"timeLabels", "=", 
   RowBox[{"{", 
    RowBox[{
    "\"\<1 fs\>\"", ",", " ", "\"\<1 ps\>\"", ",", " ", "\"\<1 ns\>\""}], 
    "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"timePts", "=", 
   RowBox[{"{", 
    RowBox[{"41.34137333517015", ",", "41341.373335170145", ",", 
     RowBox[{"4.134137333517015", "*", 
      SuperscriptBox["10", "7"]}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"timeLabelPts", "=", 
   RowBox[{"{", 
    RowBox[{"3", ",", "10", ",", "17"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Delta]error", "=", 
   SuperscriptBox["10", 
    RowBox[{"-", "9"}]]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"costPlotLine", "=", 
   RowBox[{"LogLogPlot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"CostAnalysis`totalCost", "[", 
          RowBox[{
          "Instance1Result", ",", "t", ",", "\[Delta]error", ",", "True"}], 
          "]"}], "[", "\"\<exact\>\"", "]"}], "[", "\"\<total\>\"", "]"}], 
       ",", 
       RowBox[{
        RowBox[{
         RowBox[{"CostAnalysis`totalCost", "[", 
          RowBox[{
          "Instance2Result", ",", "t", ",", "\[Delta]error", ",", "True"}], 
          "]"}], "[", "\"\<exact\>\"", "]"}], "[", "\"\<total\>\"", "]"}], 
       ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"CostAnalysis`totalCost", "[", 
          RowBox[{
          "InstanceDMTMClass3Result", ",", "t", ",", "\[Delta]error", ",", 
           "True"}], "]"}], "[", "\"\<exact\>\"", "]"}], "[", "\"\<total\>\"",
         "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"CostAnalysis`totalCost", "[", 
          RowBox[{
          "InstanceDMTMClass5Result", ",", "t", ",", "\[Delta]error", ",", 
           "True"}], "]"}], "[", "\"\<exact\>\"", "]"}], "[", "\"\<total\>\"",
         "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"CostAnalysis`totalCost", "[", 
          RowBox[{
          "InstanceDMTMClass9Result", ",", "t", ",", "\[Delta]error", ",", 
           "True"}], "]"}], "[", "\"\<exact\>\"", "]"}], "[", "\"\<total\>\"",
         "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"CostAnalysis`totalCost", "[", 
          RowBox[{
          "InstanceWGSClass3Result", ",", "t", ",", "\[Delta]error", ",", 
           "True"}], "]"}], "[", "\"\<exact\>\"", "]"}], "[", "\"\<total\>\"",
         "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"CostAnalysis`totalCost", "[", 
          RowBox[{
          "InstanceWGSClass5Result", ",", "t", ",", "\[Delta]error", ",", 
           "True"}], "]"}], "[", "\"\<exact\>\"", "]"}], "[", "\"\<total\>\"",
         "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"t", ",", "1", ",", 
       SuperscriptBox["10", "9"]}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"PlotLegends", "->", 
      RowBox[{"Placed", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
         "\"\<NH3-BF3\>\"", ",", "\"\<DMTM Molecular\>\"", ",", 
          "\"\<DMTM 3x3\>\"", ",", "\"\<DMTM 5x5\>\"", ",", 
          "\"\<DMTM 9x9\>\"", ",", "\"\<WGS 3x3x2\>\"", ",", 
          "\"\<WGS 5x5x2\>\""}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0.72", ",", "0.25"}], "}"}]}], "]"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Ticks", "->", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{
          SuperscriptBox["10", "i"], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "0", ",", "6"}], "}"}]}], "]"}], ",", 
        RowBox[{"Table", "[", 
         RowBox[{
          SuperscriptBox["10", "i"], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "9", ",", "18"}], "}"}]}], "]"}]}], " ", "}"}]}],
      ",", "\[IndentingNewLine]", 
     RowBox[{"Frame", "->", "True"}], ",", 
     RowBox[{"FrameLabel", "->", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Row", "[", 
         RowBox[{"{", 
          RowBox[{"\"\<t (\>\"", ",", "\[HBar]", ",", "\"\</\>\"", ",", 
           RowBox[{"Subscript", "[", 
            RowBox[{
             RowBox[{"Style", "[", 
              RowBox[{"\"\<E\>\"", ",", "Italic"}], "]"}], ",", "\"\<h\>\""}],
             "]"}], ",", "\"\<)\>\""}], "}"}], "]"}], ",", 
        "\"\<Toffoli gates\>\""}], "}"}]}], ",", 
     RowBox[{"PlotRange", "->", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", 
          SuperscriptBox["10", "9"]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          SuperscriptBox["10", "9"], ",", 
          SuperscriptBox["10", "22"]}], "}"}]}], "}"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"GridLines", "->", "All"}], ",", "\[IndentingNewLine]", 
     RowBox[{
     "PlotLabel", "->", 
      "\"\<Toffoli Gate Cost at \[Delta] = \!\(\*SuperscriptBox[\(10\), \
\(-9\)]\)\>\""}], ",", 
     RowBox[{"Epilog", "->", 
      RowBox[{"{", 
       RowBox[{"Thick", ",", "Gray", ",", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"InfiniteLine", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"Log", "[", "x", "]"}], ",", "0"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"Log", "[", "x", "]"}], ",", "1"}], "}"}]}], "}"}], 
             "]"}], ",", 
            RowBox[{"Style", "[", 
             RowBox[{
              RowBox[{"Text", "[", 
               RowBox[{
                RowBox[{"Style", "[", 
                 RowBox[{
                  RowBox[{"timeLabels", "[", 
                   RowBox[{"[", "i", "]"}], "]"}], ",", "Gray"}], "]"}], ",", 
                
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"timeLabelPts", "[", 
                   RowBox[{"[", "i", "]"}], "]"}], ",", 
                  RowBox[{"Log", "@", 
                   SuperscriptBox["10", "9.5"]}]}], "}"}]}], "]"}], ",", 
              "14"}], "]"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"x", ",", "timePts"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", "3"}], "}"}]}], "]"}]}], "}"}]}], ",", 
     
     RowBox[{"PlotTheme", "->", "\"\<Scientific\>\""}], ",", 
     RowBox[{"ImageSize", "->", "800"}], ",", 
     RowBox[{"LabelStyle", "->", 
      RowBox[{"Directive", "[", 
       RowBox[{"FontSize", "->", "14"}], "]"}]}], ",", 
     RowBox[{"TicksStyle", "->", 
      RowBox[{"Directive", "[", 
       RowBox[{"FontSize", "->", "14"}], "]"}]}], ",", 
     RowBox[{"Exclusions", "->", "None"}]}], "]"}]}], 
  " "}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.9469453373416567`*^9, 3.9469453373433867`*^9}, {
   3.9469456001064863`*^9, 3.9469457300701423`*^9}, {3.946945768839113*^9, 
   3.946945979333909*^9}, {3.946946010710558*^9, 3.946946081628931*^9}, {
   3.946946167164192*^9, 3.9469461721325617`*^9}, {3.946946241986129*^9, 
   3.9469462507081137`*^9}, 3.946946288861115*^9, {3.946946415217251*^9, 
   3.946946416931638*^9}, {3.946946462450223*^9, 3.946946469320965*^9}, {
   3.946946588205173*^9, 3.946946627012847*^9}, {3.9469466627886677`*^9, 
   3.946946698067267*^9}, {3.946946917690619*^9, 3.9469470328140583`*^9}, {
   3.946947074404286*^9, 3.946947078389817*^9}, 3.946947129824486*^9, {
   3.94694720755707*^9, 3.946947219762057*^9}, {3.946947318970175*^9, 
   3.9469473558206244`*^9}, {3.946947431251734*^9, 3.946947470429691*^9}, {
   3.946947606248897*^9, 3.94694761759408*^9}, {3.946948255903349*^9, 
   3.946948317109944*^9}, {3.946949257326741*^9, 3.946949465543868*^9}, {
   3.946949566094829*^9, 3.946949672097187*^9}, {3.946949719910133*^9, 
   3.946949752271507*^9}, {3.946949790618905*^9, 3.946949896867989*^9}, {
   3.9469499401015*^9, 3.946949970094371*^9}, {3.946950043093742*^9, 
   3.946950050895506*^9}, {3.946950111409999*^9, 3.946950123118082*^9}, {
   3.9469502012999887`*^9, 3.946950221941684*^9}, {3.9469864897119093`*^9, 
   3.946986507827303*^9}, {3.946986602522801*^9, 3.9469866709480267`*^9}, {
   3.946986951223599*^9, 3.9469869889790287`*^9}, {3.94698730250369*^9, 
   3.946987346345499*^9}, {3.946987378338692*^9, 3.946987391231485*^9}, 
   3.94698747246084*^9, {3.946987551176155*^9, 3.946987666324455*^9}, {
   3.946987755265584*^9, 3.946987792830069*^9}, {3.946987891867255*^9, 
   3.946987902203516*^9}, {3.94698793604347*^9, 3.946987936375279*^9}, {
   3.946988028880817*^9, 3.9469880457952757`*^9}, {3.946988130955018*^9, 
   3.946988215878443*^9}, {3.946988249286535*^9, 3.946988345359118*^9}, {
   3.946988411767774*^9, 3.946988479021977*^9}, {3.9469885110011997`*^9, 
   3.946988511261885*^9}, {3.9469885545244837`*^9, 3.946988555120453*^9}, 
   3.946988588082923*^9, {3.946988630460907*^9, 3.94698869908023*^9}, {
   3.9469889311812963`*^9, 3.94698896691114*^9}, {3.946989099051114*^9, 
   3.946989183225954*^9}, {3.946989240279502*^9, 3.946989377383128*^9}, {
   3.946989422499642*^9, 3.9469894276510553`*^9}, {3.946989477600202*^9, 
   3.946989489742879*^9}, {3.946989523981434*^9, 3.9469895905548973`*^9}, {
   3.946989658972968*^9, 3.946989685156836*^9}, {3.946989723237856*^9, 
   3.946989731809676*^9}, {3.946989803286668*^9, 3.946989820390217*^9}, {
   3.946989879954974*^9, 3.946989969149441*^9}, 3.9469900145889397`*^9, {
   3.946992013557802*^9, 3.946992016032785*^9}, {3.946992077723345*^9, 
   3.946992177151477*^9}, {3.946995411187213*^9, 3.9469954183533583`*^9}, {
   3.946995535769261*^9, 3.946995537921654*^9}, {3.9469956045344*^9, 
   3.946995655942718*^9}, {3.9469957935785427`*^9, 3.946995874886857*^9}, {
   3.946995916397036*^9, 3.946995983860327*^9}, {3.946996040419196*^9, 
   3.946996041677742*^9}, {3.946996098375275*^9, 3.946996233046632*^9}, {
   3.946996341962963*^9, 3.94699634223203*^9}, {3.9469963944104223`*^9, 
   3.9469964037017183`*^9}, {3.946996455798156*^9, 3.946996543540998*^9}, {
   3.946996629305402*^9, 3.946996651689025*^9}, {3.9469966841974916`*^9, 
   3.946996754039088*^9}, 3.946996911228174*^9, {3.946997062829513*^9, 
   3.946997072335681*^9}, {3.946997103044508*^9, 3.946997105615982*^9}, {
   3.946997148585387*^9, 3.946997188859276*^9}, {3.946997223086345*^9, 
   3.9469972573137817`*^9}, {3.946997348250976*^9, 3.946997377282514*^9}, {
   3.9469974971606894`*^9, 3.946997573293584*^9}, {3.9469976512298403`*^9, 
   3.946997745362198*^9}, {3.946997787068152*^9, 3.946997810716357*^9}, {
   3.946997890695607*^9, 3.946997892925835*^9}, {3.946997957025131*^9, 
   3.946997978709264*^9}, 3.946998033334457*^9, {3.94699808834851*^9, 
   3.946998125407113*^9}, {3.946998166109549*^9, 3.946998166585875*^9}, {
   3.946998661670419*^9, 3.946998667364472*^9}, {3.946998874001523*^9, 
   3.946998946808182*^9}, {3.946999071355717*^9, 3.946999083247139*^9}, {
   3.9469991720740547`*^9, 3.946999202228114*^9}, {3.946999284481599*^9, 
   3.946999319897462*^9}, {3.94699943362058*^9, 3.9469994346170464`*^9}, {
   3.946999466894002*^9, 3.946999468164247*^9}, {3.94699953322176*^9, 
   3.946999556792992*^9}, {3.947005995717065*^9, 3.947006008050314*^9}, {
   3.947006117886696*^9, 3.947006162884993*^9}, {3.94700631643211*^9, 
   3.947006529436021*^9}, {3.947006567851351*^9, 3.947006694233249*^9}, {
   3.947006771610481*^9, 3.947006773243136*^9}, {3.94700681960106*^9, 
   3.94700683092546*^9}, {3.947006861507563*^9, 3.947006862892962*^9}, {
   3.9470069098463497`*^9, 3.9470069103146753`*^9}, {3.947006947641728*^9, 
   3.947006948847183*^9}, {3.947007154181097*^9, 3.947007222533091*^9}, {
   3.947007309004959*^9, 3.947007320951849*^9}, 3.947007362711212*^9, {
   3.947007439044302*^9, 3.94700746169979*^9}, {3.947007491950587*^9, 
   3.947007529909077*^9}, {3.947008325381703*^9, 3.947008326339088*^9}, {
   3.947008454335561*^9, 3.947008493023989*^9}, {3.9470085298191347`*^9, 
   3.9470085314053087`*^9}, {3.947008618295994*^9, 3.9470086591536827`*^9}, {
   3.9470087349269447`*^9, 3.947008756383365*^9}, {3.947078790085224*^9, 
   3.947078833705113*^9}, {3.9470788661247053`*^9, 3.947078990549944*^9}, {
   3.947079029907744*^9, 3.947079045771268*^9}, {3.947079095571644*^9, 
   3.947079104628843*^9}, {3.947079183147655*^9, 3.947079227109618*^9}, {
   3.947079289459439*^9, 3.947079542897884*^9}, {3.947079598048026*^9, 
   3.947079623022443*^9}, {3.947080172258836*^9, 3.947080176942568*^9}, {
   3.947080357146571*^9, 3.947080374879174*^9}, {3.94708042817068*^9, 
   3.947080457688369*^9}, {3.947080517277765*^9, 3.947080545276112*^9}, {
   3.947082809736431*^9, 3.947083103144842*^9}, {3.9470831336841903`*^9, 
   3.947083204674533*^9}, {3.947083415745219*^9, 3.947083419710425*^9}, {
   3.947765208730159*^9, 3.947765212137824*^9}, {3.947765534326928*^9, 
   3.947765542940445*^9}, {3.947765578145358*^9, 3.947765631966256*^9}, {
   3.94776573886884*^9, 3.947765906361903*^9}, {3.9477659369383793`*^9, 
   3.947765960803227*^9}, {3.947766454968656*^9, 3.947766465846158*^9}, {
   3.947766507580201*^9, 3.947766512469552*^9}, {3.947766592862848*^9, 
   3.947766693064354*^9}, {3.947767288660413*^9, 3.947767304705885*^9}, {
   3.947768011965941*^9, 3.947768037016737*^9}, {3.947768772687708*^9, 
   3.947768774903837*^9}, {3.947768806256391*^9, 3.947768865636663*^9}, {
   3.947769056128624*^9, 3.947769070821294*^9}, {3.947769102184947*^9, 
   3.947769178934717*^9}, {3.947769210603627*^9, 3.947769211058568*^9}, {
   3.94776926204452*^9, 3.947769326382971*^9}, {3.947769356547557*^9, 
   3.94776936075431*^9}, {3.947769416659593*^9, 3.94776946890039*^9}, {
   3.947769957505079*^9, 3.947770016756225*^9}, {3.947773716074295*^9, 
   3.947773719225247*^9}, {3.948322911152459*^9, 3.948322915889806*^9}, {
   3.948322981471202*^9, 3.94832298856994*^9}, {3.948832356793294*^9, 
   3.948832437091838*^9}, {3.948832529418812*^9, 3.948832549229122*^9}, {
   3.948832590032608*^9, 3.948832632185877*^9}, {3.948832796857953*^9, 
   3.948832796904763*^9}, {3.94883291838855*^9, 3.948832929434948*^9}, 
   3.962714045824646*^9, {3.9627140855761833`*^9, 3.962714135405218*^9}, {
   3.962723258170455*^9, 3.962723303452589*^9}, {3.962724044087246*^9, 
   3.962724078906958*^9}, {3.962724110468073*^9, 3.962724126353988*^9}, {
   3.962724402915977*^9, 3.962724436587014*^9}},
 CellLabel->"In[91]:=",ExpressionUUID->"2855cc06-78a6-4265-bc76-6325cdcec2aa"],

Cell[BoxData[
 TagBox[
  GraphicsBox[{
    InterpretationBox[{
      TagBox[{{{}, {}, 
         TagBox[
          {RGBColor[0.9, 0.36, 0.054], AbsoluteThickness[1.6], Opacity[1.], 
           CapForm["Butt"], LineBox[CompressedData["
1:eJwVi3s0VAkAh9WKwSmishWSkDGaPG63hsn9zZgrm4oihELb9jBWspIUrUcJ
x9BY1mPWRKiGSBTS8yR5bMw6uynZNhxhPFfTA+Ws/eM73/n++NYePL7nh4Uq
Kio75/nfDpM34puCJI6DXFmTTxaJiR6bYiUjmmJEmg9+ziaR2VX8toGRQt0f
Eprk5ZAY8HwTK2XkUbV6FdzufBIivdmdlxgySpzTVu9XRKI/PHlTCuMuFZWd
ZHygkkRakfv1C4xWilTNuhPUQuKgPdGfyOimuKY3w0O+kmg0S8puNx6hsqy1
vejQzVA+eHhuxlxJfVHt1rvWtRlr3rpxoiQzVMwj5rlZxy2Id2FIF3eooH9b
xU3dyi14FSG8tWiZKi55DnZV6nOwZPiwUEeqDgvP2E7tZA7k3qOHM1ZqweoT
vSDgMweReRHvSZ8l0Kobd7cLtEeMuFU3alwHAzuc9Vvl9qji+SsHxbo4IrXs
GuA4gDVue0p34zJcVXvpMXnZAb88+GuH8/hy+I7lsu/rcDHxeTo4LV0f4n+5
75ac5oLjrXj9t8dKeJrIP5oouGi5tWZ8SHs1bit8a8z2bYVr1AsX9QoDcMbj
nW882op7Qfs+so8bIZ+XzP5k7Yj0bvZHQsMYK65oKp7mOmLzil9XeY8ag1g1
NuOlRSFBXpju1bYW9srUmhfRFJqpsWsB+Sbw6S3F6z4Kqo8LhGNn10HK7dD5
gwlwPmV0JrqZIvdMmCLyALC03Cxl2tAMfB3+t8vEQG+48cjUVzPoTJwI020F
ZON+kx/azWEQUGfjMQcEn/1aEFO1HlrPfA0/kDw8v8gr6Eu3QAtlsV8UygNz
exNvdwATez+oqQUX8RBjWCUSwBLTRnhV2s1Da0nPOZ4uCyajycvNtfm4Wy57
vPrtfLd/KZHw+Sh8+qY8+qEVegJaAiOi+YjL9OD2p2+Av0tpoqiCj30/sU/K
T7Ax19zTqTHIhyVj+55ngo3Yn7Eu5dlqJ3QsVn30XMMaliqZWWfdnHDeOJs1
c9oaajN+beIkJ9SluRwr67NGwfpNwSMNTnj3TcWskacNpD1H7EqUTjhcf4iM
e2KDFXZP3L2sBDjY4uB0lGWLpjp213eBAvj2PS1eKrFF7JP3SQU5AnTsDXtJ
LbKDwZfmwk3PBchihNT4h9ih5c8m7UYVGt6NqwYceuzAtDW6Vr2FRlb38KBU
QGD63vnrAyE0DsXNqIc7EwjSEdW3/0jD1kLLQuBCoO377JbaUBrtJ62ODrkS
yNS8OpwcRkNt6fEhaw8CG3yamewIGpHblEOPgwj4v9eURZ6h4VUzN9wfS6CB
mSFTT6Fh6qeteednAqYxOXcn53tqgbHlxXgCSfLLra9SaYjceMFWFwh4nqpS
lKXRaFIkKCLSCEw2dlq6X6JBrtUYWSQhYBS4vCwnh4Zq80qtl78RuFBt2BCX
S6Mz1JIlkxIYVTNvC86jEXrPVbjrCoH6G+QIV0Kj1Fs0ki0j4D7rzeqV0oiY
K9A6Vk6gdlegQ+tlGvySSpZDBQGDoqOu1YU03kzJhf9UERh2OS08f4VGeW5v
alU1gd2SuDOhxTSiMVWWcJtA3URyqncJDZfBhb/vrZ3/ncT5KKWhL9IbXV9P
IDE7r4x5lcZ/AZMkQg==
            "]]},
          Annotation[#, "Charting`Private`Tag#1"]& ], 
         TagBox[
          {RGBColor[0.365248, 0.427802, 0.758297], AbsoluteThickness[1.6], 
           Opacity[1.], CapForm["Butt"], LineBox[CompressedData["
1:eJwVi2s0lAkAhpWRkc21yKWMMgjJ5cs0hr53xszXRGXLZdh0lOTaSQlZx10J
u0ylqFYuxe6GWEIpq+xGUiK7tSUJU7k2rKZk2rT68Zz3POc9j3FAxI59CxUU
FLbO83U5U1dS2/YUbKwVO8/uPcnCZJ9tqYweR3oPri+m5bKQ+0/pwE16Fhlf
p7Wg7DQLrz37E4vo58nNZfEVr/NZyNH+tPUkvZzMn9peH1zIgiQyc30W/QZp
9kzQGVbBQvbFby+n0zvI4tJ060OtLAQ4EpKj9F6yLsLrVNIsC3eYx/MeMsbJ
6gU6u/zDNkDWfCtJbioj749ld7T+tQFGA+7s2AI5yXtlMmzAYSNVSC9a0qWA
5EeevxEVbDyLCq9VWkrDVsp+skfbEWqjQeEaRcqIC266bn/MEd2iiaATeqoY
0DbclSZzRMz5qHcOPmrgfloqE/lxkHCqQytWqgERo1MmfcBBDddPNnxKC4pf
tP9e7OAES6ndEa11SzE1MxW47IITTjc/3kJJl6HnTeO2oW+cMflxNixbrIuD
Vd7qRLQz2KKx5y889NAi+9FU+MYZ92qNpCPqBuCc1Rxx9doIt9gnQuUqQ9xU
7YvvadqIpj2+H6wjVqIpUBJkuJaEuNf6A6HCwKLEzNXjZ0iwdPL1RRMM1G85
q9+sCKR1l4i97xvjauvlmQQO0E6+/dX/p1XQftnvnBwB0FoKw9/Gr0bCvzFV
kl8A9syJnqPuJgimmWVk9gGalcys2RVMqPvSGkw1uBiMZIxPf2bisIWzGlPI
Rbl059T7h6Yw2JzRtS+ei7D4z4UJNWa4bmt9U7mei84MbuGQ2BzLSz/Liye4
WOPaxt3uvwauT15cimfwkLCiJocPC3S91D3S6MNDR1lfElfLEqkeAVc3ZPNw
o7K8xWDAEnfFj12qb/NQ0tpfGXfLCsG7L86lf+QhJdfDSSJei+qopFUlVi7w
PWwd3X3IGjbLGw4a7nOBBd11x13+OsRO/mfWe84FXUtotztVbECF77cXd7rg
GCPPUv69DTgH1oeWKfFxPVsYWjFkA7USNfocm483ilWfVnra4rgv99G1SD6C
GgMdUv60RUFtgTSknI+AexyXEEs75LLp0X79fHw31FqqWWAHV0Ens0ZHgC6v
g09JJXvkJ14khW4CnKHvr/Pbb4/LouIrTxIFEN3Rf83ps4d3/YygrWH+7x0d
LuIT8IT/po9jAgSmyJUjKQK/5waLBscFsDNXNecLCZgMRwR3TAjwMNoqZMSN
gDQ7+XiBVIBFmhEjNh4EMp+X3MW0ADGbZCMte+b7mFebMmcF8K6bG5UkEjC/
EirUp1Mw2am+uCGZgFgh0kdRhcL0AoZFRiqB9x5xIRPznuPODbNKJ/CHPCuj
WZVC21jaWFQ2gV3CyvYAdQoOxirjSgUEciVSYYUOBVq7nurTCwTkDjM+p3Up
9BywsCwvIrA760tIwnIKB5rcwrddImBtq5Hprk/hZ1HOeF45gfZE23vvVlCI
mitUDa0ksK6H/axvJQVeWbUlp4rAGSZvtNWIQv90d/jLGgJ7H+xQOWtMofLc
4A81V+d7o516KasoxGG6Iq2egM3hvWvCVlMQDi984HWNQF5bONvDhIJujvaE
WSOBOb2ozU5MCv8DjVAdPw==
            "]]},
          Annotation[#, "Charting`Private`Tag#2"]& ], 
         TagBox[
          {RGBColor[0.945109, 0.593901, 0.], AbsoluteThickness[1.6], Opacity[
           1.], CapForm["Butt"], LineBox[CompressedData["
1:eJwVjHk41HkAh1VkrOTeVipTS44Z9zeN8/cZM36JRCk61/KImEKSdGDpcLQG
WVpWo1BPmGiiVhFpo7LO2iRJZSpnkiZtit36433e5/3nXRoQvn7HbDk5OY+v
fLP9+MXEJv98p0OzgmvKmjl422tZLGMcpNQ/mnuvaeEg61Hx8xpGKmUjq30w
2srBqw19cQWMPEoj9e2waScHQs3PHpmMUiprx+rbFY84kEamrEhlXKf0b7UN
Vr7kIK3Qq+Q4o5kK8+purZnhIMCOSI8yeqhMzDVssbLFbYOknDbmCDVb551t
RZEtZHX18VPLZVREW3fVAhU76D33tI3Jn6IuFQRphkfZIdGVUaDSLoek6L3D
yS/t8DhKcFlBSx5T4Q+rDT3sMX8oSKBWoAiWXsjr5Dp7dPiOBmXoKEMr06it
29QB0XlR7202zUddZGbGxWwHxJ5s1ogZU8O8nhVi/lxHSLjbZAMnNeDnZiH6
OdwRrDGr/RrmWpjsFNkJuhzxW93DNfSYNhLJTTaHdsLbfz+FpqUvQMnHhImU
cifY+g4/eeqtg5UVoSoiPQr3LuuNDarqYgrmnWeEFNxjulwVyxfBO88r2GiS
Qq3/5kmz8CXYrmBqbGsNpPeYTRIlJp7KOpLOBAMrvz+10HeUiULth2ohZ4Aj
HWfTff5eikAv5TGjbuAu9eaC3x/L0HHch7DmcSHfIBK8OfwjHE9MFwv5XNh+
zLh/1FMffvlX48gBLtTFBqmfFhvgSVauuFPMxYtI5sjEtAHW3+qS73jJRenY
1vEPbcvRVKnfpKbjjNDD06JYiSGqd7dILq9zRmsyV9SfboR1X/Lfuac4w9it
ibvOzxi5A7F5hjecEbtYIuTDBPER1bsDPzij+VxvPFeDhb3Wc0qlxjxcF5c2
6D5nYWFhtN2W7TycbewTH6xnYyiP98Eym4eELG8HabopXjQyddbc42HzXrN9
HXvMoBXjG3xn1tczw239Hb45CjeLlhyz4aNdRf5mq5IF5HpVTOxC+TjGzGFN
HbDANWmXn1chH9VpriFl/RbYqHNp5kIXH6/nlH9essESZQ/67wSouiDoWqBN
wl+WGDd1eqW5ygUB9+x5O1lWKLlSIlA85IIt/Y3F6vlWmGgIW7St0gXtGyO6
KQVrpH/m2bwfcEE2Y1fVtl3W6P2HW5ygS8P39sJX9r3WqLDKddjjTSO7Z2ig
gE/QeEPOqSiJRmDClGIkTcBWV1r7azINKyNlI74rQVag+k/7Umi07WPvHHQn
8FdeFrfqBI256uGDFt4E05t4dSNCGtGrZIMN/gREdsyJ5NDwqZoZksYRFJoo
U43FNPS3qn539RcCpThNz/JzNCZmMU2SEwkiOnX9Tp2nIfTkhrKPEzjFsOND
LtBoGj4yHJVG8LjRo15FTMNmqdKIQj6Bmn8G5VNJQ/6ujnL3aYL9Vb97UlU0
7oeZsEoLCPoUz/oZXaERVusuWFtEIC6XxE9dpXHeVziSU0rg+uV+veg6jagZ
kXKImKDC80l7Ug0N53MVLPtyAu0i6bOIWhp9Ex2CZxIC6WrZf851NMS5L05I
KgncTn9RZdfTOIiJsiNXCCTj8kztmzRcB2a3bPyT4Ae+isXM114g1Bw1vEYQ
f0obAw00/gc05iKq
            "]]},
          Annotation[#, "Charting`Private`Tag#3"]& ], 
         TagBox[
          {RGBColor[0.645957, 0.253192, 0.685109], AbsoluteThickness[1.6], 
           Opacity[1.], CapForm["Butt"], LineBox[CompressedData["
1:eJwVjHs0lAkARyWPmUil9KYpb4M8viUz+H4zxnyTtigypFiOtV6lJikioWx0
BqVYEuvRFoaQFGvTg0Ib1lYe2TYkBmE1W2HT1h/33HP/uRv9wnZ9Ly8nJ7f9
C1/NniqLf+ibYz9eY/qfkhkLk33mRTJaFFmg3JNw1ZyF9K6iV7/Skkl/phpd
YMnCkNvLE3m0bNLP7QY9yYqFlOVz28/RSsgp20Y9FTsWBkVJ3yTT6kgt8We3
JU4siAtcihNpreRChZbaVf4s+LGIwVO0XnJThb7Y4CcWGnV/zGhjjJHfKZdm
qdLZkN1piJ3Vk5Hetn2ZR0RsbHjlbHMsZ5bsOCtxedLDRryAlre4XQ4r//AN
Gt5qi57wkCrFFQqYW7R+X2KVLdSkASFL85QxWX+oeFjbDh3C8YC0NSpw19la
YJ1uh4js8HdWHmpofN0Zpjpnh5jzrerHJpbCOm1nemGIPSo5e2XD59URaDiZ
1PDUHswJi6Pqm1fAWSnJsJVN4sKdZ9/yJzSgOqCulVlKYvLjTLA4dRWid6SJ
ZHTARjj64i/XNajgxZ88wQVaqjZMjCxZhy1NJQOfI4Ftx54LlMvXgy6ZKntQ
BtT7er43DdNCmuqFwpEhILXX9D1BZ8Cd2i7vspYD65WZa4XjDIh1/c6uduUg
oSM/1f3xRrDs8wO7kzloJt9e87m0CQvkp8t773CgcC835G20NiL6cjbYf+DA
5kNa5ylnHfBPe8wMMrlYJtFNntHUhZqanX6cDxf9IsbY9CddnPM6HhubyUXJ
hNfUv216ODndgruPuQiO/pQbU6kPC0ORsZ+CA56c4eQOpBrgnZpD6BzbAYZO
Dzk7fQwxx9TR6ApzQIxmZQoPRnj01Htk+TUHtF7pi+WoM3G1vFgnvc8BdZKS
e+teMSE10rxJX8pDftNLSVSDMVJMRsP6KR7i0l1tB1NN8Nz7UfrccR48D5se
6ThkChON+f6I6i9nmtOuR7zN2D/DyyKkPLQvVrj7hG6G4pjqIul6R5xmZDBn
I82QmRjT+9nNEbfFgqDSATMM1btHeiQ54s3C8jktN3O0HU3iqt93RECtv1Xc
A3OEdr72eTDjCL8WtkMg0wLCPS5vakz42DPQVLQsxwJNARqZKgF8tO8+2E0q
WuLoz6MVBdl8XKSFVu8NtcSzyBEt8zY+hI1rh9h9lqjqIm8xlChc7JUO5/EI
tPldvb2LRcE/blZZxCdgVXO9mc2mYGGgYsATELhMv92tY0uh7Yhx4Mg2AiEV
zR/f21FQWhY2YuZKQHleuuUSh0IEJRu550vAPsu4dlBAwb16Xjp4gkB5e2Vt
uJCCjteSRTUnCWho17Xs86AwvYBhdCaeQHTE/R6+J4UUZ06wcSIBJ80/Z1Z7
UXg4mjAaLibwJlhm85s3BauN9DHFHAJaStZ1igEUFJrXqHRfJnDKk2yd+NKd
B4yYJXkExiRUb9cPFA7UbwvZUUig1tVjtjiIwi/ClLGMEgK78yNZO/ZTCJ/P
VQmSEKiXxTlZH6DAvXKdyS4noC1I3sMIo/ByuiPk70oC/0xkR00fpCDJ6j9b
eYOAB7cw+cUhClGYLk24SaDhYml2o4iCYFj+9923COhJb5SUHaawKmX5uH4t
gRTb+rqMcAr/AygoHvo=
            "]]},
          Annotation[#, "Charting`Private`Tag#4"]& ], 
         TagBox[
          {RGBColor[0.285821, 0.56, 0.450773], AbsoluteThickness[1.6], 
           Opacity[1.], CapForm["Butt"], LineBox[CompressedData["
1:eJwVx3k41HkAx3EVGXkoIhExRTly/xIZ/T5jBt/YUhRLnkStJ02rzSLrKEcH
WiNZ5JwOlKHJIG068CRXhdoHJVFZa8bZWkla2vaP9/N63szAYx4/LJaRkdnx
rf+1/3AzoSkgf1vowXXdShUsTPZZFk0zoujckUf7RWIWMnqK3t5jpNC+4+1D
O6tYGNrTf1LAyKU11S7NpNWwwF/5ZUc6Q0hbxYWpqz5gYTA0eXMKo5aObnby
WtXGQurVXaVnGW20zpvnXWv/ZCFwKzV4mtFLD8ov7TZf7YBGg3NZ7XqjtD8r
yFQt2QHTD+tOzW2Ypqt07/jGTjlA9627XWT+HP2HYopVl882JBCGQKlDBnes
Vx6YbN2GV2G8Sjk1WZT1PDzAt6KhLA3irRDII6b8Zs3kNRqd3mNBFzQV4Roh
6hUoABG5Yf/YfK+M2I80J8UBiL3Ypho5sQKN5lu6u8IBMdtveviiKmqUPF4c
FAImE1YnVM3V0KSRt076BvjtYdd3zhPq2CzDLehQZ2Ny9vOR1DQNGJYuip/d
zoad98jrN56a8M7XSktIYKO1UndCsnwNrmjv/3tJLRtukd1EXqSNiIHK+83j
bNwP8JkxO7YWnO6AyjEDR6T1ms1QCnoISGSq7PF1xJZV2VreY3pgzm7N1c5w
RGLnlTSvJ0wE07En+toc0UKP3/DPW4ewgY4H/QuOkG0o5I3HrEe9eoyZ4xYO
7D5deHHaXR9Lk20ZEh4HKuUGKZ91DMAs1rE5I+DgXaje6NS8ASzd/PiJPRwI
J/Z9+Ni+AWvWl7k3KnJxJGa+MFa8Ec/jPO2DuFw8S2IXvk8zREWcfvTXaC6M
XJvYu/2N8FUkp//6FhexOmI+F8YICcQnDQkXbcV9p9iqJsjnnLfO1nZCbbmw
Yc1bE9Q3LjxS2uWEK4/7y6PqNuFi25OTQ+ecEJ/hyRpMM0Xj/I2rX+85wedn
s/DO42ZIvT3wIWraCcYMV49mrjmu5264YWvkjA4l2fpnChYI1c2qGvdzxhm9
LJO5XyxQZ+gvXZLpjN9TSXDZewvs9rdN8mt1xl9LRF/W7rFEoBZv96rFLgi6
e8gm/pEldMObQprtXBDYas85bGIFrXnLj7U/usD3/eMilXwrZCp8Kl5e4oKO
vT+9pOWs4c55WlfS64JMxtFqv6PWEGu3mW5WJvBu1Bqy77NGehSzSd+ZILNX
OizgUqiQS272iiI4FD8nH+pMYbVPeg8dTWBlqGjIJRROlecMG8YQtIdvOixx
o7DDUyj/JZZgqcoxiYUnBenlJy6CeIIIl2lJQwAFJku5ZTiJwKt6QTp4kkJ6
aEZLZDaB/r7ly2riKMw+znsZcIlgapGecVICBX/NIolrDgHfnX1k01kKpvXV
DJ08gqaRxJGwVAqtSt2koZDAhqkwKpdPYVHp6laFEgLZFk3FlwUUDv+r92rq
278IMTYRCih0uBtJX18nCLnvxtt5jULBjJ2CqJSgxJs/miWkYMfdt93jJkHY
QqFicDmFy9kHfexFBI7Ft0zsRRTkR3nB+rcI+qc6eQNiCl3pMckzFQTlOe/O
i6sosIZO5wyICaIwVZZ4m8I129TSlkoCMrz46d47FJb9mnlXXEWgwV85tvEu
heMDBa251QT/AchbI+c=
            "]]},
          Annotation[#, "Charting`Private`Tag#5"]& ], 
         TagBox[
          {RGBColor[0.7, 0.336, 0.], AbsoluteThickness[1.6], Opacity[1.], 
           CapForm["Butt"], LineBox[CompressedData["
1:eJwVjHtUjAkAR2faaU21eiGvjSklzZBp+sqZpvp+8+ibUVvtUtISp1aRopUe
dNCLlpyp1GBpNErESKSU4qBdQpQ2vSTpoe1dJLMmsmv/uOf+cc+5FsGRa0J0
aDSa11f+t+DtleSaIKXbkyM23A8hfIx32BdMMuPJcL+Ie8e38pHdWtB1i5lG
5ncms53C+Ojz7TygYp4mN2lJ57gIPtJnffI6xlSTZXP6vLRRfPRGHXFMY1aR
jvnVAdMJfMjzf7yUyqwlA2M3n9I9zUewM9F7kNlOWpemu5jV83Hf+rcT9axh
0mToTZvWzRmTd+4mTC2dJAvle88FX3TG4i4f/h7lFClTVPCqjARIljFVM5/R
EDuPwWlKEOBFdPh13dkMWNK2Gu8eEMBwMDTcWDUDdfsUPk0BLmjwHwnNnG+A
Q6f6YPXYBbGno987rTfEq1G5npbriv1ZtaZ7xozRH+9um5nnihLhxsn+LFN4
OTaaF+m7gTPGizNdORuti7S3yne5QXGn+QdqbA54w4VXU7rdMP5Ru12eMRdl
MUtim1eT4PsPvXy1dj5ax3OODVaReHx98diA0UL0eLeyNbMBzz0tshnF30Ot
0dVUyoDbQQEau8hF+MJRDncmAhntdhpCjwWbB54e1A1gldnJBf4jLMzdEPDc
cAxIacjLWPfEAqz1imv11kI8Ikcvbs6xRObzHk1DgBCM6tzw0X1LsPjz0a1E
lhD8fzIbD/pYwTmRErbXCGFSZJ2mNbfGpUh2ZNyUEN1RrOGJaWucJbc9jOGJ
oB7b8PZD/VJ0pZQfLg8VYfu+6dz9JTZYkLoper1KhLrDwtyejGV46LGy7F2L
CLYeNcKfNtvCdo1xYJ2+GPvNS9IlYOPGoAdXXyxG7fmOBKEpB2+rjkcciROj
qkhdvbCLg3v2etP/qsXIe9BZFH93Oey4LRWtPWIkZa916c1YgapNpS/fmUkQ
sNsupmGXHX6ZNWS7w+frmemx5qFkJWI03G72QQmezWTcq9Pj4s3esyOvKyQ4
xDrBmdrLBZUcZqkZl+CmXBZ2uYcLt5uiam8rd/z9TfGnRb72GIqKSWMGuiO0
cotT0p/2CKprKKxUuCP4sUC8jcPDKj8XuyuP3PFzz4MCEyUPiiD6azqdwjO/
X9tIXQe45LR8/N2RwnFmRNnGCAcooptCbcIo+N9f0CfocEBEI+dfs7yvvX2w
XyUhkBqYTVvdTGFL0tSMKIrA6LUcY14LBd4yg2USGQE/RgFrYSuF+pjl2wY8
CVheLsNoG4VvTSIHuGsJ3PnYnHisg0KsdHKgOoiAJnsevb2XwrqyL4O9Bwhs
qT1DD5+gYLXBSL88kcBT8wsmvu8pTNBZ7MPJBBx2FVu4TlJI9xFuX55KgDbv
rtBIQ6FmKGUoWk5AGdKVVKql4GShN6yrJNBEW6LzmSYF49F8g7YzBAS+HNM+
uhSNO9kctYpAfqGDZb2OFDtve4Z7nyMQ6S0RnWVIccE/ffiEmoCBMiRZwpQi
+kuuQVgRgajxHVkr9KQQnb/KERQTeCGKzTfTl6JzoiH8dQmBwsHUPwYMpCg6
1X20pJSAoWtG41/fSRGPicspNwjEZJ7sqZophaxf56lfBYGOXtXEOUMp5qbP
GrGpJCBedVFHbiTFfyjfIPM=
            "]]},
          Annotation[#, "Charting`Private`Tag#6"]& ], 
         TagBox[
          {RGBColor[0.491486, 0.345109, 0.8], AbsoluteThickness[1.6], Opacity[
           1.], CapForm["Butt"], LineBox[CompressedData["
1:eJwViXtUTAkAh9NO22ToKSnUtAw9qJlcUbe6v5mmbltrG1OMcNg6bYs6WhRR
snrI2m0mbBGpEyoypq2Q1MEoqZYe1iPTaChpekqSFFr7x3e+853PNixa/LOu
jo7Oqq/8b3L4clJdaI5XBMt4yvBbEm/UvPOjzH1UmjvrzxJ9Esefnn9RxTxC
tZ+NNxUZkOgO7kjMY56iZk1lWx2dQUJqNrnqKLOYEqktPczMSHTt/H35EeYN
yvpMaLQFm0T6WdHFQ8xGKsnOucfGnUSYO9GVwlRR2anlTdztJGo5aVlN7H7K
qaVax1xDYvTmrQMTi0ap9SLG7EQ/D9i8CHSLy5mgKhaQmsclHkjyY+bNbNaB
+Tql7rCNJ57FRJbpzWIgqCb3s/SwJwx7IyKN8/TxpcgicPijJ1okAxEZliws
Nu/wx1Yv7D4V8851nSGWt9tZmbd6Yf+xRtO4IWPUJA96yfkUSvkbR3uOmSKr
Nsi1vpiC45DLHlPnWajo5EX2MoG/bj7+wXfIHFWfFN3NAN6Mf9yWLrPALhNx
w3gM4Cbpa38eZIm2FZKnSZeBhjKbIa3RXPw7XerG6AYC4p746SvmQTSmYtTP
4aM6NGTMKdoapG3KxICID5nKaYwwYCPoOkKCU/lYMfuElWSAjYobks55N/lI
bsmXrf3HFveTTt5Sv+ejnhq8sPn0dwjj9+lp7AVgKHMjBxMWoPdR5m5BmABu
HzIepgQuxN6B1SJtlgAmcs6Rj/M5+EXpmpjaKMDLnez+kc8cGLjHPknW9Ubx
0Ibh902LYDBWc6LW1RvbEj7n7i9djFgqKjki2hsPDvNzO2V2sOZ51kwVesPe
v46/erM9XNZZR7WrvLF/fqlUCAf8rRdCzTETorFAfYBv6ohNXefiT9BC3JAX
K+e+cIQ4zGKGYbwQ+Xc75PtuLUFRxKu67jIhDh4P8uiSLYXqpLJv6rUQIbuc
Ylt2OGEkcHxlvI0PHJj+4ntCZxQQ1PDKYB80z2TcfmDABadSMTmY5oNUdpbj
xF4ucGcPj3HbB9fT/bZe6uSifFzUsnHUB6+/UUxaB/NQUp6cPXupLyIqw10P
1vCwyVBz7V64L8IaSO8tji4QZ/l7Vp30xfrOu+dNclxw76zRkFGrL5rX/NpG
6S1DgvqVfpEejUxm1JWNUcugvtoZu9yNhqTWqptUL0OVmbshZ8fXr+rtyRMS
eJabbyQpoBF+cEJ/py8BjFy0QSENFzuWndCPQJFPmbN9EY2m2CVbtAEEYgfu
BE5eoPGtSbSWG0TAxP2VLE9OYzc9qlWGEvj+8SJjbTmNtVe+9HYlEqhkyY33
3qGxcIPR9Gu/EWBvvsIOq6ExMo3tcDiJQFpZNTegloY0kL9tySECa0IeiObX
0ajrS+6LSSfwtnAoQ9lAw9XWoF8vh4C9gGcyvZUGo96S1XaGQEamm+27r/1w
u4NjcR6BD1o+T/2QxvbqgMgfzxG4KxOvVjyiUSiR9mcVE/jp+a6j4jYaMV9y
WVvlBOq5CfnkMxqCghJHUkHAKSWldKGKRsdIS6SmlMAnh8zWsXYa8uyXf5SW
EwhPPPNSo6axDyOXkq8SaGwteFv/nIZfj+79NRUEeBzFtLIOGhZSs4HFlQSy
466ZnNbQ+A940yJj
            "]]},
          Annotation[#, "Charting`Private`Tag#7"]& ]}, {}},
       {"WolframDynamicHighlight", <|
        "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>}], 
      StyleBox[
       DynamicBox[(Charting`HighlightActionBox["DynamicHighlight", {}, 
         Slot["HighlightElements"], 
         Slot["LayoutOptions"], 
         Slot["Meta"], 
         Charting`HighlightActionFunction["DynamicHighlight", {{{{}, {}, 
             Annotation[{
               Directive[
                Opacity[1.], 
                RGBColor[0.9, 0.36, 0.054], 
                CapForm["Butt"], 
                AbsoluteThickness[1.6]], 
               Line[CompressedData["
1:eJwVi3s0VAkAh9WKwSmishWSkDGaPG63hsn9zZgrm4oihELb9jBWspIUrUcJ
x9BY1mPWRKiGSBTS8yR5bMw6uynZNhxhPFfTA+Ws/eM73/n++NYePL7nh4Uq
Kio75/nfDpM34puCJI6DXFmTTxaJiR6bYiUjmmJEmg9+ziaR2VX8toGRQt0f
Eprk5ZAY8HwTK2XkUbV6FdzufBIivdmdlxgySpzTVu9XRKI/PHlTCuMuFZWd
ZHygkkRakfv1C4xWilTNuhPUQuKgPdGfyOimuKY3w0O+kmg0S8puNx6hsqy1
vejQzVA+eHhuxlxJfVHt1rvWtRlr3rpxoiQzVMwj5rlZxy2Id2FIF3eooH9b
xU3dyi14FSG8tWiZKi55DnZV6nOwZPiwUEeqDgvP2E7tZA7k3qOHM1ZqweoT
vSDgMweReRHvSZ8l0Kobd7cLtEeMuFU3alwHAzuc9Vvl9qji+SsHxbo4IrXs
GuA4gDVue0p34zJcVXvpMXnZAb88+GuH8/hy+I7lsu/rcDHxeTo4LV0f4n+5
75ac5oLjrXj9t8dKeJrIP5oouGi5tWZ8SHs1bit8a8z2bYVr1AsX9QoDcMbj
nW882op7Qfs+so8bIZ+XzP5k7Yj0bvZHQsMYK65oKp7mOmLzil9XeY8ag1g1
NuOlRSFBXpju1bYW9srUmhfRFJqpsWsB+Sbw6S3F6z4Kqo8LhGNn10HK7dD5
gwlwPmV0JrqZIvdMmCLyALC03Cxl2tAMfB3+t8vEQG+48cjUVzPoTJwI020F
ZON+kx/azWEQUGfjMQcEn/1aEFO1HlrPfA0/kDw8v8gr6Eu3QAtlsV8UygNz
exNvdwATez+oqQUX8RBjWCUSwBLTRnhV2s1Da0nPOZ4uCyajycvNtfm4Wy57
vPrtfLd/KZHw+Sh8+qY8+qEVegJaAiOi+YjL9OD2p2+Av0tpoqiCj30/sU/K
T7Ax19zTqTHIhyVj+55ngo3Yn7Eu5dlqJ3QsVn30XMMaliqZWWfdnHDeOJs1
c9oaajN+beIkJ9SluRwr67NGwfpNwSMNTnj3TcWskacNpD1H7EqUTjhcf4iM
e2KDFXZP3L2sBDjY4uB0lGWLpjp213eBAvj2PS1eKrFF7JP3SQU5AnTsDXtJ
LbKDwZfmwk3PBchihNT4h9ih5c8m7UYVGt6NqwYceuzAtDW6Vr2FRlb38KBU
QGD63vnrAyE0DsXNqIc7EwjSEdW3/0jD1kLLQuBCoO377JbaUBrtJ62ODrkS
yNS8OpwcRkNt6fEhaw8CG3yamewIGpHblEOPgwj4v9eURZ6h4VUzN9wfS6CB
mSFTT6Fh6qeteednAqYxOXcn53tqgbHlxXgCSfLLra9SaYjceMFWFwh4nqpS
lKXRaFIkKCLSCEw2dlq6X6JBrtUYWSQhYBS4vCwnh4Zq80qtl78RuFBt2BCX
S6Mz1JIlkxIYVTNvC86jEXrPVbjrCoH6G+QIV0Kj1Fs0ki0j4D7rzeqV0oiY
K9A6Vk6gdlegQ+tlGvySSpZDBQGDoqOu1YU03kzJhf9UERh2OS08f4VGeW5v
alU1gd2SuDOhxTSiMVWWcJtA3URyqncJDZfBhb/vrZ3/ncT5KKWhL9IbXV9P
IDE7r4x5lcZ/AZMkQg==
                "]]}, "Charting`Private`Tag#1"], 
             Annotation[{
               Directive[
                Opacity[1.], 
                RGBColor[0.365248, 0.427802, 0.758297], 
                CapForm["Butt"], 
                AbsoluteThickness[1.6]], 
               Line[CompressedData["
1:eJwVi2s0lAkAhpWRkc21yKWMMgjJ5cs0hr53xszXRGXLZdh0lOTaSQlZx10J
u0ylqFYuxe6GWEIpq+xGUiK7tSUJU7k2rKZk2rT68Zz3POc9j3FAxI59CxUU
FLbO83U5U1dS2/YUbKwVO8/uPcnCZJ9tqYweR3oPri+m5bKQ+0/pwE16Fhlf
p7Wg7DQLrz37E4vo58nNZfEVr/NZyNH+tPUkvZzMn9peH1zIgiQyc30W/QZp
9kzQGVbBQvbFby+n0zvI4tJ060OtLAQ4EpKj9F6yLsLrVNIsC3eYx/MeMsbJ
6gU6u/zDNkDWfCtJbioj749ld7T+tQFGA+7s2AI5yXtlMmzAYSNVSC9a0qWA
5EeevxEVbDyLCq9VWkrDVsp+skfbEWqjQeEaRcqIC266bn/MEd2iiaATeqoY
0DbclSZzRMz5qHcOPmrgfloqE/lxkHCqQytWqgERo1MmfcBBDddPNnxKC4pf
tP9e7OAES6ndEa11SzE1MxW47IITTjc/3kJJl6HnTeO2oW+cMflxNixbrIuD
Vd7qRLQz2KKx5y889NAi+9FU+MYZ92qNpCPqBuCc1Rxx9doIt9gnQuUqQ9xU
7YvvadqIpj2+H6wjVqIpUBJkuJaEuNf6A6HCwKLEzNXjZ0iwdPL1RRMM1G85
q9+sCKR1l4i97xvjauvlmQQO0E6+/dX/p1XQftnvnBwB0FoKw9/Gr0bCvzFV
kl8A9syJnqPuJgimmWVk9gGalcys2RVMqPvSGkw1uBiMZIxPf2bisIWzGlPI
Rbl059T7h6Yw2JzRtS+ei7D4z4UJNWa4bmt9U7mei84MbuGQ2BzLSz/Liye4
WOPaxt3uvwauT15cimfwkLCiJocPC3S91D3S6MNDR1lfElfLEqkeAVc3ZPNw
o7K8xWDAEnfFj12qb/NQ0tpfGXfLCsG7L86lf+QhJdfDSSJei+qopFUlVi7w
PWwd3X3IGjbLGw4a7nOBBd11x13+OsRO/mfWe84FXUtotztVbECF77cXd7rg
GCPPUv69DTgH1oeWKfFxPVsYWjFkA7USNfocm483ilWfVnra4rgv99G1SD6C
GgMdUv60RUFtgTSknI+AexyXEEs75LLp0X79fHw31FqqWWAHV0Ens0ZHgC6v
g09JJXvkJ14khW4CnKHvr/Pbb4/LouIrTxIFEN3Rf83ps4d3/YygrWH+7x0d
LuIT8IT/po9jAgSmyJUjKQK/5waLBscFsDNXNecLCZgMRwR3TAjwMNoqZMSN
gDQ7+XiBVIBFmhEjNh4EMp+X3MW0ADGbZCMte+b7mFebMmcF8K6bG5UkEjC/
EirUp1Mw2am+uCGZgFgh0kdRhcL0AoZFRiqB9x5xIRPznuPODbNKJ/CHPCuj
WZVC21jaWFQ2gV3CyvYAdQoOxirjSgUEciVSYYUOBVq7nurTCwTkDjM+p3Up
9BywsCwvIrA760tIwnIKB5rcwrddImBtq5Hprk/hZ1HOeF45gfZE23vvVlCI
mitUDa0ksK6H/axvJQVeWbUlp4rAGSZvtNWIQv90d/jLGgJ7H+xQOWtMofLc
4A81V+d7o516KasoxGG6Iq2egM3hvWvCVlMQDi984HWNQF5bONvDhIJujvaE
WSOBOb2ozU5MCv8DjVAdPw==
                "]]}, "Charting`Private`Tag#2"], 
             Annotation[{
               Directive[
                Opacity[1.], 
                RGBColor[0.945109, 0.593901, 0.], 
                CapForm["Butt"], 
                AbsoluteThickness[1.6]], 
               Line[CompressedData["
1:eJwVjHk41HkAh1VkrOTeVipTS44Z9zeN8/cZM36JRCk61/KImEKSdGDpcLQG
WVpWo1BPmGiiVhFpo7LO2iRJZSpnkiZtit36433e5/3nXRoQvn7HbDk5OY+v
fLP9+MXEJv98p0OzgmvKmjl422tZLGMcpNQ/mnuvaeEg61Hx8xpGKmUjq30w
2srBqw19cQWMPEoj9e2waScHQs3PHpmMUiprx+rbFY84kEamrEhlXKf0b7UN
Vr7kIK3Qq+Q4o5kK8+purZnhIMCOSI8yeqhMzDVssbLFbYOknDbmCDVb551t
RZEtZHX18VPLZVREW3fVAhU76D33tI3Jn6IuFQRphkfZIdGVUaDSLoek6L3D
yS/t8DhKcFlBSx5T4Q+rDT3sMX8oSKBWoAiWXsjr5Dp7dPiOBmXoKEMr06it
29QB0XlR7202zUddZGbGxWwHxJ5s1ogZU8O8nhVi/lxHSLjbZAMnNeDnZiH6
OdwRrDGr/RrmWpjsFNkJuhzxW93DNfSYNhLJTTaHdsLbfz+FpqUvQMnHhImU
cifY+g4/eeqtg5UVoSoiPQr3LuuNDarqYgrmnWeEFNxjulwVyxfBO88r2GiS
Qq3/5kmz8CXYrmBqbGsNpPeYTRIlJp7KOpLOBAMrvz+10HeUiULth2ohZ4Aj
HWfTff5eikAv5TGjbuAu9eaC3x/L0HHch7DmcSHfIBK8OfwjHE9MFwv5XNh+
zLh/1FMffvlX48gBLtTFBqmfFhvgSVauuFPMxYtI5sjEtAHW3+qS73jJRenY
1vEPbcvRVKnfpKbjjNDD06JYiSGqd7dILq9zRmsyV9SfboR1X/Lfuac4w9it
ibvOzxi5A7F5hjecEbtYIuTDBPER1bsDPzij+VxvPFeDhb3Wc0qlxjxcF5c2
6D5nYWFhtN2W7TycbewTH6xnYyiP98Eym4eELG8HabopXjQyddbc42HzXrN9
HXvMoBXjG3xn1tczw239Hb45CjeLlhyz4aNdRf5mq5IF5HpVTOxC+TjGzGFN
HbDANWmXn1chH9VpriFl/RbYqHNp5kIXH6/nlH9essESZQ/67wSouiDoWqBN
wl+WGDd1eqW5ygUB9+x5O1lWKLlSIlA85IIt/Y3F6vlWmGgIW7St0gXtGyO6
KQVrpH/m2bwfcEE2Y1fVtl3W6P2HW5ygS8P39sJX9r3WqLDKddjjTSO7Z2ig
gE/QeEPOqSiJRmDClGIkTcBWV1r7azINKyNlI74rQVag+k/7Umi07WPvHHQn
8FdeFrfqBI256uGDFt4E05t4dSNCGtGrZIMN/gREdsyJ5NDwqZoZksYRFJoo
U43FNPS3qn539RcCpThNz/JzNCZmMU2SEwkiOnX9Tp2nIfTkhrKPEzjFsOND
LtBoGj4yHJVG8LjRo15FTMNmqdKIQj6Bmn8G5VNJQ/6ujnL3aYL9Vb97UlU0
7oeZsEoLCPoUz/oZXaERVusuWFtEIC6XxE9dpXHeVziSU0rg+uV+veg6jagZ
kXKImKDC80l7Ug0N53MVLPtyAu0i6bOIWhp9Ex2CZxIC6WrZf851NMS5L05I
KgncTn9RZdfTOIiJsiNXCCTj8kztmzRcB2a3bPyT4Ae+isXM114g1Bw1vEYQ
f0obAw00/gc05iKq
                "]]}, "Charting`Private`Tag#3"], 
             Annotation[{
               Directive[
                Opacity[1.], 
                RGBColor[0.645957, 0.253192, 0.685109], 
                CapForm["Butt"], 
                AbsoluteThickness[1.6]], 
               Line[CompressedData["
1:eJwVjHs0lAkARyWPmUil9KYpb4M8viUz+H4zxnyTtigypFiOtV6lJikioWx0
BqVYEuvRFoaQFGvTg0Ib1lYe2TYkBmE1W2HT1h/33HP/uRv9wnZ9Ly8nJ7f9
C1/NniqLf+ibYz9eY/qfkhkLk33mRTJaFFmg3JNw1ZyF9K6iV7/Skkl/phpd
YMnCkNvLE3m0bNLP7QY9yYqFlOVz28/RSsgp20Y9FTsWBkVJ3yTT6kgt8We3
JU4siAtcihNpreRChZbaVf4s+LGIwVO0XnJThb7Y4CcWGnV/zGhjjJHfKZdm
qdLZkN1piJ3Vk5Hetn2ZR0RsbHjlbHMsZ5bsOCtxedLDRryAlre4XQ4r//AN
Gt5qi57wkCrFFQqYW7R+X2KVLdSkASFL85QxWX+oeFjbDh3C8YC0NSpw19la
YJ1uh4js8HdWHmpofN0Zpjpnh5jzrerHJpbCOm1nemGIPSo5e2XD59URaDiZ
1PDUHswJi6Pqm1fAWSnJsJVN4sKdZ9/yJzSgOqCulVlKYvLjTLA4dRWid6SJ
ZHTARjj64i/XNajgxZ88wQVaqjZMjCxZhy1NJQOfI4Ftx54LlMvXgy6ZKntQ
BtT7er43DdNCmuqFwpEhILXX9D1BZ8Cd2i7vspYD65WZa4XjDIh1/c6uduUg
oSM/1f3xRrDs8wO7kzloJt9e87m0CQvkp8t773CgcC835G20NiL6cjbYf+DA
5kNa5ylnHfBPe8wMMrlYJtFNntHUhZqanX6cDxf9IsbY9CddnPM6HhubyUXJ
hNfUv216ODndgruPuQiO/pQbU6kPC0ORsZ+CA56c4eQOpBrgnZpD6BzbAYZO
Dzk7fQwxx9TR6ApzQIxmZQoPRnj01Htk+TUHtF7pi+WoM3G1vFgnvc8BdZKS
e+teMSE10rxJX8pDftNLSVSDMVJMRsP6KR7i0l1tB1NN8Nz7UfrccR48D5se
6ThkChON+f6I6i9nmtOuR7zN2D/DyyKkPLQvVrj7hG6G4pjqIul6R5xmZDBn
I82QmRjT+9nNEbfFgqDSATMM1btHeiQ54s3C8jktN3O0HU3iqt93RECtv1Xc
A3OEdr72eTDjCL8WtkMg0wLCPS5vakz42DPQVLQsxwJNARqZKgF8tO8+2E0q
WuLoz6MVBdl8XKSFVu8NtcSzyBEt8zY+hI1rh9h9lqjqIm8xlChc7JUO5/EI
tPldvb2LRcE/blZZxCdgVXO9mc2mYGGgYsATELhMv92tY0uh7Yhx4Mg2AiEV
zR/f21FQWhY2YuZKQHleuuUSh0IEJRu550vAPsu4dlBAwb16Xjp4gkB5e2Vt
uJCCjteSRTUnCWho17Xs86AwvYBhdCaeQHTE/R6+J4UUZ06wcSIBJ80/Z1Z7
UXg4mjAaLibwJlhm85s3BauN9DHFHAJaStZ1igEUFJrXqHRfJnDKk2yd+NKd
B4yYJXkExiRUb9cPFA7UbwvZUUig1tVjtjiIwi/ClLGMEgK78yNZO/ZTCJ/P
VQmSEKiXxTlZH6DAvXKdyS4noC1I3sMIo/ByuiPk70oC/0xkR00fpCDJ6j9b
eYOAB7cw+cUhClGYLk24SaDhYml2o4iCYFj+9923COhJb5SUHaawKmX5uH4t
gRTb+rqMcAr/AygoHvo=
                "]]}, "Charting`Private`Tag#4"], 
             Annotation[{
               Directive[
                Opacity[1.], 
                RGBColor[0.285821, 0.56, 0.450773], 
                CapForm["Butt"], 
                AbsoluteThickness[1.6]], 
               Line[CompressedData["
1:eJwVx3k41HkAx3EVGXkoIhExRTly/xIZ/T5jBt/YUhRLnkStJ02rzSLrKEcH
WiNZ5JwOlKHJIG068CRXhdoHJVFZa8bZWkla2vaP9/N63szAYx4/LJaRkdnx
rf+1/3AzoSkgf1vowXXdShUsTPZZFk0zoujckUf7RWIWMnqK3t5jpNC+4+1D
O6tYGNrTf1LAyKU11S7NpNWwwF/5ZUc6Q0hbxYWpqz5gYTA0eXMKo5aObnby
WtXGQurVXaVnGW20zpvnXWv/ZCFwKzV4mtFLD8ov7TZf7YBGg3NZ7XqjtD8r
yFQt2QHTD+tOzW2Ypqt07/jGTjlA9627XWT+HP2HYopVl882JBCGQKlDBnes
Vx6YbN2GV2G8Sjk1WZT1PDzAt6KhLA3irRDII6b8Zs3kNRqd3mNBFzQV4Roh
6hUoABG5Yf/YfK+M2I80J8UBiL3Ypho5sQKN5lu6u8IBMdtveviiKmqUPF4c
FAImE1YnVM3V0KSRt076BvjtYdd3zhPq2CzDLehQZ2Ny9vOR1DQNGJYuip/d
zoad98jrN56a8M7XSktIYKO1UndCsnwNrmjv/3tJLRtukd1EXqSNiIHK+83j
bNwP8JkxO7YWnO6AyjEDR6T1ms1QCnoISGSq7PF1xJZV2VreY3pgzm7N1c5w
RGLnlTSvJ0wE07En+toc0UKP3/DPW4ewgY4H/QuOkG0o5I3HrEe9eoyZ4xYO
7D5deHHaXR9Lk20ZEh4HKuUGKZ91DMAs1rE5I+DgXaje6NS8ASzd/PiJPRwI
J/Z9+Ni+AWvWl7k3KnJxJGa+MFa8Ec/jPO2DuFw8S2IXvk8zREWcfvTXaC6M
XJvYu/2N8FUkp//6FhexOmI+F8YICcQnDQkXbcV9p9iqJsjnnLfO1nZCbbmw
Yc1bE9Q3LjxS2uWEK4/7y6PqNuFi25OTQ+ecEJ/hyRpMM0Xj/I2rX+85wedn
s/DO42ZIvT3wIWraCcYMV49mrjmu5264YWvkjA4l2fpnChYI1c2qGvdzxhm9
LJO5XyxQZ+gvXZLpjN9TSXDZewvs9rdN8mt1xl9LRF/W7rFEoBZv96rFLgi6
e8gm/pEldMObQprtXBDYas85bGIFrXnLj7U/usD3/eMilXwrZCp8Kl5e4oKO
vT+9pOWs4c55WlfS64JMxtFqv6PWEGu3mW5WJvBu1Bqy77NGehSzSd+ZILNX
OizgUqiQS272iiI4FD8nH+pMYbVPeg8dTWBlqGjIJRROlecMG8YQtIdvOixx
o7DDUyj/JZZgqcoxiYUnBenlJy6CeIIIl2lJQwAFJku5ZTiJwKt6QTp4kkJ6
aEZLZDaB/r7ly2riKMw+znsZcIlgapGecVICBX/NIolrDgHfnX1k01kKpvXV
DJ08gqaRxJGwVAqtSt2koZDAhqkwKpdPYVHp6laFEgLZFk3FlwUUDv+r92rq
278IMTYRCih0uBtJX18nCLnvxtt5jULBjJ2CqJSgxJs/miWkYMfdt93jJkHY
QqFicDmFy9kHfexFBI7Ft0zsRRTkR3nB+rcI+qc6eQNiCl3pMckzFQTlOe/O
i6sosIZO5wyICaIwVZZ4m8I129TSlkoCMrz46d47FJb9mnlXXEWgwV85tvEu
heMDBa251QT/AchbI+c=
                "]]}, "Charting`Private`Tag#5"], 
             Annotation[{
               Directive[
                Opacity[1.], 
                RGBColor[0.7, 0.336, 0.], 
                CapForm["Butt"], 
                AbsoluteThickness[1.6]], 
               Line[CompressedData["
1:eJwVjHtUjAkAR2faaU21eiGvjSklzZBp+sqZpvp+8+ibUVvtUtISp1aRopUe
dNCLlpyp1GBpNErESKSU4qBdQpQ2vSTpoe1dJLMmsmv/uOf+cc+5FsGRa0J0
aDSa11f+t+DtleSaIKXbkyM23A8hfIx32BdMMuPJcL+Ie8e38pHdWtB1i5lG
5ncms53C+Ojz7TygYp4mN2lJ57gIPtJnffI6xlSTZXP6vLRRfPRGHXFMY1aR
jvnVAdMJfMjzf7yUyqwlA2M3n9I9zUewM9F7kNlOWpemu5jV83Hf+rcT9axh
0mToTZvWzRmTd+4mTC2dJAvle88FX3TG4i4f/h7lFClTVPCqjARIljFVM5/R
EDuPwWlKEOBFdPh13dkMWNK2Gu8eEMBwMDTcWDUDdfsUPk0BLmjwHwnNnG+A
Q6f6YPXYBbGno987rTfEq1G5npbriv1ZtaZ7xozRH+9um5nnihLhxsn+LFN4
OTaaF+m7gTPGizNdORuti7S3yne5QXGn+QdqbA54w4VXU7rdMP5Ru12eMRdl
MUtim1eT4PsPvXy1dj5ax3OODVaReHx98diA0UL0eLeyNbMBzz0tshnF30Ot
0dVUyoDbQQEau8hF+MJRDncmAhntdhpCjwWbB54e1A1gldnJBf4jLMzdEPDc
cAxIacjLWPfEAqz1imv11kI8Ikcvbs6xRObzHk1DgBCM6tzw0X1LsPjz0a1E
lhD8fzIbD/pYwTmRErbXCGFSZJ2mNbfGpUh2ZNyUEN1RrOGJaWucJbc9jOGJ
oB7b8PZD/VJ0pZQfLg8VYfu+6dz9JTZYkLoper1KhLrDwtyejGV46LGy7F2L
CLYeNcKfNtvCdo1xYJ2+GPvNS9IlYOPGoAdXXyxG7fmOBKEpB2+rjkcciROj
qkhdvbCLg3v2etP/qsXIe9BZFH93Oey4LRWtPWIkZa916c1YgapNpS/fmUkQ
sNsupmGXHX6ZNWS7w+frmemx5qFkJWI03G72QQmezWTcq9Pj4s3esyOvKyQ4
xDrBmdrLBZUcZqkZl+CmXBZ2uYcLt5uiam8rd/z9TfGnRb72GIqKSWMGuiO0
cotT0p/2CKprKKxUuCP4sUC8jcPDKj8XuyuP3PFzz4MCEyUPiiD6azqdwjO/
X9tIXQe45LR8/N2RwnFmRNnGCAcooptCbcIo+N9f0CfocEBEI+dfs7yvvX2w
XyUhkBqYTVvdTGFL0tSMKIrA6LUcY14LBd4yg2USGQE/RgFrYSuF+pjl2wY8
CVheLsNoG4VvTSIHuGsJ3PnYnHisg0KsdHKgOoiAJnsevb2XwrqyL4O9Bwhs
qT1DD5+gYLXBSL88kcBT8wsmvu8pTNBZ7MPJBBx2FVu4TlJI9xFuX55KgDbv
rtBIQ6FmKGUoWk5AGdKVVKql4GShN6yrJNBEW6LzmSYF49F8g7YzBAS+HNM+
uhSNO9kctYpAfqGDZb2OFDtve4Z7nyMQ6S0RnWVIccE/ffiEmoCBMiRZwpQi
+kuuQVgRgajxHVkr9KQQnb/KERQTeCGKzTfTl6JzoiH8dQmBwsHUPwYMpCg6
1X20pJSAoWtG41/fSRGPicspNwjEZJ7sqZophaxf56lfBYGOXtXEOUMp5qbP
GrGpJCBedVFHbiTFfyjfIPM=
                "]]}, "Charting`Private`Tag#6"], 
             Annotation[{
               Directive[
                Opacity[1.], 
                RGBColor[0.491486, 0.345109, 0.8], 
                CapForm["Butt"], 
                AbsoluteThickness[1.6]], 
               Line[CompressedData["
1:eJwViXtUTAkAh9NO22ToKSnUtAw9qJlcUbe6v5mmbltrG1OMcNg6bYs6WhRR
snrI2m0mbBGpEyoypq2Q1MEoqZYe1iPTaChpekqSFFr7x3e+853PNixa/LOu
jo7Oqq/8b3L4clJdaI5XBMt4yvBbEm/UvPOjzH1UmjvrzxJ9Esefnn9RxTxC
tZ+NNxUZkOgO7kjMY56iZk1lWx2dQUJqNrnqKLOYEqktPczMSHTt/H35EeYN
yvpMaLQFm0T6WdHFQ8xGKsnOucfGnUSYO9GVwlRR2anlTdztJGo5aVlN7H7K
qaVax1xDYvTmrQMTi0ap9SLG7EQ/D9i8CHSLy5mgKhaQmsclHkjyY+bNbNaB
+Tql7rCNJ57FRJbpzWIgqCb3s/SwJwx7IyKN8/TxpcgicPijJ1okAxEZliws
Nu/wx1Yv7D4V8851nSGWt9tZmbd6Yf+xRtO4IWPUJA96yfkUSvkbR3uOmSKr
Nsi1vpiC45DLHlPnWajo5EX2MoG/bj7+wXfIHFWfFN3NAN6Mf9yWLrPALhNx
w3gM4Cbpa38eZIm2FZKnSZeBhjKbIa3RXPw7XerG6AYC4p746SvmQTSmYtTP
4aM6NGTMKdoapG3KxICID5nKaYwwYCPoOkKCU/lYMfuElWSAjYobks55N/lI
bsmXrf3HFveTTt5Sv+ejnhq8sPn0dwjj9+lp7AVgKHMjBxMWoPdR5m5BmABu
HzIepgQuxN6B1SJtlgAmcs6Rj/M5+EXpmpjaKMDLnez+kc8cGLjHPknW9Ubx
0Ibh902LYDBWc6LW1RvbEj7n7i9djFgqKjki2hsPDvNzO2V2sOZ51kwVesPe
v46/erM9XNZZR7WrvLF/fqlUCAf8rRdCzTETorFAfYBv6ohNXefiT9BC3JAX
K+e+cIQ4zGKGYbwQ+Xc75PtuLUFRxKu67jIhDh4P8uiSLYXqpLJv6rUQIbuc
Ylt2OGEkcHxlvI0PHJj+4ntCZxQQ1PDKYB80z2TcfmDABadSMTmY5oNUdpbj
xF4ucGcPj3HbB9fT/bZe6uSifFzUsnHUB6+/UUxaB/NQUp6cPXupLyIqw10P
1vCwyVBz7V64L8IaSO8tji4QZ/l7Vp30xfrOu+dNclxw76zRkFGrL5rX/NpG
6S1DgvqVfpEejUxm1JWNUcugvtoZu9yNhqTWqptUL0OVmbshZ8fXr+rtyRMS
eJabbyQpoBF+cEJ/py8BjFy0QSENFzuWndCPQJFPmbN9EY2m2CVbtAEEYgfu
BE5eoPGtSbSWG0TAxP2VLE9OYzc9qlWGEvj+8SJjbTmNtVe+9HYlEqhkyY33
3qGxcIPR9Gu/EWBvvsIOq6ExMo3tcDiJQFpZNTegloY0kL9tySECa0IeiObX
0ajrS+6LSSfwtnAoQ9lAw9XWoF8vh4C9gGcyvZUGo96S1XaGQEamm+27r/1w
u4NjcR6BD1o+T/2QxvbqgMgfzxG4KxOvVjyiUSiR9mcVE/jp+a6j4jYaMV9y
WVvlBOq5CfnkMxqCghJHUkHAKSWldKGKRsdIS6SmlMAnh8zWsXYa8uyXf5SW
EwhPPPNSo6axDyOXkq8SaGwteFv/nIZfj+79NRUEeBzFtLIOGhZSs4HFlQSy
466ZnNbQ+A940yJj
                "]]}, "Charting`Private`Tag#7"]}}, {}}, <|
          "HighlightElements" -> <|
            "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
           "LayoutOptions" -> <|
            "PanelPlotLayout" -> <||>, 
             "PlotRange" -> {{0., 20.72326583694641}, {20.72326583694641, 
              50.65687204586901}}, "Frame" -> {{True, True}, {True, True}}, 
             "AxesOrigin" -> {0., 20.723265836946457`}, 
             "ImageSize" -> {800, 800/GoldenRatio}, "Axes" -> {False, False}, 
             "LabelStyle" -> Directive[FontSize -> 14], "AspectRatio" -> 
             GoldenRatio^(-1), "DefaultStyle" -> {
               Directive[
                Opacity[1.], 
                RGBColor[0.491486, 0.345109, 0.8], 
                CapForm["Butt"], 
                AbsoluteThickness[1.6]], 
               Directive[
                Opacity[1.], 
                RGBColor[0.7, 0.336, 0.], 
                CapForm["Butt"], 
                AbsoluteThickness[1.6]], 
               Directive[
                Opacity[1.], 
                RGBColor[0.285821, 0.56, 0.450773], 
                CapForm["Butt"], 
                AbsoluteThickness[1.6]], 
               Directive[
                Opacity[1.], 
                RGBColor[0.645957, 0.253192, 0.685109], 
                CapForm["Butt"], 
                AbsoluteThickness[1.6]], 
               Directive[
                Opacity[1.], 
                RGBColor[0.945109, 0.593901, 0.], 
                CapForm["Butt"], 
                AbsoluteThickness[1.6]], 
               Directive[
                Opacity[1.], 
                RGBColor[0.365248, 0.427802, 0.758297], 
                CapForm["Butt"], 
                AbsoluteThickness[1.6]], 
               Directive[
                Opacity[1.], 
                RGBColor[0.9, 0.36, 0.054], 
                CapForm["Butt"], 
                AbsoluteThickness[1.6]]}, 
             "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
                 Exp[
                  Part[#, 1]], 
                 Exp[
                  Part[#, 2]]}& ), 
               "ScalingFunctions" -> {{Log, Exp}, {Log, Exp}}|>, 
             "Primitives" -> {}, "GCFlag" -> False|>, 
           "Meta" -> <|
            "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, 
             "Function" -> Plot, "GroupHighlight" -> False|>|>]]& )[<|
         "HighlightElements" -> <|
           "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
          "LayoutOptions" -> <|
           "PanelPlotLayout" -> <||>, 
            "PlotRange" -> {{0., 20.72326583694641}, {20.72326583694641, 
             50.65687204586901}}, "Frame" -> {{True, True}, {True, True}}, 
            "AxesOrigin" -> {0., 20.723265836946457`}, 
            "ImageSize" -> {800, 800/GoldenRatio}, "Axes" -> {False, False}, 
            "LabelStyle" -> Directive[FontSize -> 14], "AspectRatio" -> 
            GoldenRatio^(-1), "DefaultStyle" -> {
              Directive[
               Opacity[1.], 
               RGBColor[0.491486, 0.345109, 0.8], 
               CapForm["Butt"], 
               AbsoluteThickness[1.6]], 
              Directive[
               Opacity[1.], 
               RGBColor[0.7, 0.336, 0.], 
               CapForm["Butt"], 
               AbsoluteThickness[1.6]], 
              Directive[
               Opacity[1.], 
               RGBColor[0.285821, 0.56, 0.450773], 
               CapForm["Butt"], 
               AbsoluteThickness[1.6]], 
              Directive[
               Opacity[1.], 
               RGBColor[0.645957, 0.253192, 0.685109], 
               CapForm["Butt"], 
               AbsoluteThickness[1.6]], 
              Directive[
               Opacity[1.], 
               RGBColor[0.945109, 0.593901, 0.], 
               CapForm["Butt"], 
               AbsoluteThickness[1.6]], 
              Directive[
               Opacity[1.], 
               RGBColor[0.365248, 0.427802, 0.758297], 
               CapForm["Butt"], 
               AbsoluteThickness[1.6]], 
              Directive[
               Opacity[1.], 
               RGBColor[0.9, 0.36, 0.054], 
               CapForm["Butt"], 
               AbsoluteThickness[1.6]]}, 
            "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
                Exp[
                 Part[#, 1]], 
                Exp[
                 Part[#, 2]]}& ), 
              "ScalingFunctions" -> {{Log, Exp}, {Log, Exp}}|>, 
            "Primitives" -> {}, "GCFlag" -> False|>, 
          "Meta" -> <|
           "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
            Plot, "GroupHighlight" -> False|>|>],
        ImageSizeCache->{{4.503599627370496*^15, -4.503599627370496*^15}, {
         4.503599627370496*^15, -4.503599627370496*^15}}],
       Selectable->False]},
     Annotation[{{{{}, {}, 
         Annotation[{
           Directive[
            Opacity[1.], 
            RGBColor[0.9, 0.36, 0.054], 
            CapForm["Butt"], 
            AbsoluteThickness[1.6]], 
           Line[CompressedData["
1:eJwVi3s0VAkAh9WKwSmishWSkDGaPG63hsn9zZgrm4oihELb9jBWspIUrUcJ
x9BY1mPWRKiGSBTS8yR5bMw6uynZNhxhPFfTA+Ws/eM73/n++NYePL7nh4Uq
Kio75/nfDpM34puCJI6DXFmTTxaJiR6bYiUjmmJEmg9+ziaR2VX8toGRQt0f
Eprk5ZAY8HwTK2XkUbV6FdzufBIivdmdlxgySpzTVu9XRKI/PHlTCuMuFZWd
ZHygkkRakfv1C4xWilTNuhPUQuKgPdGfyOimuKY3w0O+kmg0S8puNx6hsqy1
vejQzVA+eHhuxlxJfVHt1rvWtRlr3rpxoiQzVMwj5rlZxy2Id2FIF3eooH9b
xU3dyi14FSG8tWiZKi55DnZV6nOwZPiwUEeqDgvP2E7tZA7k3qOHM1ZqweoT
vSDgMweReRHvSZ8l0Kobd7cLtEeMuFU3alwHAzuc9Vvl9qji+SsHxbo4IrXs
GuA4gDVue0p34zJcVXvpMXnZAb88+GuH8/hy+I7lsu/rcDHxeTo4LV0f4n+5
75ac5oLjrXj9t8dKeJrIP5oouGi5tWZ8SHs1bit8a8z2bYVr1AsX9QoDcMbj
nW882op7Qfs+so8bIZ+XzP5k7Yj0bvZHQsMYK65oKp7mOmLzil9XeY8ag1g1
NuOlRSFBXpju1bYW9srUmhfRFJqpsWsB+Sbw6S3F6z4Kqo8LhGNn10HK7dD5
gwlwPmV0JrqZIvdMmCLyALC03Cxl2tAMfB3+t8vEQG+48cjUVzPoTJwI020F
ZON+kx/azWEQUGfjMQcEn/1aEFO1HlrPfA0/kDw8v8gr6Eu3QAtlsV8UygNz
exNvdwATez+oqQUX8RBjWCUSwBLTRnhV2s1Da0nPOZ4uCyajycvNtfm4Wy57
vPrtfLd/KZHw+Sh8+qY8+qEVegJaAiOi+YjL9OD2p2+Av0tpoqiCj30/sU/K
T7Ax19zTqTHIhyVj+55ngo3Yn7Eu5dlqJ3QsVn30XMMaliqZWWfdnHDeOJs1
c9oaajN+beIkJ9SluRwr67NGwfpNwSMNTnj3TcWskacNpD1H7EqUTjhcf4iM
e2KDFXZP3L2sBDjY4uB0lGWLpjp213eBAvj2PS1eKrFF7JP3SQU5AnTsDXtJ
LbKDwZfmwk3PBchihNT4h9ih5c8m7UYVGt6NqwYceuzAtDW6Vr2FRlb38KBU
QGD63vnrAyE0DsXNqIc7EwjSEdW3/0jD1kLLQuBCoO377JbaUBrtJ62ODrkS
yNS8OpwcRkNt6fEhaw8CG3yamewIGpHblEOPgwj4v9eURZ6h4VUzN9wfS6CB
mSFTT6Fh6qeteednAqYxOXcn53tqgbHlxXgCSfLLra9SaYjceMFWFwh4nqpS
lKXRaFIkKCLSCEw2dlq6X6JBrtUYWSQhYBS4vCwnh4Zq80qtl78RuFBt2BCX
S6Mz1JIlkxIYVTNvC86jEXrPVbjrCoH6G+QIV0Kj1Fs0ki0j4D7rzeqV0oiY
K9A6Vk6gdlegQ+tlGvySSpZDBQGDoqOu1YU03kzJhf9UERh2OS08f4VGeW5v
alU1gd2SuDOhxTSiMVWWcJtA3URyqncJDZfBhb/vrZ3/ncT5KKWhL9IbXV9P
IDE7r4x5lcZ/AZMkQg==
            "]]}, "Charting`Private`Tag#1"], 
         Annotation[{
           Directive[
            Opacity[1.], 
            RGBColor[0.365248, 0.427802, 0.758297], 
            CapForm["Butt"], 
            AbsoluteThickness[1.6]], 
           Line[CompressedData["
1:eJwVi2s0lAkAhpWRkc21yKWMMgjJ5cs0hr53xszXRGXLZdh0lOTaSQlZx10J
u0ylqFYuxe6GWEIpq+xGUiK7tSUJU7k2rKZk2rT68Zz3POc9j3FAxI59CxUU
FLbO83U5U1dS2/YUbKwVO8/uPcnCZJ9tqYweR3oPri+m5bKQ+0/pwE16Fhlf
p7Wg7DQLrz37E4vo58nNZfEVr/NZyNH+tPUkvZzMn9peH1zIgiQyc30W/QZp
9kzQGVbBQvbFby+n0zvI4tJ060OtLAQ4EpKj9F6yLsLrVNIsC3eYx/MeMsbJ
6gU6u/zDNkDWfCtJbioj749ld7T+tQFGA+7s2AI5yXtlMmzAYSNVSC9a0qWA
5EeevxEVbDyLCq9VWkrDVsp+skfbEWqjQeEaRcqIC266bn/MEd2iiaATeqoY
0DbclSZzRMz5qHcOPmrgfloqE/lxkHCqQytWqgERo1MmfcBBDddPNnxKC4pf
tP9e7OAES6ndEa11SzE1MxW47IITTjc/3kJJl6HnTeO2oW+cMflxNixbrIuD
Vd7qRLQz2KKx5y889NAi+9FU+MYZ92qNpCPqBuCc1Rxx9doIt9gnQuUqQ9xU
7YvvadqIpj2+H6wjVqIpUBJkuJaEuNf6A6HCwKLEzNXjZ0iwdPL1RRMM1G85
q9+sCKR1l4i97xvjauvlmQQO0E6+/dX/p1XQftnvnBwB0FoKw9/Gr0bCvzFV
kl8A9syJnqPuJgimmWVk9gGalcys2RVMqPvSGkw1uBiMZIxPf2bisIWzGlPI
Rbl059T7h6Yw2JzRtS+ei7D4z4UJNWa4bmt9U7mei84MbuGQ2BzLSz/Liye4
WOPaxt3uvwauT15cimfwkLCiJocPC3S91D3S6MNDR1lfElfLEqkeAVc3ZPNw
o7K8xWDAEnfFj12qb/NQ0tpfGXfLCsG7L86lf+QhJdfDSSJei+qopFUlVi7w
PWwd3X3IGjbLGw4a7nOBBd11x13+OsRO/mfWe84FXUtotztVbECF77cXd7rg
GCPPUv69DTgH1oeWKfFxPVsYWjFkA7USNfocm483ilWfVnra4rgv99G1SD6C
GgMdUv60RUFtgTSknI+AexyXEEs75LLp0X79fHw31FqqWWAHV0Ens0ZHgC6v
g09JJXvkJ14khW4CnKHvr/Pbb4/LouIrTxIFEN3Rf83ps4d3/YygrWH+7x0d
LuIT8IT/po9jAgSmyJUjKQK/5waLBscFsDNXNecLCZgMRwR3TAjwMNoqZMSN
gDQ7+XiBVIBFmhEjNh4EMp+X3MW0ADGbZCMte+b7mFebMmcF8K6bG5UkEjC/
EirUp1Mw2am+uCGZgFgh0kdRhcL0AoZFRiqB9x5xIRPznuPODbNKJ/CHPCuj
WZVC21jaWFQ2gV3CyvYAdQoOxirjSgUEciVSYYUOBVq7nurTCwTkDjM+p3Up
9BywsCwvIrA760tIwnIKB5rcwrddImBtq5Hprk/hZ1HOeF45gfZE23vvVlCI
mitUDa0ksK6H/axvJQVeWbUlp4rAGSZvtNWIQv90d/jLGgJ7H+xQOWtMofLc
4A81V+d7o516KasoxGG6Iq2egM3hvWvCVlMQDi984HWNQF5bONvDhIJujvaE
WSOBOb2ozU5MCv8DjVAdPw==
            "]]}, "Charting`Private`Tag#2"], 
         Annotation[{
           Directive[
            Opacity[1.], 
            RGBColor[0.945109, 0.593901, 0.], 
            CapForm["Butt"], 
            AbsoluteThickness[1.6]], 
           Line[CompressedData["
1:eJwVjHk41HkAh1VkrOTeVipTS44Z9zeN8/cZM36JRCk61/KImEKSdGDpcLQG
WVpWo1BPmGiiVhFpo7LO2iRJZSpnkiZtit36433e5/3nXRoQvn7HbDk5OY+v
fLP9+MXEJv98p0OzgmvKmjl422tZLGMcpNQ/mnuvaeEg61Hx8xpGKmUjq30w
2srBqw19cQWMPEoj9e2waScHQs3PHpmMUiprx+rbFY84kEamrEhlXKf0b7UN
Vr7kIK3Qq+Q4o5kK8+purZnhIMCOSI8yeqhMzDVssbLFbYOknDbmCDVb551t
RZEtZHX18VPLZVREW3fVAhU76D33tI3Jn6IuFQRphkfZIdGVUaDSLoek6L3D
yS/t8DhKcFlBSx5T4Q+rDT3sMX8oSKBWoAiWXsjr5Dp7dPiOBmXoKEMr06it
29QB0XlR7202zUddZGbGxWwHxJ5s1ogZU8O8nhVi/lxHSLjbZAMnNeDnZiH6
OdwRrDGr/RrmWpjsFNkJuhzxW93DNfSYNhLJTTaHdsLbfz+FpqUvQMnHhImU
cifY+g4/eeqtg5UVoSoiPQr3LuuNDarqYgrmnWeEFNxjulwVyxfBO88r2GiS
Qq3/5kmz8CXYrmBqbGsNpPeYTRIlJp7KOpLOBAMrvz+10HeUiULth2ohZ4Aj
HWfTff5eikAv5TGjbuAu9eaC3x/L0HHch7DmcSHfIBK8OfwjHE9MFwv5XNh+
zLh/1FMffvlX48gBLtTFBqmfFhvgSVauuFPMxYtI5sjEtAHW3+qS73jJRenY
1vEPbcvRVKnfpKbjjNDD06JYiSGqd7dILq9zRmsyV9SfboR1X/Lfuac4w9it
ibvOzxi5A7F5hjecEbtYIuTDBPER1bsDPzij+VxvPFeDhb3Wc0qlxjxcF5c2
6D5nYWFhtN2W7TycbewTH6xnYyiP98Eym4eELG8HabopXjQyddbc42HzXrN9
HXvMoBXjG3xn1tczw239Hb45CjeLlhyz4aNdRf5mq5IF5HpVTOxC+TjGzGFN
HbDANWmXn1chH9VpriFl/RbYqHNp5kIXH6/nlH9essESZQ/67wSouiDoWqBN
wl+WGDd1eqW5ygUB9+x5O1lWKLlSIlA85IIt/Y3F6vlWmGgIW7St0gXtGyO6
KQVrpH/m2bwfcEE2Y1fVtl3W6P2HW5ygS8P39sJX9r3WqLDKddjjTSO7Z2ig
gE/QeEPOqSiJRmDClGIkTcBWV1r7azINKyNlI74rQVag+k/7Umi07WPvHHQn
8FdeFrfqBI256uGDFt4E05t4dSNCGtGrZIMN/gREdsyJ5NDwqZoZksYRFJoo
U43FNPS3qn539RcCpThNz/JzNCZmMU2SEwkiOnX9Tp2nIfTkhrKPEzjFsOND
LtBoGj4yHJVG8LjRo15FTMNmqdKIQj6Bmn8G5VNJQ/6ujnL3aYL9Vb97UlU0
7oeZsEoLCPoUz/oZXaERVusuWFtEIC6XxE9dpXHeVziSU0rg+uV+veg6jagZ
kXKImKDC80l7Ug0N53MVLPtyAu0i6bOIWhp9Ex2CZxIC6WrZf851NMS5L05I
KgncTn9RZdfTOIiJsiNXCCTj8kztmzRcB2a3bPyT4Ae+isXM114g1Bw1vEYQ
f0obAw00/gc05iKq
            "]]}, "Charting`Private`Tag#3"], 
         Annotation[{
           Directive[
            Opacity[1.], 
            RGBColor[0.645957, 0.253192, 0.685109], 
            CapForm["Butt"], 
            AbsoluteThickness[1.6]], 
           Line[CompressedData["
1:eJwVjHs0lAkARyWPmUil9KYpb4M8viUz+H4zxnyTtigypFiOtV6lJikioWx0
BqVYEuvRFoaQFGvTg0Ib1lYe2TYkBmE1W2HT1h/33HP/uRv9wnZ9Ly8nJ7f9
C1/NniqLf+ibYz9eY/qfkhkLk33mRTJaFFmg3JNw1ZyF9K6iV7/Skkl/phpd
YMnCkNvLE3m0bNLP7QY9yYqFlOVz28/RSsgp20Y9FTsWBkVJ3yTT6kgt8We3
JU4siAtcihNpreRChZbaVf4s+LGIwVO0XnJThb7Y4CcWGnV/zGhjjJHfKZdm
qdLZkN1piJ3Vk5Hetn2ZR0RsbHjlbHMsZ5bsOCtxedLDRryAlre4XQ4r//AN
Gt5qi57wkCrFFQqYW7R+X2KVLdSkASFL85QxWX+oeFjbDh3C8YC0NSpw19la
YJ1uh4js8HdWHmpofN0Zpjpnh5jzrerHJpbCOm1nemGIPSo5e2XD59URaDiZ
1PDUHswJi6Pqm1fAWSnJsJVN4sKdZ9/yJzSgOqCulVlKYvLjTLA4dRWid6SJ
ZHTARjj64i/XNajgxZ88wQVaqjZMjCxZhy1NJQOfI4Ftx54LlMvXgy6ZKntQ
BtT7er43DdNCmuqFwpEhILXX9D1BZ8Cd2i7vspYD65WZa4XjDIh1/c6uduUg
oSM/1f3xRrDs8wO7kzloJt9e87m0CQvkp8t773CgcC835G20NiL6cjbYf+DA
5kNa5ylnHfBPe8wMMrlYJtFNntHUhZqanX6cDxf9IsbY9CddnPM6HhubyUXJ
hNfUv216ODndgruPuQiO/pQbU6kPC0ORsZ+CA56c4eQOpBrgnZpD6BzbAYZO
Dzk7fQwxx9TR6ApzQIxmZQoPRnj01Htk+TUHtF7pi+WoM3G1vFgnvc8BdZKS
e+teMSE10rxJX8pDftNLSVSDMVJMRsP6KR7i0l1tB1NN8Nz7UfrccR48D5se
6ThkChON+f6I6i9nmtOuR7zN2D/DyyKkPLQvVrj7hG6G4pjqIul6R5xmZDBn
I82QmRjT+9nNEbfFgqDSATMM1btHeiQ54s3C8jktN3O0HU3iqt93RECtv1Xc
A3OEdr72eTDjCL8WtkMg0wLCPS5vakz42DPQVLQsxwJNARqZKgF8tO8+2E0q
WuLoz6MVBdl8XKSFVu8NtcSzyBEt8zY+hI1rh9h9lqjqIm8xlChc7JUO5/EI
tPldvb2LRcE/blZZxCdgVXO9mc2mYGGgYsATELhMv92tY0uh7Yhx4Mg2AiEV
zR/f21FQWhY2YuZKQHleuuUSh0IEJRu550vAPsu4dlBAwb16Xjp4gkB5e2Vt
uJCCjteSRTUnCWho17Xs86AwvYBhdCaeQHTE/R6+J4UUZ06wcSIBJ80/Z1Z7
UXg4mjAaLibwJlhm85s3BauN9DHFHAJaStZ1igEUFJrXqHRfJnDKk2yd+NKd
B4yYJXkExiRUb9cPFA7UbwvZUUig1tVjtjiIwi/ClLGMEgK78yNZO/ZTCJ/P
VQmSEKiXxTlZH6DAvXKdyS4noC1I3sMIo/ByuiPk70oC/0xkR00fpCDJ6j9b
eYOAB7cw+cUhClGYLk24SaDhYml2o4iCYFj+9923COhJb5SUHaawKmX5uH4t
gRTb+rqMcAr/AygoHvo=
            "]]}, "Charting`Private`Tag#4"], 
         Annotation[{
           Directive[
            Opacity[1.], 
            RGBColor[0.285821, 0.56, 0.450773], 
            CapForm["Butt"], 
            AbsoluteThickness[1.6]], 
           Line[CompressedData["
1:eJwVx3k41HkAx3EVGXkoIhExRTly/xIZ/T5jBt/YUhRLnkStJ02rzSLrKEcH
WiNZ5JwOlKHJIG068CRXhdoHJVFZa8bZWkla2vaP9/N63szAYx4/LJaRkdnx
rf+1/3AzoSkgf1vowXXdShUsTPZZFk0zoujckUf7RWIWMnqK3t5jpNC+4+1D
O6tYGNrTf1LAyKU11S7NpNWwwF/5ZUc6Q0hbxYWpqz5gYTA0eXMKo5aObnby
WtXGQurVXaVnGW20zpvnXWv/ZCFwKzV4mtFLD8ov7TZf7YBGg3NZ7XqjtD8r
yFQt2QHTD+tOzW2Ypqt07/jGTjlA9627XWT+HP2HYopVl882JBCGQKlDBnes
Vx6YbN2GV2G8Sjk1WZT1PDzAt6KhLA3irRDII6b8Zs3kNRqd3mNBFzQV4Roh
6hUoABG5Yf/YfK+M2I80J8UBiL3Ypho5sQKN5lu6u8IBMdtveviiKmqUPF4c
FAImE1YnVM3V0KSRt076BvjtYdd3zhPq2CzDLehQZ2Ny9vOR1DQNGJYuip/d
zoad98jrN56a8M7XSktIYKO1UndCsnwNrmjv/3tJLRtukd1EXqSNiIHK+83j
bNwP8JkxO7YWnO6AyjEDR6T1ms1QCnoISGSq7PF1xJZV2VreY3pgzm7N1c5w
RGLnlTSvJ0wE07En+toc0UKP3/DPW4ewgY4H/QuOkG0o5I3HrEe9eoyZ4xYO
7D5deHHaXR9Lk20ZEh4HKuUGKZ91DMAs1rE5I+DgXaje6NS8ASzd/PiJPRwI
J/Z9+Ni+AWvWl7k3KnJxJGa+MFa8Ec/jPO2DuFw8S2IXvk8zREWcfvTXaC6M
XJvYu/2N8FUkp//6FhexOmI+F8YICcQnDQkXbcV9p9iqJsjnnLfO1nZCbbmw
Yc1bE9Q3LjxS2uWEK4/7y6PqNuFi25OTQ+ecEJ/hyRpMM0Xj/I2rX+85wedn
s/DO42ZIvT3wIWraCcYMV49mrjmu5264YWvkjA4l2fpnChYI1c2qGvdzxhm9
LJO5XyxQZ+gvXZLpjN9TSXDZewvs9rdN8mt1xl9LRF/W7rFEoBZv96rFLgi6
e8gm/pEldMObQprtXBDYas85bGIFrXnLj7U/usD3/eMilXwrZCp8Kl5e4oKO
vT+9pOWs4c55WlfS64JMxtFqv6PWEGu3mW5WJvBu1Bqy77NGehSzSd+ZILNX
OizgUqiQS272iiI4FD8nH+pMYbVPeg8dTWBlqGjIJRROlecMG8YQtIdvOixx
o7DDUyj/JZZgqcoxiYUnBenlJy6CeIIIl2lJQwAFJku5ZTiJwKt6QTp4kkJ6
aEZLZDaB/r7ly2riKMw+znsZcIlgapGecVICBX/NIolrDgHfnX1k01kKpvXV
DJ08gqaRxJGwVAqtSt2koZDAhqkwKpdPYVHp6laFEgLZFk3FlwUUDv+r92rq
278IMTYRCih0uBtJX18nCLnvxtt5jULBjJ2CqJSgxJs/miWkYMfdt93jJkHY
QqFicDmFy9kHfexFBI7Ft0zsRRTkR3nB+rcI+qc6eQNiCl3pMckzFQTlOe/O
i6sosIZO5wyICaIwVZZ4m8I129TSlkoCMrz46d47FJb9mnlXXEWgwV85tvEu
heMDBa251QT/AchbI+c=
            "]]}, "Charting`Private`Tag#5"], 
         Annotation[{
           Directive[
            Opacity[1.], 
            RGBColor[0.7, 0.336, 0.], 
            CapForm["Butt"], 
            AbsoluteThickness[1.6]], 
           Line[CompressedData["
1:eJwVjHtUjAkAR2faaU21eiGvjSklzZBp+sqZpvp+8+ibUVvtUtISp1aRopUe
dNCLlpyp1GBpNErESKSU4qBdQpQ2vSTpoe1dJLMmsmv/uOf+cc+5FsGRa0J0
aDSa11f+t+DtleSaIKXbkyM23A8hfIx32BdMMuPJcL+Ie8e38pHdWtB1i5lG
5ncms53C+Ojz7TygYp4mN2lJ57gIPtJnffI6xlSTZXP6vLRRfPRGHXFMY1aR
jvnVAdMJfMjzf7yUyqwlA2M3n9I9zUewM9F7kNlOWpemu5jV83Hf+rcT9axh
0mToTZvWzRmTd+4mTC2dJAvle88FX3TG4i4f/h7lFClTVPCqjARIljFVM5/R
EDuPwWlKEOBFdPh13dkMWNK2Gu8eEMBwMDTcWDUDdfsUPk0BLmjwHwnNnG+A
Q6f6YPXYBbGno987rTfEq1G5npbriv1ZtaZ7xozRH+9um5nnihLhxsn+LFN4
OTaaF+m7gTPGizNdORuti7S3yne5QXGn+QdqbA54w4VXU7rdMP5Ru12eMRdl
MUtim1eT4PsPvXy1dj5ax3OODVaReHx98diA0UL0eLeyNbMBzz0tshnF30Ot
0dVUyoDbQQEau8hF+MJRDncmAhntdhpCjwWbB54e1A1gldnJBf4jLMzdEPDc
cAxIacjLWPfEAqz1imv11kI8Ikcvbs6xRObzHk1DgBCM6tzw0X1LsPjz0a1E
lhD8fzIbD/pYwTmRErbXCGFSZJ2mNbfGpUh2ZNyUEN1RrOGJaWucJbc9jOGJ
oB7b8PZD/VJ0pZQfLg8VYfu+6dz9JTZYkLoper1KhLrDwtyejGV46LGy7F2L
CLYeNcKfNtvCdo1xYJ2+GPvNS9IlYOPGoAdXXyxG7fmOBKEpB2+rjkcciROj
qkhdvbCLg3v2etP/qsXIe9BZFH93Oey4LRWtPWIkZa916c1YgapNpS/fmUkQ
sNsupmGXHX6ZNWS7w+frmemx5qFkJWI03G72QQmezWTcq9Pj4s3esyOvKyQ4
xDrBmdrLBZUcZqkZl+CmXBZ2uYcLt5uiam8rd/z9TfGnRb72GIqKSWMGuiO0
cotT0p/2CKprKKxUuCP4sUC8jcPDKj8XuyuP3PFzz4MCEyUPiiD6azqdwjO/
X9tIXQe45LR8/N2RwnFmRNnGCAcooptCbcIo+N9f0CfocEBEI+dfs7yvvX2w
XyUhkBqYTVvdTGFL0tSMKIrA6LUcY14LBd4yg2USGQE/RgFrYSuF+pjl2wY8
CVheLsNoG4VvTSIHuGsJ3PnYnHisg0KsdHKgOoiAJnsevb2XwrqyL4O9Bwhs
qT1DD5+gYLXBSL88kcBT8wsmvu8pTNBZ7MPJBBx2FVu4TlJI9xFuX55KgDbv
rtBIQ6FmKGUoWk5AGdKVVKql4GShN6yrJNBEW6LzmSYF49F8g7YzBAS+HNM+
uhSNO9kctYpAfqGDZb2OFDtve4Z7nyMQ6S0RnWVIccE/ffiEmoCBMiRZwpQi
+kuuQVgRgajxHVkr9KQQnb/KERQTeCGKzTfTl6JzoiH8dQmBwsHUPwYMpCg6
1X20pJSAoWtG41/fSRGPicspNwjEZJ7sqZophaxf56lfBYGOXtXEOUMp5qbP
GrGpJCBedVFHbiTFfyjfIPM=
            "]]}, "Charting`Private`Tag#6"], 
         Annotation[{
           Directive[
            Opacity[1.], 
            RGBColor[0.491486, 0.345109, 0.8], 
            CapForm["Butt"], 
            AbsoluteThickness[1.6]], 
           Line[CompressedData["
1:eJwViXtUTAkAh9NO22ToKSnUtAw9qJlcUbe6v5mmbltrG1OMcNg6bYs6WhRR
snrI2m0mbBGpEyoypq2Q1MEoqZYe1iPTaChpekqSFFr7x3e+853PNixa/LOu
jo7Oqq/8b3L4clJdaI5XBMt4yvBbEm/UvPOjzH1UmjvrzxJ9Esefnn9RxTxC
tZ+NNxUZkOgO7kjMY56iZk1lWx2dQUJqNrnqKLOYEqktPczMSHTt/H35EeYN
yvpMaLQFm0T6WdHFQ8xGKsnOucfGnUSYO9GVwlRR2anlTdztJGo5aVlN7H7K
qaVax1xDYvTmrQMTi0ap9SLG7EQ/D9i8CHSLy5mgKhaQmsclHkjyY+bNbNaB
+Tql7rCNJ57FRJbpzWIgqCb3s/SwJwx7IyKN8/TxpcgicPijJ1okAxEZliws
Nu/wx1Yv7D4V8851nSGWt9tZmbd6Yf+xRtO4IWPUJA96yfkUSvkbR3uOmSKr
Nsi1vpiC45DLHlPnWajo5EX2MoG/bj7+wXfIHFWfFN3NAN6Mf9yWLrPALhNx
w3gM4Cbpa38eZIm2FZKnSZeBhjKbIa3RXPw7XerG6AYC4p746SvmQTSmYtTP
4aM6NGTMKdoapG3KxICID5nKaYwwYCPoOkKCU/lYMfuElWSAjYobks55N/lI
bsmXrf3HFveTTt5Sv+ejnhq8sPn0dwjj9+lp7AVgKHMjBxMWoPdR5m5BmABu
HzIepgQuxN6B1SJtlgAmcs6Rj/M5+EXpmpjaKMDLnez+kc8cGLjHPknW9Ubx
0Ibh902LYDBWc6LW1RvbEj7n7i9djFgqKjki2hsPDvNzO2V2sOZ51kwVesPe
v46/erM9XNZZR7WrvLF/fqlUCAf8rRdCzTETorFAfYBv6ohNXefiT9BC3JAX
K+e+cIQ4zGKGYbwQ+Xc75PtuLUFRxKu67jIhDh4P8uiSLYXqpLJv6rUQIbuc
Ylt2OGEkcHxlvI0PHJj+4ntCZxQQ1PDKYB80z2TcfmDABadSMTmY5oNUdpbj
xF4ucGcPj3HbB9fT/bZe6uSifFzUsnHUB6+/UUxaB/NQUp6cPXupLyIqw10P
1vCwyVBz7V64L8IaSO8tji4QZ/l7Vp30xfrOu+dNclxw76zRkFGrL5rX/NpG
6S1DgvqVfpEejUxm1JWNUcugvtoZu9yNhqTWqptUL0OVmbshZ8fXr+rtyRMS
eJabbyQpoBF+cEJ/py8BjFy0QSENFzuWndCPQJFPmbN9EY2m2CVbtAEEYgfu
BE5eoPGtSbSWG0TAxP2VLE9OYzc9qlWGEvj+8SJjbTmNtVe+9HYlEqhkyY33
3qGxcIPR9Gu/EWBvvsIOq6ExMo3tcDiJQFpZNTegloY0kL9tySECa0IeiObX
0ajrS+6LSSfwtnAoQ9lAw9XWoF8vh4C9gGcyvZUGo96S1XaGQEamm+27r/1w
u4NjcR6BD1o+T/2QxvbqgMgfzxG4KxOvVjyiUSiR9mcVE/jp+a6j4jYaMV9y
WVvlBOq5CfnkMxqCghJHUkHAKSWldKGKRsdIS6SmlMAnh8zWsXYa8uyXf5SW
EwhPPPNSo6axDyOXkq8SaGwteFv/nIZfj+79NRUEeBzFtLIOGhZSs4HFlQSy
466ZnNbQ+A940yJj
            "]]}, "Charting`Private`Tag#7"]}}, {}}, <|
      "HighlightElements" -> <|
        "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
       "LayoutOptions" -> <|
        "PanelPlotLayout" -> <||>, 
         "PlotRange" -> {{0., 20.72326583694641}, {20.72326583694641, 
          50.65687204586901}}, "Frame" -> {{True, True}, {True, True}}, 
         "AxesOrigin" -> {0., 20.723265836946457`}, 
         "ImageSize" -> {800, 800/GoldenRatio}, "Axes" -> {False, False}, 
         "LabelStyle" -> Directive[FontSize -> 14], "AspectRatio" -> 
         GoldenRatio^(-1), "DefaultStyle" -> {
           Directive[
            Opacity[1.], 
            RGBColor[0.491486, 0.345109, 0.8], 
            CapForm["Butt"], 
            AbsoluteThickness[1.6]], 
           Directive[
            Opacity[1.], 
            RGBColor[0.7, 0.336, 0.], 
            CapForm["Butt"], 
            AbsoluteThickness[1.6]], 
           Directive[
            Opacity[1.], 
            RGBColor[0.285821, 0.56, 0.450773], 
            CapForm["Butt"], 
            AbsoluteThickness[1.6]], 
           Directive[
            Opacity[1.], 
            RGBColor[0.645957, 0.253192, 0.685109], 
            CapForm["Butt"], 
            AbsoluteThickness[1.6]], 
           Directive[
            Opacity[1.], 
            RGBColor[0.945109, 0.593901, 0.], 
            CapForm["Butt"], 
            AbsoluteThickness[1.6]], 
           Directive[
            Opacity[1.], 
            RGBColor[0.365248, 0.427802, 0.758297], 
            CapForm["Butt"], 
            AbsoluteThickness[1.6]], 
           Directive[
            Opacity[1.], 
            RGBColor[0.9, 0.36, 0.054], 
            CapForm["Butt"], 
            AbsoluteThickness[1.6]]}, 
         "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
             Exp[
              Part[#, 1]], 
             Exp[
              Part[#, 2]]}& ), 
           "ScalingFunctions" -> {{Log, Exp}, {Log, Exp}}|>, 
         "Primitives" -> {}, "GCFlag" -> False|>, 
       "Meta" -> <|
        "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
         Plot, "GroupHighlight" -> False|>|>, "DynamicHighlight"]], InsetBox[
     TemplateBox[{
      "\"NH3-BF3\"", "\"DMTM Molecular\"", "\"DMTM 3x3\"", "\"DMTM 5x5\"", 
       "\"DMTM 9x9\"", "\"WGS 3x3x2\"", "\"WGS 5x5x2\""},
      "LineLegend",
      DisplayFunction->(FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.9, 0.36, 0.054], 
                    CapForm["Butt"], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 12.5}, {20, 12.5}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.9, 0.36, 0.054], 
                    CapForm["Butt"], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 12.5}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.365248, 0.427802, 0.758297], 
                    CapForm["Butt"], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 12.5}, {20, 12.5}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.365248, 0.427802, 0.758297], 
                    CapForm["Butt"], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 12.5}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.945109, 0.593901, 0.], 
                    CapForm["Butt"], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 12.5}, {20, 12.5}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.945109, 0.593901, 0.], 
                    CapForm["Butt"], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 12.5}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.645957, 0.253192, 0.685109], 
                    CapForm["Butt"], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 12.5}, {20, 12.5}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.645957, 0.253192, 0.685109], 
                    CapForm["Butt"], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 12.5}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #4}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.285821, 0.56, 0.450773], 
                    CapForm["Butt"], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 12.5}, {20, 12.5}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.285821, 0.56, 0.450773], 
                    CapForm["Butt"], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 12.5}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #5}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.7, 0.336, 0.], 
                    CapForm["Butt"], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 12.5}, {20, 12.5}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.7, 0.336, 0.], 
                    CapForm["Butt"], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 12.5}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #6}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.491486, 0.345109, 0.8], 
                    CapForm["Butt"], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 12.5}, {20, 12.5}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.491486, 0.345109, 0.8], 
                    CapForm["Butt"], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 12.5}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #7}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
          Directive[FontSize -> 14], FontFamily -> "Arial"}, Background -> 
         Automatic, StripOnInput -> False], TraditionalForm]& ),
      Editable->True,
      InterpretationFunction:>(RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|"color" -> RGBColor[0.9, 0.36, 0.054]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"CapForm", "[", "\"Butt\"", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.365248, 0.427802, 0.758297]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"CapForm", "[", "\"Butt\"", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.945109, 0.593901, 0.]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"CapForm", "[", "\"Butt\"", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.645957, 0.253192, 0.685109]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"CapForm", "[", "\"Butt\"", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.285821, 0.56, 0.450773]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"CapForm", "[", "\"Butt\"", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|"color" -> RGBColor[0.7, 0.336, 0.]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"CapForm", "[", "\"Butt\"", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.491486, 0.345109, 0.8]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"CapForm", "[", "\"Butt\"", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6, 
               ",", #7}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"Directive", "[", 
               RowBox[{"FontSize", "\[Rule]", "14"}], "]"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& )], 
     Scaled[{0.72, 0.25}], ImageScaled[{0.5, 0.5}],
     BaseStyle->{FontSize -> Larger},
     FormatType->StandardForm]},
   AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
   Axes->{False, False},
   AxesLabel->{None, None},
   AxesOrigin->{0., 20.723265836946457`},
   DisplayFunction->Identity,
   Epilog->{
     Thickness[Large], 
     GrayLevel[0.5], {{{
        TagBox[
         ConicHullRegionBox[{{3.7218637741945804`, 0}, {
           3.7218637741945804`, 1}}], "InfiniteLine"], 
        StyleBox[
         InsetBox[
          FormBox[
           StyleBox["\"1 fs\"", 
            GrayLevel[0.5], StripOnInput -> False], TraditionalForm], {
          3, 21.874558383443436`}], {14}, StripOnInput -> False]}, {
        TagBox[
         ConicHullRegionBox[{{3.7218637741945804`, 0}, {
           3.7218637741945804`, 1}}], "InfiniteLine"], 
        StyleBox[
         InsetBox[
          FormBox[
           StyleBox["\"1 ps\"", 
            GrayLevel[0.5], StripOnInput -> False], TraditionalForm], {
          10, 21.874558383443436`}], {14}, StripOnInput -> False]}, {
        TagBox[
         ConicHullRegionBox[{{3.7218637741945804`, 0}, {
           3.7218637741945804`, 1}}], "InfiniteLine"], 
        StyleBox[
         InsetBox[
          FormBox[
           StyleBox["\"1 ns\"", 
            GrayLevel[0.5], StripOnInput -> False], TraditionalForm], {
          17, 21.874558383443436`}], {14}, StripOnInput -> False]}}, {{
        TagBox[
         ConicHullRegionBox[{{10.629619053176718`, 0}, {
           10.629619053176718`, 1}}], "InfiniteLine"], 
        StyleBox[
         InsetBox[
          FormBox[
           StyleBox["\"1 fs\"", 
            GrayLevel[0.5], StripOnInput -> False], TraditionalForm], {
          3, 21.874558383443436`}], {14}, StripOnInput -> False]}, {
        TagBox[
         ConicHullRegionBox[{{10.629619053176718`, 0}, {
           10.629619053176718`, 1}}], "InfiniteLine"], 
        StyleBox[
         InsetBox[
          FormBox[
           StyleBox["\"1 ps\"", 
            GrayLevel[0.5], StripOnInput -> False], TraditionalForm], {
          10, 21.874558383443436`}], {14}, StripOnInput -> False]}, {
        TagBox[
         ConicHullRegionBox[{{10.629619053176718`, 0}, {
           10.629619053176718`, 1}}], "InfiniteLine"], 
        StyleBox[
         InsetBox[
          FormBox[
           StyleBox["\"1 ns\"", 
            GrayLevel[0.5], StripOnInput -> False], TraditionalForm], {
          17, 21.874558383443436`}], {14}, StripOnInput -> False]}}, {{
        TagBox[
         ConicHullRegionBox[{{17.537374332158855`, 0}, {
           17.537374332158855`, 1}}], "InfiniteLine"], 
        StyleBox[
         InsetBox[
          FormBox[
           StyleBox["\"1 fs\"", 
            GrayLevel[0.5], StripOnInput -> False], TraditionalForm], {
          3, 21.874558383443436`}], {14}, StripOnInput -> False]}, {
        TagBox[
         ConicHullRegionBox[{{17.537374332158855`, 0}, {
           17.537374332158855`, 1}}], "InfiniteLine"], 
        StyleBox[
         InsetBox[
          FormBox[
           StyleBox["\"1 ps\"", 
            GrayLevel[0.5], StripOnInput -> False], TraditionalForm], {
          10, 21.874558383443436`}], {14}, StripOnInput -> False]}, {
        TagBox[
         ConicHullRegionBox[{{17.537374332158855`, 0}, {
           17.537374332158855`, 1}}], "InfiniteLine"], 
        StyleBox[
         InsetBox[
          FormBox[
           StyleBox["\"1 ns\"", 
            GrayLevel[0.5], StripOnInput -> False], TraditionalForm], {
          17, 21.874558383443436`}], {14}, StripOnInput -> False]}}}},
   Frame->{{True, True}, {True, True}},
   FrameLabel->{{
      FormBox[
       TagBox["\"Toffoli gates\"", HoldForm], TraditionalForm], None}, {
      FormBox[
       TagBox[
        TemplateBox[{"\"t (\"", "\[HBar]", "\"/\"", 
          SubscriptBox[
           StyleBox["\"E\"", Italic, StripOnInput -> False], "\"h\""], 
          "\")\""}, "RowDefault"], HoldForm], TraditionalForm], None}},
   FrameStyle->Automatic,
   FrameTicks->FrontEndValueCache[{{
       Charting`ScaledTicks[{Log, Exp}, {Log, Exp}, "Nice", WorkingPrecision -> 
        MachinePrecision, RotateLabel -> 0], 
       Charting`ScaledFrameTicks[{Log, Exp}]}, {
       Charting`ScaledTicks[{Log, Exp}, {Log, Exp}, "Nice", WorkingPrecision -> 
        MachinePrecision, RotateLabel -> 0], 
       Charting`ScaledFrameTicks[{Log, Exp}]}}, {{{{25.328436022934504`, 
         FormBox[
          
          TemplateBox[{"10", "11"}, "Superscript", SyntaxForm -> 
           SuperscriptBox], TraditionalForm], {0.01, 0.}}, {32.23619130191664, 
         FormBox[
          
          TemplateBox[{"10", "14"}, "Superscript", SyntaxForm -> 
           SuperscriptBox], TraditionalForm], {0.01, 0.}}, {39.14394658089878, 
         FormBox[
          
          TemplateBox[{"10", "17"}, "Superscript", SyntaxForm -> 
           SuperscriptBox], TraditionalForm], {0.01, 0.}}, {
        46.051701859880914`, 
         FormBox[
          
          TemplateBox[{"10", "20"}, "Superscript", SyntaxForm -> 
           SuperscriptBox], TraditionalForm], {0.01, 0.}}, {
        18.420680743952367`, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
        20.72326583694641, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
        23.025850929940457`, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
        27.631021115928547`, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
        29.933606208922594`, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
        34.538776394910684`, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
        36.841361487904734`, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
        41.44653167389282, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
        43.74911676688687, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
        48.35428695287496, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
        50.65687204586901, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
        52.95945713886305, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}}, {{
        25.328436022934504`, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.01, 0.}}, {
        32.23619130191664, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.01, 0.}}, {
        39.14394658089878, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.01, 0.}}, {
        46.051701859880914`, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.01, 0.}}, {
        18.420680743952367`, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
        20.72326583694641, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
        23.025850929940457`, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
        27.631021115928547`, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
        29.933606208922594`, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
        34.538776394910684`, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
        36.841361487904734`, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
        41.44653167389282, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
        43.74911676688687, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
        48.35428695287496, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
        50.65687204586901, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
        52.95945713886305, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
         0.}}}}, {{{0., 
         FormBox["1", TraditionalForm], {0.01, 0.}}, {4.605170185988092, 
         FormBox["100", TraditionalForm], {0.01, 0.}}, {9.210340371976184, 
         FormBox[
          
          TemplateBox[{"10", "4"}, "Superscript", SyntaxForm -> 
           SuperscriptBox], TraditionalForm], {0.01, 0.}}, {
        13.815510557964274`, 
         FormBox[
          
          TemplateBox[{"10", "6"}, "Superscript", SyntaxForm -> 
           SuperscriptBox], TraditionalForm], {0.01, 0.}}, {
        18.420680743952367`, 
         FormBox[
          
          TemplateBox[{"10", "8"}, "Superscript", SyntaxForm -> 
           SuperscriptBox], TraditionalForm], {0.01, 0.}}, {2.302585092994046, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
        6.907755278982137, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
        11.512925464970229`, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
        16.11809565095832, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
        20.72326583694641, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
        23.025850929940457`, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}}, {{
        0., 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.01, 0.}}, {
        4.605170185988092, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.01, 0.}}, {
        9.210340371976184, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.01, 0.}}, {
        13.815510557964274`, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.01, 0.}}, {
        18.420680743952367`, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.01, 0.}}, {
        2.302585092994046, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
        6.907755278982137, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
        11.512925464970229`, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
        16.11809565095832, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
        20.72326583694641, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
        23.025850929940457`, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}}}}],
   GridLines->{{0., 2.302585092994046, 4.605170185988092, 6.907755278982137, 
     9.210340371976184, 11.512925464970229`, 13.815510557964274`, 
     16.11809565095832, 18.420680743952367`, 20.72326583694641}, {
     20.72326583694641, 23.025850929940457`, 25.328436022934504`, 
     27.631021115928547`, 29.933606208922594`, 32.23619130191664, 
     34.538776394910684`, 36.841361487904734`, 39.14394658089878, 
     41.44653167389282, 43.74911676688687, 46.051701859880914`, 
     48.35428695287496, 50.65687204586901}},
   GridLinesStyle->Directive[
     GrayLevel[0.5, 0.4]],
   ImagePadding->All,
   ImageSize->800,
   LabelStyle->Directive[FontSize -> 14],
   Method->{
    "DefaultBoundaryStyle" -> Automatic, 
     "DefaultGraphicsInteraction" -> {
      "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
       "Effects" -> {
        "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
         "Droplines" -> {
          "freeformCursorMode" -> True, 
           "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
     "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None, 
     "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
         (Exp[#]& )[
          Part[#, 1]], 
         (Exp[#]& )[
          Part[#, 2]]}& ), "CopiedValueFunction" -> ({
         (Exp[#]& )[
          Part[#, 1]], 
         (Exp[#]& )[
          Part[#, 2]]}& )}},
   PlotLabel->FormBox[
    "\"Toffoli Gate Cost at \[Delta] = \\!\\(\\*SuperscriptBox[\\(10\\), \
\\(-9\\)]\\)\"", TraditionalForm],
   PlotRange->{{0., 20.72326583694641}, {20.72326583694641, 
    50.65687204586901}},
   PlotRangeClipping->True,
   PlotRangePadding->{{0, 0}, {0, 0}},
   Ticks->{{{0, 
       FormBox[
        TagBox["1", HoldForm], TraditionalForm]}, {
       NCache[
        Log[10], 2.302585092994046], 
       FormBox[
        TagBox["10", HoldForm], TraditionalForm]}, {
       NCache[
        Log[100], 4.605170185988092], 
       FormBox[
        TagBox["100", HoldForm], TraditionalForm]}, {
       NCache[
        Log[1000], 6.907755278982137], 
       FormBox[
        TagBox["1000", HoldForm], TraditionalForm]}, {
       NCache[
        Log[10000], 9.210340371976184], 
       FormBox[
        TagBox["10000", HoldForm], TraditionalForm]}, {
       NCache[
        Log[100000], 11.512925464970229`], 
       FormBox[
        TagBox["100000", HoldForm], TraditionalForm]}, {
       NCache[
        Log[1000000], 13.815510557964274`], 
       FormBox[
        TagBox["1000000", HoldForm], TraditionalForm]}}, {{
       NCache[
        Log[1000000000], 20.72326583694641], 
       FormBox[
        TagBox["1000000000", HoldForm], TraditionalForm]}, {
       NCache[
        Log[10000000000], 23.025850929940457`], 
       FormBox[
        TagBox["10000000000", HoldForm], TraditionalForm]}, {
       NCache[
        Log[100000000000], 25.328436022934504`], 
       FormBox[
        TagBox["100000000000", HoldForm], TraditionalForm]}, {
       NCache[
        Log[1000000000000], 27.631021115928547`], 
       FormBox[
        TagBox["1000000000000", HoldForm], TraditionalForm]}, {
       NCache[
        Log[10000000000000], 29.933606208922594`], 
       FormBox[
        TagBox["10000000000000", HoldForm], TraditionalForm]}, {
       NCache[
        Log[100000000000000], 32.23619130191664], 
       FormBox[
        TagBox["100000000000000", HoldForm], TraditionalForm]}, {
       NCache[
        Log[1000000000000000], 34.538776394910684`], 
       FormBox[
        TagBox["1000000000000000", HoldForm], TraditionalForm]}, {
       NCache[
        Log[10000000000000000], 36.841361487904734`], 
       FormBox[
        TagBox["10000000000000000", HoldForm], TraditionalForm]}, {
       NCache[
        Log[100000000000000000], 39.14394658089878], 
       FormBox[
        TagBox["100000000000000000", HoldForm], TraditionalForm]}, {
       NCache[
        Log[1000000000000000000], 41.44653167389282], 
       FormBox[
        TagBox["1000000000000000000", HoldForm], TraditionalForm]}}},
   TicksStyle->Directive[FontSize -> 14]],
  InterpretTemplate[Legended[
    Graphics[
     Annotation[{{{{}, {}, 
         Annotation[{
           Directive[
            Opacity[1.], 
            RGBColor[0.9, 0.36, 0.054], 
            CapForm["Butt"], 
            AbsoluteThickness[1.6]], 
           Line[CompressedData["
1:eJwVi3s0VAkAh9WKwSmishWSkDGaPG63hsn9zZgrm4oihELb9jBWspIUrUcJ
x9BY1mPWRKiGSBTS8yR5bMw6uynZNhxhPFfTA+Ws/eM73/n++NYePL7nh4Uq
Kio75/nfDpM34puCJI6DXFmTTxaJiR6bYiUjmmJEmg9+ziaR2VX8toGRQt0f
Eprk5ZAY8HwTK2XkUbV6FdzufBIivdmdlxgySpzTVu9XRKI/PHlTCuMuFZWd
ZHygkkRakfv1C4xWilTNuhPUQuKgPdGfyOimuKY3w0O+kmg0S8puNx6hsqy1
vejQzVA+eHhuxlxJfVHt1rvWtRlr3rpxoiQzVMwj5rlZxy2Id2FIF3eooH9b
xU3dyi14FSG8tWiZKi55DnZV6nOwZPiwUEeqDgvP2E7tZA7k3qOHM1ZqweoT
vSDgMweReRHvSZ8l0Kobd7cLtEeMuFU3alwHAzuc9Vvl9qji+SsHxbo4IrXs
GuA4gDVue0p34zJcVXvpMXnZAb88+GuH8/hy+I7lsu/rcDHxeTo4LV0f4n+5
75ac5oLjrXj9t8dKeJrIP5oouGi5tWZ8SHs1bit8a8z2bYVr1AsX9QoDcMbj
nW882op7Qfs+so8bIZ+XzP5k7Yj0bvZHQsMYK65oKp7mOmLzil9XeY8ag1g1
NuOlRSFBXpju1bYW9srUmhfRFJqpsWsB+Sbw6S3F6z4Kqo8LhGNn10HK7dD5
gwlwPmV0JrqZIvdMmCLyALC03Cxl2tAMfB3+t8vEQG+48cjUVzPoTJwI020F
ZON+kx/azWEQUGfjMQcEn/1aEFO1HlrPfA0/kDw8v8gr6Eu3QAtlsV8UygNz
exNvdwATez+oqQUX8RBjWCUSwBLTRnhV2s1Da0nPOZ4uCyajycvNtfm4Wy57
vPrtfLd/KZHw+Sh8+qY8+qEVegJaAiOi+YjL9OD2p2+Av0tpoqiCj30/sU/K
T7Ax19zTqTHIhyVj+55ngo3Yn7Eu5dlqJ3QsVn30XMMaliqZWWfdnHDeOJs1
c9oaajN+beIkJ9SluRwr67NGwfpNwSMNTnj3TcWskacNpD1H7EqUTjhcf4iM
e2KDFXZP3L2sBDjY4uB0lGWLpjp213eBAvj2PS1eKrFF7JP3SQU5AnTsDXtJ
LbKDwZfmwk3PBchihNT4h9ih5c8m7UYVGt6NqwYceuzAtDW6Vr2FRlb38KBU
QGD63vnrAyE0DsXNqIc7EwjSEdW3/0jD1kLLQuBCoO377JbaUBrtJ62ODrkS
yNS8OpwcRkNt6fEhaw8CG3yamewIGpHblEOPgwj4v9eURZ6h4VUzN9wfS6CB
mSFTT6Fh6qeteednAqYxOXcn53tqgbHlxXgCSfLLra9SaYjceMFWFwh4nqpS
lKXRaFIkKCLSCEw2dlq6X6JBrtUYWSQhYBS4vCwnh4Zq80qtl78RuFBt2BCX
S6Mz1JIlkxIYVTNvC86jEXrPVbjrCoH6G+QIV0Kj1Fs0ki0j4D7rzeqV0oiY
K9A6Vk6gdlegQ+tlGvySSpZDBQGDoqOu1YU03kzJhf9UERh2OS08f4VGeW5v
alU1gd2SuDOhxTSiMVWWcJtA3URyqncJDZfBhb/vrZ3/ncT5KKWhL9IbXV9P
IDE7r4x5lcZ/AZMkQg==
            "]]}, "Charting`Private`Tag#1"], 
         Annotation[{
           Directive[
            Opacity[1.], 
            RGBColor[0.365248, 0.427802, 0.758297], 
            CapForm["Butt"], 
            AbsoluteThickness[1.6]], 
           Line[CompressedData["
1:eJwVi2s0lAkAhpWRkc21yKWMMgjJ5cs0hr53xszXRGXLZdh0lOTaSQlZx10J
u0ylqFYuxe6GWEIpq+xGUiK7tSUJU7k2rKZk2rT68Zz3POc9j3FAxI59CxUU
FLbO83U5U1dS2/YUbKwVO8/uPcnCZJ9tqYweR3oPri+m5bKQ+0/pwE16Fhlf
p7Wg7DQLrz37E4vo58nNZfEVr/NZyNH+tPUkvZzMn9peH1zIgiQyc30W/QZp
9kzQGVbBQvbFby+n0zvI4tJ060OtLAQ4EpKj9F6yLsLrVNIsC3eYx/MeMsbJ
6gU6u/zDNkDWfCtJbioj749ld7T+tQFGA+7s2AI5yXtlMmzAYSNVSC9a0qWA
5EeevxEVbDyLCq9VWkrDVsp+skfbEWqjQeEaRcqIC266bn/MEd2iiaATeqoY
0DbclSZzRMz5qHcOPmrgfloqE/lxkHCqQytWqgERo1MmfcBBDddPNnxKC4pf
tP9e7OAES6ndEa11SzE1MxW47IITTjc/3kJJl6HnTeO2oW+cMflxNixbrIuD
Vd7qRLQz2KKx5y889NAi+9FU+MYZ92qNpCPqBuCc1Rxx9doIt9gnQuUqQ9xU
7YvvadqIpj2+H6wjVqIpUBJkuJaEuNf6A6HCwKLEzNXjZ0iwdPL1RRMM1G85
q9+sCKR1l4i97xvjauvlmQQO0E6+/dX/p1XQftnvnBwB0FoKw9/Gr0bCvzFV
kl8A9syJnqPuJgimmWVk9gGalcys2RVMqPvSGkw1uBiMZIxPf2bisIWzGlPI
Rbl059T7h6Yw2JzRtS+ei7D4z4UJNWa4bmt9U7mei84MbuGQ2BzLSz/Liye4
WOPaxt3uvwauT15cimfwkLCiJocPC3S91D3S6MNDR1lfElfLEqkeAVc3ZPNw
o7K8xWDAEnfFj12qb/NQ0tpfGXfLCsG7L86lf+QhJdfDSSJei+qopFUlVi7w
PWwd3X3IGjbLGw4a7nOBBd11x13+OsRO/mfWe84FXUtotztVbECF77cXd7rg
GCPPUv69DTgH1oeWKfFxPVsYWjFkA7USNfocm483ilWfVnra4rgv99G1SD6C
GgMdUv60RUFtgTSknI+AexyXEEs75LLp0X79fHw31FqqWWAHV0Ens0ZHgC6v
g09JJXvkJ14khW4CnKHvr/Pbb4/LouIrTxIFEN3Rf83ps4d3/YygrWH+7x0d
LuIT8IT/po9jAgSmyJUjKQK/5waLBscFsDNXNecLCZgMRwR3TAjwMNoqZMSN
gDQ7+XiBVIBFmhEjNh4EMp+X3MW0ADGbZCMte+b7mFebMmcF8K6bG5UkEjC/
EirUp1Mw2am+uCGZgFgh0kdRhcL0AoZFRiqB9x5xIRPznuPODbNKJ/CHPCuj
WZVC21jaWFQ2gV3CyvYAdQoOxirjSgUEciVSYYUOBVq7nurTCwTkDjM+p3Up
9BywsCwvIrA760tIwnIKB5rcwrddImBtq5Hprk/hZ1HOeF45gfZE23vvVlCI
mitUDa0ksK6H/axvJQVeWbUlp4rAGSZvtNWIQv90d/jLGgJ7H+xQOWtMofLc
4A81V+d7o516KasoxGG6Iq2egM3hvWvCVlMQDi984HWNQF5bONvDhIJujvaE
WSOBOb2ozU5MCv8DjVAdPw==
            "]]}, "Charting`Private`Tag#2"], 
         Annotation[{
           Directive[
            Opacity[1.], 
            RGBColor[0.945109, 0.593901, 0.], 
            CapForm["Butt"], 
            AbsoluteThickness[1.6]], 
           Line[CompressedData["
1:eJwVjHk41HkAh1VkrOTeVipTS44Z9zeN8/cZM36JRCk61/KImEKSdGDpcLQG
WVpWo1BPmGiiVhFpo7LO2iRJZSpnkiZtit36433e5/3nXRoQvn7HbDk5OY+v
fLP9+MXEJv98p0OzgmvKmjl422tZLGMcpNQ/mnuvaeEg61Hx8xpGKmUjq30w
2srBqw19cQWMPEoj9e2waScHQs3PHpmMUiprx+rbFY84kEamrEhlXKf0b7UN
Vr7kIK3Qq+Q4o5kK8+purZnhIMCOSI8yeqhMzDVssbLFbYOknDbmCDVb551t
RZEtZHX18VPLZVREW3fVAhU76D33tI3Jn6IuFQRphkfZIdGVUaDSLoek6L3D
yS/t8DhKcFlBSx5T4Q+rDT3sMX8oSKBWoAiWXsjr5Dp7dPiOBmXoKEMr06it
29QB0XlR7202zUddZGbGxWwHxJ5s1ogZU8O8nhVi/lxHSLjbZAMnNeDnZiH6
OdwRrDGr/RrmWpjsFNkJuhzxW93DNfSYNhLJTTaHdsLbfz+FpqUvQMnHhImU
cifY+g4/eeqtg5UVoSoiPQr3LuuNDarqYgrmnWeEFNxjulwVyxfBO88r2GiS
Qq3/5kmz8CXYrmBqbGsNpPeYTRIlJp7KOpLOBAMrvz+10HeUiULth2ohZ4Aj
HWfTff5eikAv5TGjbuAu9eaC3x/L0HHch7DmcSHfIBK8OfwjHE9MFwv5XNh+
zLh/1FMffvlX48gBLtTFBqmfFhvgSVauuFPMxYtI5sjEtAHW3+qS73jJRenY
1vEPbcvRVKnfpKbjjNDD06JYiSGqd7dILq9zRmsyV9SfboR1X/Lfuac4w9it
ibvOzxi5A7F5hjecEbtYIuTDBPER1bsDPzij+VxvPFeDhb3Wc0qlxjxcF5c2
6D5nYWFhtN2W7TycbewTH6xnYyiP98Eym4eELG8HabopXjQyddbc42HzXrN9
HXvMoBXjG3xn1tczw239Hb45CjeLlhyz4aNdRf5mq5IF5HpVTOxC+TjGzGFN
HbDANWmXn1chH9VpriFl/RbYqHNp5kIXH6/nlH9essESZQ/67wSouiDoWqBN
wl+WGDd1eqW5ygUB9+x5O1lWKLlSIlA85IIt/Y3F6vlWmGgIW7St0gXtGyO6
KQVrpH/m2bwfcEE2Y1fVtl3W6P2HW5ygS8P39sJX9r3WqLDKddjjTSO7Z2ig
gE/QeEPOqSiJRmDClGIkTcBWV1r7azINKyNlI74rQVag+k/7Umi07WPvHHQn
8FdeFrfqBI256uGDFt4E05t4dSNCGtGrZIMN/gREdsyJ5NDwqZoZksYRFJoo
U43FNPS3qn539RcCpThNz/JzNCZmMU2SEwkiOnX9Tp2nIfTkhrKPEzjFsOND
LtBoGj4yHJVG8LjRo15FTMNmqdKIQj6Bmn8G5VNJQ/6ujnL3aYL9Vb97UlU0
7oeZsEoLCPoUz/oZXaERVusuWFtEIC6XxE9dpXHeVziSU0rg+uV+veg6jagZ
kXKImKDC80l7Ug0N53MVLPtyAu0i6bOIWhp9Ex2CZxIC6WrZf851NMS5L05I
KgncTn9RZdfTOIiJsiNXCCTj8kztmzRcB2a3bPyT4Ae+isXM114g1Bw1vEYQ
f0obAw00/gc05iKq
            "]]}, "Charting`Private`Tag#3"], 
         Annotation[{
           Directive[
            Opacity[1.], 
            RGBColor[0.645957, 0.253192, 0.685109], 
            CapForm["Butt"], 
            AbsoluteThickness[1.6]], 
           Line[CompressedData["
1:eJwVjHs0lAkARyWPmUil9KYpb4M8viUz+H4zxnyTtigypFiOtV6lJikioWx0
BqVYEuvRFoaQFGvTg0Ib1lYe2TYkBmE1W2HT1h/33HP/uRv9wnZ9Ly8nJ7f9
C1/NniqLf+ibYz9eY/qfkhkLk33mRTJaFFmg3JNw1ZyF9K6iV7/Skkl/phpd
YMnCkNvLE3m0bNLP7QY9yYqFlOVz28/RSsgp20Y9FTsWBkVJ3yTT6kgt8We3
JU4siAtcihNpreRChZbaVf4s+LGIwVO0XnJThb7Y4CcWGnV/zGhjjJHfKZdm
qdLZkN1piJ3Vk5Hetn2ZR0RsbHjlbHMsZ5bsOCtxedLDRryAlre4XQ4r//AN
Gt5qi57wkCrFFQqYW7R+X2KVLdSkASFL85QxWX+oeFjbDh3C8YC0NSpw19la
YJ1uh4js8HdWHmpofN0Zpjpnh5jzrerHJpbCOm1nemGIPSo5e2XD59URaDiZ
1PDUHswJi6Pqm1fAWSnJsJVN4sKdZ9/yJzSgOqCulVlKYvLjTLA4dRWid6SJ
ZHTARjj64i/XNajgxZ88wQVaqjZMjCxZhy1NJQOfI4Ftx54LlMvXgy6ZKntQ
BtT7er43DdNCmuqFwpEhILXX9D1BZ8Cd2i7vspYD65WZa4XjDIh1/c6uduUg
oSM/1f3xRrDs8wO7kzloJt9e87m0CQvkp8t773CgcC835G20NiL6cjbYf+DA
5kNa5ylnHfBPe8wMMrlYJtFNntHUhZqanX6cDxf9IsbY9CddnPM6HhubyUXJ
hNfUv216ODndgruPuQiO/pQbU6kPC0ORsZ+CA56c4eQOpBrgnZpD6BzbAYZO
Dzk7fQwxx9TR6ApzQIxmZQoPRnj01Htk+TUHtF7pi+WoM3G1vFgnvc8BdZKS
e+teMSE10rxJX8pDftNLSVSDMVJMRsP6KR7i0l1tB1NN8Nz7UfrccR48D5se
6ThkChON+f6I6i9nmtOuR7zN2D/DyyKkPLQvVrj7hG6G4pjqIul6R5xmZDBn
I82QmRjT+9nNEbfFgqDSATMM1btHeiQ54s3C8jktN3O0HU3iqt93RECtv1Xc
A3OEdr72eTDjCL8WtkMg0wLCPS5vakz42DPQVLQsxwJNARqZKgF8tO8+2E0q
WuLoz6MVBdl8XKSFVu8NtcSzyBEt8zY+hI1rh9h9lqjqIm8xlChc7JUO5/EI
tPldvb2LRcE/blZZxCdgVXO9mc2mYGGgYsATELhMv92tY0uh7Yhx4Mg2AiEV
zR/f21FQWhY2YuZKQHleuuUSh0IEJRu550vAPsu4dlBAwb16Xjp4gkB5e2Vt
uJCCjteSRTUnCWho17Xs86AwvYBhdCaeQHTE/R6+J4UUZ06wcSIBJ80/Z1Z7
UXg4mjAaLibwJlhm85s3BauN9DHFHAJaStZ1igEUFJrXqHRfJnDKk2yd+NKd
B4yYJXkExiRUb9cPFA7UbwvZUUig1tVjtjiIwi/ClLGMEgK78yNZO/ZTCJ/P
VQmSEKiXxTlZH6DAvXKdyS4noC1I3sMIo/ByuiPk70oC/0xkR00fpCDJ6j9b
eYOAB7cw+cUhClGYLk24SaDhYml2o4iCYFj+9923COhJb5SUHaawKmX5uH4t
gRTb+rqMcAr/AygoHvo=
            "]]}, "Charting`Private`Tag#4"], 
         Annotation[{
           Directive[
            Opacity[1.], 
            RGBColor[0.285821, 0.56, 0.450773], 
            CapForm["Butt"], 
            AbsoluteThickness[1.6]], 
           Line[CompressedData["
1:eJwVx3k41HkAx3EVGXkoIhExRTly/xIZ/T5jBt/YUhRLnkStJ02rzSLrKEcH
WiNZ5JwOlKHJIG068CRXhdoHJVFZa8bZWkla2vaP9/N63szAYx4/LJaRkdnx
rf+1/3AzoSkgf1vowXXdShUsTPZZFk0zoujckUf7RWIWMnqK3t5jpNC+4+1D
O6tYGNrTf1LAyKU11S7NpNWwwF/5ZUc6Q0hbxYWpqz5gYTA0eXMKo5aObnby
WtXGQurVXaVnGW20zpvnXWv/ZCFwKzV4mtFLD8ov7TZf7YBGg3NZ7XqjtD8r
yFQt2QHTD+tOzW2Ypqt07/jGTjlA9627XWT+HP2HYopVl882JBCGQKlDBnes
Vx6YbN2GV2G8Sjk1WZT1PDzAt6KhLA3irRDII6b8Zs3kNRqd3mNBFzQV4Roh
6hUoABG5Yf/YfK+M2I80J8UBiL3Ypho5sQKN5lu6u8IBMdtveviiKmqUPF4c
FAImE1YnVM3V0KSRt076BvjtYdd3zhPq2CzDLehQZ2Ny9vOR1DQNGJYuip/d
zoad98jrN56a8M7XSktIYKO1UndCsnwNrmjv/3tJLRtukd1EXqSNiIHK+83j
bNwP8JkxO7YWnO6AyjEDR6T1ms1QCnoISGSq7PF1xJZV2VreY3pgzm7N1c5w
RGLnlTSvJ0wE07En+toc0UKP3/DPW4ewgY4H/QuOkG0o5I3HrEe9eoyZ4xYO
7D5deHHaXR9Lk20ZEh4HKuUGKZ91DMAs1rE5I+DgXaje6NS8ASzd/PiJPRwI
J/Z9+Ni+AWvWl7k3KnJxJGa+MFa8Ec/jPO2DuFw8S2IXvk8zREWcfvTXaC6M
XJvYu/2N8FUkp//6FhexOmI+F8YICcQnDQkXbcV9p9iqJsjnnLfO1nZCbbmw
Yc1bE9Q3LjxS2uWEK4/7y6PqNuFi25OTQ+ecEJ/hyRpMM0Xj/I2rX+85wedn
s/DO42ZIvT3wIWraCcYMV49mrjmu5264YWvkjA4l2fpnChYI1c2qGvdzxhm9
LJO5XyxQZ+gvXZLpjN9TSXDZewvs9rdN8mt1xl9LRF/W7rFEoBZv96rFLgi6
e8gm/pEldMObQprtXBDYas85bGIFrXnLj7U/usD3/eMilXwrZCp8Kl5e4oKO
vT+9pOWs4c55WlfS64JMxtFqv6PWEGu3mW5WJvBu1Bqy77NGehSzSd+ZILNX
OizgUqiQS272iiI4FD8nH+pMYbVPeg8dTWBlqGjIJRROlecMG8YQtIdvOixx
o7DDUyj/JZZgqcoxiYUnBenlJy6CeIIIl2lJQwAFJku5ZTiJwKt6QTp4kkJ6
aEZLZDaB/r7ly2riKMw+znsZcIlgapGecVICBX/NIolrDgHfnX1k01kKpvXV
DJ08gqaRxJGwVAqtSt2koZDAhqkwKpdPYVHp6laFEgLZFk3FlwUUDv+r92rq
278IMTYRCih0uBtJX18nCLnvxtt5jULBjJ2CqJSgxJs/miWkYMfdt93jJkHY
QqFicDmFy9kHfexFBI7Ft0zsRRTkR3nB+rcI+qc6eQNiCl3pMckzFQTlOe/O
i6sosIZO5wyICaIwVZZ4m8I129TSlkoCMrz46d47FJb9mnlXXEWgwV85tvEu
heMDBa251QT/AchbI+c=
            "]]}, "Charting`Private`Tag#5"], 
         Annotation[{
           Directive[
            Opacity[1.], 
            RGBColor[0.7, 0.336, 0.], 
            CapForm["Butt"], 
            AbsoluteThickness[1.6]], 
           Line[CompressedData["
1:eJwVjHtUjAkAR2faaU21eiGvjSklzZBp+sqZpvp+8+ibUVvtUtISp1aRopUe
dNCLlpyp1GBpNErESKSU4qBdQpQ2vSTpoe1dJLMmsmv/uOf+cc+5FsGRa0J0
aDSa11f+t+DtleSaIKXbkyM23A8hfIx32BdMMuPJcL+Ie8e38pHdWtB1i5lG
5ncms53C+Ojz7TygYp4mN2lJ57gIPtJnffI6xlSTZXP6vLRRfPRGHXFMY1aR
jvnVAdMJfMjzf7yUyqwlA2M3n9I9zUewM9F7kNlOWpemu5jV83Hf+rcT9axh
0mToTZvWzRmTd+4mTC2dJAvle88FX3TG4i4f/h7lFClTVPCqjARIljFVM5/R
EDuPwWlKEOBFdPh13dkMWNK2Gu8eEMBwMDTcWDUDdfsUPk0BLmjwHwnNnG+A
Q6f6YPXYBbGno987rTfEq1G5npbriv1ZtaZ7xozRH+9um5nnihLhxsn+LFN4
OTaaF+m7gTPGizNdORuti7S3yne5QXGn+QdqbA54w4VXU7rdMP5Ru12eMRdl
MUtim1eT4PsPvXy1dj5ax3OODVaReHx98diA0UL0eLeyNbMBzz0tshnF30Ot
0dVUyoDbQQEau8hF+MJRDncmAhntdhpCjwWbB54e1A1gldnJBf4jLMzdEPDc
cAxIacjLWPfEAqz1imv11kI8Ikcvbs6xRObzHk1DgBCM6tzw0X1LsPjz0a1E
lhD8fzIbD/pYwTmRErbXCGFSZJ2mNbfGpUh2ZNyUEN1RrOGJaWucJbc9jOGJ
oB7b8PZD/VJ0pZQfLg8VYfu+6dz9JTZYkLoper1KhLrDwtyejGV46LGy7F2L
CLYeNcKfNtvCdo1xYJ2+GPvNS9IlYOPGoAdXXyxG7fmOBKEpB2+rjkcciROj
qkhdvbCLg3v2etP/qsXIe9BZFH93Oey4LRWtPWIkZa916c1YgapNpS/fmUkQ
sNsupmGXHX6ZNWS7w+frmemx5qFkJWI03G72QQmezWTcq9Pj4s3esyOvKyQ4
xDrBmdrLBZUcZqkZl+CmXBZ2uYcLt5uiam8rd/z9TfGnRb72GIqKSWMGuiO0
cotT0p/2CKprKKxUuCP4sUC8jcPDKj8XuyuP3PFzz4MCEyUPiiD6azqdwjO/
X9tIXQe45LR8/N2RwnFmRNnGCAcooptCbcIo+N9f0CfocEBEI+dfs7yvvX2w
XyUhkBqYTVvdTGFL0tSMKIrA6LUcY14LBd4yg2USGQE/RgFrYSuF+pjl2wY8
CVheLsNoG4VvTSIHuGsJ3PnYnHisg0KsdHKgOoiAJnsevb2XwrqyL4O9Bwhs
qT1DD5+gYLXBSL88kcBT8wsmvu8pTNBZ7MPJBBx2FVu4TlJI9xFuX55KgDbv
rtBIQ6FmKGUoWk5AGdKVVKql4GShN6yrJNBEW6LzmSYF49F8g7YzBAS+HNM+
uhSNO9kctYpAfqGDZb2OFDtve4Z7nyMQ6S0RnWVIccE/ffiEmoCBMiRZwpQi
+kuuQVgRgajxHVkr9KQQnb/KERQTeCGKzTfTl6JzoiH8dQmBwsHUPwYMpCg6
1X20pJSAoWtG41/fSRGPicspNwjEZJ7sqZophaxf56lfBYGOXtXEOUMp5qbP
GrGpJCBedVFHbiTFfyjfIPM=
            "]]}, "Charting`Private`Tag#6"], 
         Annotation[{
           Directive[
            Opacity[1.], 
            RGBColor[0.491486, 0.345109, 0.8], 
            CapForm["Butt"], 
            AbsoluteThickness[1.6]], 
           Line[CompressedData["
1:eJwViXtUTAkAh9NO22ToKSnUtAw9qJlcUbe6v5mmbltrG1OMcNg6bYs6WhRR
snrI2m0mbBGpEyoypq2Q1MEoqZYe1iPTaChpekqSFFr7x3e+853PNixa/LOu
jo7Oqq/8b3L4clJdaI5XBMt4yvBbEm/UvPOjzH1UmjvrzxJ9Esefnn9RxTxC
tZ+NNxUZkOgO7kjMY56iZk1lWx2dQUJqNrnqKLOYEqktPczMSHTt/H35EeYN
yvpMaLQFm0T6WdHFQ8xGKsnOucfGnUSYO9GVwlRR2anlTdztJGo5aVlN7H7K
qaVax1xDYvTmrQMTi0ap9SLG7EQ/D9i8CHSLy5mgKhaQmsclHkjyY+bNbNaB
+Tql7rCNJ57FRJbpzWIgqCb3s/SwJwx7IyKN8/TxpcgicPijJ1okAxEZliws
Nu/wx1Yv7D4V8851nSGWt9tZmbd6Yf+xRtO4IWPUJA96yfkUSvkbR3uOmSKr
Nsi1vpiC45DLHlPnWajo5EX2MoG/bj7+wXfIHFWfFN3NAN6Mf9yWLrPALhNx
w3gM4Cbpa38eZIm2FZKnSZeBhjKbIa3RXPw7XerG6AYC4p746SvmQTSmYtTP
4aM6NGTMKdoapG3KxICID5nKaYwwYCPoOkKCU/lYMfuElWSAjYobks55N/lI
bsmXrf3HFveTTt5Sv+ejnhq8sPn0dwjj9+lp7AVgKHMjBxMWoPdR5m5BmABu
HzIepgQuxN6B1SJtlgAmcs6Rj/M5+EXpmpjaKMDLnez+kc8cGLjHPknW9Ubx
0Ibh902LYDBWc6LW1RvbEj7n7i9djFgqKjki2hsPDvNzO2V2sOZ51kwVesPe
v46/erM9XNZZR7WrvLF/fqlUCAf8rRdCzTETorFAfYBv6ohNXefiT9BC3JAX
K+e+cIQ4zGKGYbwQ+Xc75PtuLUFRxKu67jIhDh4P8uiSLYXqpLJv6rUQIbuc
Ylt2OGEkcHxlvI0PHJj+4ntCZxQQ1PDKYB80z2TcfmDABadSMTmY5oNUdpbj
xF4ucGcPj3HbB9fT/bZe6uSifFzUsnHUB6+/UUxaB/NQUp6cPXupLyIqw10P
1vCwyVBz7V64L8IaSO8tji4QZ/l7Vp30xfrOu+dNclxw76zRkFGrL5rX/NpG
6S1DgvqVfpEejUxm1JWNUcugvtoZu9yNhqTWqptUL0OVmbshZ8fXr+rtyRMS
eJabbyQpoBF+cEJ/py8BjFy0QSENFzuWndCPQJFPmbN9EY2m2CVbtAEEYgfu
BE5eoPGtSbSWG0TAxP2VLE9OYzc9qlWGEvj+8SJjbTmNtVe+9HYlEqhkyY33
3qGxcIPR9Gu/EWBvvsIOq6ExMo3tcDiJQFpZNTegloY0kL9tySECa0IeiObX
0ajrS+6LSSfwtnAoQ9lAw9XWoF8vh4C9gGcyvZUGo96S1XaGQEamm+27r/1w
u4NjcR6BD1o+T/2QxvbqgMgfzxG4KxOvVjyiUSiR9mcVE/jp+a6j4jYaMV9y
WVvlBOq5CfnkMxqCghJHUkHAKSWldKGKRsdIS6SmlMAnh8zWsXYa8uyXf5SW
EwhPPPNSo6axDyOXkq8SaGwteFv/nIZfj+79NRUEeBzFtLIOGhZSs4HFlQSy
466ZnNbQ+A940yJj
            "]]}, "Charting`Private`Tag#7"]}}, {}}, <|
      "HighlightElements" -> <|
        "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
       "LayoutOptions" -> <|
        "PanelPlotLayout" -> <||>, 
         "PlotRange" -> {{0., 20.72326583694641}, {20.72326583694641, 
          50.65687204586901}}, "Frame" -> {{True, True}, {True, True}}, 
         "AxesOrigin" -> {0., 20.723265836946457`}, 
         "ImageSize" -> {800, 800/GoldenRatio}, "Axes" -> {False, False}, 
         "LabelStyle" -> Directive[FontSize -> 14], "AspectRatio" -> 
         GoldenRatio^(-1), "DefaultStyle" -> {
           Directive[
            Opacity[1.], 
            RGBColor[0.491486, 0.345109, 0.8], 
            CapForm["Butt"], 
            AbsoluteThickness[1.6]], 
           Directive[
            Opacity[1.], 
            RGBColor[0.7, 0.336, 0.], 
            CapForm["Butt"], 
            AbsoluteThickness[1.6]], 
           Directive[
            Opacity[1.], 
            RGBColor[0.285821, 0.56, 0.450773], 
            CapForm["Butt"], 
            AbsoluteThickness[1.6]], 
           Directive[
            Opacity[1.], 
            RGBColor[0.645957, 0.253192, 0.685109], 
            CapForm["Butt"], 
            AbsoluteThickness[1.6]], 
           Directive[
            Opacity[1.], 
            RGBColor[0.945109, 0.593901, 0.], 
            CapForm["Butt"], 
            AbsoluteThickness[1.6]], 
           Directive[
            Opacity[1.], 
            RGBColor[0.365248, 0.427802, 0.758297], 
            CapForm["Butt"], 
            AbsoluteThickness[1.6]], 
           Directive[
            Opacity[1.], 
            RGBColor[0.9, 0.36, 0.054], 
            CapForm["Butt"], 
            AbsoluteThickness[1.6]]}, 
         "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
             Exp[
              Part[#, 1]], 
             Exp[
              Part[#, 2]]}& ), 
           "ScalingFunctions" -> {{Log, Exp}, {Log, Exp}}|>, 
         "Primitives" -> {}, "GCFlag" -> False|>, 
       "Meta" -> <|
        "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
         Plot, "GroupHighlight" -> False|>|>, "DynamicHighlight"], {
     DisplayFunction -> Identity, 
      Method -> {
       "DefaultBoundaryStyle" -> Automatic, 
        "DefaultGraphicsInteraction" -> {
         "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
          "Effects" -> {
           "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
            "Droplines" -> {
             "freeformCursorMode" -> True, 
              "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
        "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
        None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            (Exp[#]& )[
             Part[#, 1]], 
            (Exp[#]& )[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            (Exp[#]& )[
             Part[#, 1]], 
            (Exp[#]& )[
             Part[#, 2]]}& )}}, DisplayFunction -> Identity, DisplayFunction -> 
      Identity, DisplayFunction -> Identity, Ticks -> {{{0, 
          HoldForm[1]}, {
          Log[10], 
          HoldForm[10]}, {
          Log[100], 
          HoldForm[100]}, {
          Log[1000], 
          HoldForm[1000]}, {
          Log[10000], 
          HoldForm[10000]}, {
          Log[100000], 
          HoldForm[100000]}, {
          Log[1000000], 
          HoldForm[1000000]}}, {{
          Log[1000000000], 
          HoldForm[1000000000]}, {
          Log[10000000000], 
          HoldForm[10000000000]}, {
          Log[100000000000], 
          HoldForm[100000000000]}, {
          Log[1000000000000], 
          HoldForm[1000000000000]}, {
          Log[10000000000000], 
          HoldForm[10000000000000]}, {
          Log[100000000000000], 
          HoldForm[100000000000000]}, {
          Log[1000000000000000], 
          HoldForm[1000000000000000]}, {
          Log[10000000000000000], 
          HoldForm[10000000000000000]}, {
          Log[100000000000000000], 
          HoldForm[100000000000000000]}, {
          Log[1000000000000000000], 
          HoldForm[1000000000000000000]}}}, 
      AxesOrigin -> {0., 20.723265836946457`}, FrameTicks -> {{
         Charting`ScaledTicks[{Log, Exp}, {Log, Exp}, "Nice", 
          WorkingPrecision -> MachinePrecision, RotateLabel -> 0], 
         Charting`ScaledFrameTicks[{Log, Exp}]}, {
         Charting`ScaledTicks[{Log, Exp}, {Log, Exp}, "Nice", 
          WorkingPrecision -> MachinePrecision, RotateLabel -> 0], 
         Charting`ScaledFrameTicks[{Log, Exp}]}}, 
      GridLines -> {{0., 2.302585092994046, 4.605170185988092, 
        6.907755278982137, 9.210340371976184, 11.512925464970229`, 
        13.815510557964274`, 16.11809565095832, 18.420680743952367`, 
        20.72326583694641}, {20.72326583694641, 23.025850929940457`, 
        25.328436022934504`, 27.631021115928547`, 29.933606208922594`, 
        32.23619130191664, 34.538776394910684`, 36.841361487904734`, 
        39.14394658089878, 41.44653167389282, 43.74911676688687, 
        46.051701859880914`, 48.35428695287496, 50.65687204586901}}, 
      DisplayFunction -> Identity, PlotRangePadding -> {{0, 0}, {0, 0}}, 
      PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
      Identity, 
      Method -> {
       "DefaultBoundaryStyle" -> Automatic, 
        "DefaultGraphicsInteraction" -> {
         "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
          "Effects" -> {
           "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
            "Droplines" -> {
             "freeformCursorMode" -> True, 
              "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
        "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
        None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            (Exp[#]& )[
             Part[#, 1]], 
            (Exp[#]& )[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            (Exp[#]& )[
             Part[#, 1]], 
            (Exp[#]& )[
             Part[#, 2]]}& )}, 
        "ClippingRange" -> {{{4.229237925907431*^-7, 20.723265414022617`}, {
         22.583385864793765`, 49.41097374161371}}, {{4.229237925907431*^-7, 
         20.723265414022617`}, {22.583385864793765`, 49.41097374161371}}}}, 
      DisplayFunction -> Identity, AspectRatio -> GoldenRatio^(-1), 
      Axes -> {False, False}, AxesLabel -> {None, None}, 
      AxesOrigin -> {0, 20.72326583694641}, DisplayFunction :> Identity, 
      Epilog -> {
        Thickness[Large], 
        GrayLevel[0.5], {{{
           InfiniteLine[{{3.7218637741945804`, 0}, {3.7218637741945804`, 1}}], 
           Style[
            Text[
             Style["1 fs", 
              GrayLevel[0.5]], {3, 21.874558383443436`}], 14]}, {
           InfiniteLine[{{3.7218637741945804`, 0}, {3.7218637741945804`, 1}}], 
           Style[
            Text[
             Style["1 ps", 
              GrayLevel[0.5]], {10, 21.874558383443436`}], 14]}, {
           InfiniteLine[{{3.7218637741945804`, 0}, {3.7218637741945804`, 1}}], 
           Style[
            Text[
             Style["1 ns", 
              GrayLevel[0.5]], {17, 21.874558383443436`}], 14]}}, {{
           InfiniteLine[{{10.629619053176718`, 0}, {10.629619053176718`, 1}}], 
           Style[
            Text[
             Style["1 fs", 
              GrayLevel[0.5]], {3, 21.874558383443436`}], 14]}, {
           InfiniteLine[{{10.629619053176718`, 0}, {10.629619053176718`, 1}}], 
           Style[
            Text[
             Style["1 ps", 
              GrayLevel[0.5]], {10, 21.874558383443436`}], 14]}, {
           InfiniteLine[{{10.629619053176718`, 0}, {10.629619053176718`, 1}}], 
           Style[
            Text[
             Style["1 ns", 
              GrayLevel[0.5]], {17, 21.874558383443436`}], 14]}}, {{
           InfiniteLine[{{17.537374332158855`, 0}, {17.537374332158855`, 1}}], 
           Style[
            Text[
             Style["1 fs", 
              GrayLevel[0.5]], {3, 21.874558383443436`}], 14]}, {
           InfiniteLine[{{17.537374332158855`, 0}, {17.537374332158855`, 1}}], 
           Style[
            Text[
             Style["1 ps", 
              GrayLevel[0.5]], {10, 21.874558383443436`}], 14]}, {
           InfiniteLine[{{17.537374332158855`, 0}, {17.537374332158855`, 1}}], 
           Style[
            Text[
             Style["1 ns", 
              GrayLevel[0.5]], {17, 21.874558383443436`}], 14]}}}}, 
      Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
         HoldForm["Toffoli gates"], None}, {
         HoldForm[
          Row[{"t (", $CellContext`\[HBar], "/", 
            Subscript[
             Style["E", Italic], "h"], ")"}]], None}}, FrameStyle -> 
      Automatic, 
      FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
      GridLines -> {All, All}, GridLinesStyle -> Directive[
        GrayLevel[0.5, 0.4]], ImageSize -> 800, LabelStyle -> 
      Directive[FontSize -> 14], 
      Method -> {
       "DefaultBoundaryStyle" -> Automatic, 
        "DefaultGraphicsInteraction" -> {
         "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
          "Effects" -> {
           "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
            "Droplines" -> {
             "freeformCursorMode" -> True, 
              "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
        "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
        None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            (Exp[#]& )[
             Part[#, 1]], 
            (Exp[#]& )[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            (Exp[#]& )[
             Part[#, 1]], 
            (Exp[#]& )[
             Part[#, 2]]}& )}}, PlotLabel -> 
      "Toffoli Gate Cost at \[Delta] = \!\(\*SuperscriptBox[\(10\), \
\(-9\)]\)", 
      PlotRange -> {{0., 20.72326583694641}, {20.72326583694641, 
       50.65687204586901}}, PlotRangeClipping -> True, 
      PlotRangePadding -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
      Ticks -> {{1, 10, 100, 1000, 10000, 100000, 1000000}, {1000000000, 
        10000000000, 100000000000, 1000000000000, 10000000000000, 
        100000000000000, 1000000000000000, 10000000000000000, 
        100000000000000000, 1000000000000000000}}, TicksStyle -> 
      Directive[FontSize -> 14]}], 
    Placed[
     Unevaluated[
      LineLegend[{
        Directive[
         Opacity[1.], 
         RGBColor[0.9, 0.36, 0.054], 
         CapForm["Butt"], 
         AbsoluteThickness[1.6]], 
        Directive[
         Opacity[1.], 
         RGBColor[0.365248, 0.427802, 0.758297], 
         CapForm["Butt"], 
         AbsoluteThickness[1.6]], 
        Directive[
         Opacity[1.], 
         RGBColor[0.945109, 0.593901, 0.], 
         CapForm["Butt"], 
         AbsoluteThickness[1.6]], 
        Directive[
         Opacity[1.], 
         RGBColor[0.645957, 0.253192, 0.685109], 
         CapForm["Butt"], 
         AbsoluteThickness[1.6]], 
        Directive[
         Opacity[1.], 
         RGBColor[0.285821, 0.56, 0.450773], 
         CapForm["Butt"], 
         AbsoluteThickness[1.6]], 
        Directive[
         Opacity[1.], 
         RGBColor[0.7, 0.336, 0.], 
         CapForm["Butt"], 
         AbsoluteThickness[1.6]], 
        Directive[
         Opacity[1.], 
         RGBColor[0.491486, 0.345109, 0.8], 
         CapForm["Butt"], 
         AbsoluteThickness[1.6]]}, {
       "NH3-BF3", "DMTM Molecular", "DMTM 3x3", "DMTM 5x5", "DMTM 9x9", 
        "WGS 3x3x2", "WGS 5x5x2"}, LegendMarkers -> None, LabelStyle -> 
       Directive[FontSize -> 14], LegendLayout -> "Column"]], {0.72, 0.25}, 
     Identity]]& ],
  AutoDelete->True,
  Editable->True,
  SelectWithContents->False,
  Selectable->True]], "Output",
 CellChangeTimes->{{3.96272326019099*^9, 3.962723281669515*^9}, 
   3.962724445337327*^9, 3.962808555168122*^9, 3.962993321278483*^9},
 CellLabel->"Out[95]=",ExpressionUUID->"140c2161-c7d8-477d-8349-f22d8d3dba76"]
}, Open  ]],

Cell["You can also export these figures as pdf files if needed.", "Text",
 CellChangeTimes->{{3.963409669930744*^9, 
  3.963409685975751*^9}},ExpressionUUID->"c0166f5e-6854-41f8-bf57-\
dbf7afbe3edc"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Export", " ", "figs"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"SetDirectory", "[", "\"\<...\>\"", "]"}], "\[IndentingNewLine]", 
    
    RowBox[{"Export", "[", 
     RowBox[{
     "\"\<rescalingFactorDist.pdf\>\"", ",", "rescalingFactorDistBarChart"}], 
     "]"}], "\[IndentingNewLine]", 
    RowBox[{"Export", "[", 
     RowBox[{"\"\<compilingDist.pdf\>\"", ",", "compilingDistBarChart"}], 
     "]"}], "\[IndentingNewLine]", 
    RowBox[{"Export", "[", 
     RowBox[{"\"\<timeEvoCost.pdf\>\"", ",", "costPlotLine"}], "]"}]}], 
   "*)"}]}]], "Input",
 CellChangeTimes->{{3.962726059335676*^9, 
  3.962726063352828*^9}},ExpressionUUID->"4524f2c2-cc04-4991-b01b-\
c0a8bbe2cea7"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1258, 827},
WindowMargins->{{29, Automatic}, {54, Automatic}},
FrontEndVersion->"14.0 for Mac OS X ARM (64-bit) (December 12, 2023)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"349bc461-230c-43f8-b3f0-d81a02440e82"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[400, 13, 229, 6, 35, "Text",ExpressionUUID->"c84175e3-8697-45be-a05e-0b2551ab94f9"],
Cell[632, 21, 368, 5, 30, "Input",ExpressionUUID->"0cfcf018-d6d3-450b-8256-429bac7845e5"],
Cell[CellGroupData[{
Cell[1025, 30, 507, 7, 98, "Title",ExpressionUUID->"aa6c59f3-cfea-4eb7-959b-5a6087391d46"],
Cell[1535, 39, 349, 7, 35, "Text",ExpressionUUID->"e2dc89cb-5b29-4a58-90c1-fe8ea488afd7"],
Cell[CellGroupData[{
Cell[1909, 50, 274, 4, 67, "Section",ExpressionUUID->"494050fd-c11f-4813-ad7b-bd025037b68c"],
Cell[2186, 56, 286, 3, 35, "Text",ExpressionUUID->"354aadbe-3e90-4c9f-8690-f707ad7369eb"],
Cell[CellGroupData[{
Cell[2497, 63, 4842, 70, 52, "Input",ExpressionUUID->"4cddb8a4-2af0-43d8-a42f-6d572b2a56aa"],
Cell[7342, 135, 607, 9, 34, "Output",ExpressionUUID->"fa9ba44e-c846-4c74-b254-985eb48765dd"],
Cell[7952, 146, 1253, 22, 56, "Output",ExpressionUUID->"e153c4a1-616d-45e2-85e6-7dd5f1f44d86"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[9254, 174, 215, 4, 67, "Section",ExpressionUUID->"bacd983b-5de7-4693-9d94-3d2ee525b38a"],
Cell[9472, 180, 308, 7, 35, "Text",ExpressionUUID->"2fa77000-e16f-4d6d-b4c3-38ffe806fd6d"],
Cell[9783, 189, 739, 15, 94, "Input",ExpressionUUID->"8ed260e7-1dfa-4a31-96d0-0a127187124d"],
Cell[10525, 206, 215, 4, 35, "Text",ExpressionUUID->"8277d6d8-7f40-4461-947a-92bbad2bb150"],
Cell[CellGroupData[{
Cell[10765, 214, 242, 6, 30, "Input",ExpressionUUID->"e08f7acd-8346-455d-945f-f6b7a059ad72"],
Cell[11010, 222, 1008, 21, 24, "Print",ExpressionUUID->"3c969bb1-3f4c-4ec3-85da-afcb887f824b"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[12067, 249, 2076, 29, 67, "Section",ExpressionUUID->"2bda5763-690d-45e4-bde7-11183e305a64"],
Cell[14146, 280, 421, 7, 35, "Text",ExpressionUUID->"8b5839aa-e55d-466b-8369-a42c17a498e5"],
Cell[14570, 289, 3626, 57, 311, "Text",ExpressionUUID->"4514b281-5f01-4deb-b3a7-a3df5025da12"],
Cell[CellGroupData[{
Cell[18221, 350, 2212, 37, 54, "Subsection",ExpressionUUID->"7d79ff6d-f572-45eb-8770-539a147f07a6"],
Cell[20436, 389, 602, 11, 58, "Text",ExpressionUUID->"cb9763df-a2b9-4549-946b-e9180ede214f"],
Cell[CellGroupData[{
Cell[21063, 404, 4508, 86, 199, "Input",ExpressionUUID->"6388bd50-8c2d-486c-b9b8-cd05b8279e2d"],
Cell[25574, 492, 143, 3, 24, "EchoTiming",ExpressionUUID->"757c3f68-7aee-48b3-86b1-0797806c91eb"],
Cell[25720, 497, 1329, 25, 56, "Output",ExpressionUUID->"1f4f9983-acf0-4a00-bac4-caec5a8c89c2"],
Cell[CellGroupData[{
Cell[27074, 526, 142, 3, 24, "EchoTiming",ExpressionUUID->"4085df81-fceb-4489-95da-d6330a2aefce"],
Cell[27219, 531, 3609, 82, 101, "Print",ExpressionUUID->"e0288bde-4c71-4d18-9e35-713c8c8a5d7b"]
}, Open  ]]
}, Open  ]],
Cell[30855, 617, 981, 19, 150, "Text",ExpressionUUID->"86ff80c9-ad11-4898-9609-d661b1384aca"],
Cell[31839, 638, 369, 7, 35, "Text",ExpressionUUID->"7c81afd6-47c6-433b-91c9-f2001ccbb1d6"],
Cell[CellGroupData[{
Cell[32233, 649, 2891, 51, 94, "Input",ExpressionUUID->"6c76d88b-981a-4819-b74c-8b63d68c4e32"],
Cell[CellGroupData[{
Cell[35149, 704, 143, 3, 24, "EchoTiming",ExpressionUUID->"78e5fed5-c606-4654-8c7e-d44eb6eaf6fd"],
Cell[35295, 709, 142, 3, 24, "EchoTiming",ExpressionUUID->"95be44b8-6db6-4c89-a2cb-e528726532f9"]
}, Open  ]]
}, Open  ]],
Cell[35464, 716, 557, 12, 35, "Text",ExpressionUUID->"c29ef228-9610-4fe2-84c2-379f378bd0fe"],
Cell[CellGroupData[{
Cell[36046, 732, 2752, 43, 73, "Input",ExpressionUUID->"81eecff9-60e9-4d59-b87e-f2d4290d51cc"],
Cell[CellGroupData[{
Cell[38823, 779, 750, 17, 24, "Print",ExpressionUUID->"2b7a5133-0b50-4121-a359-1c101874e57c"],
Cell[39576, 798, 106802, 1957, 252, "Print",ExpressionUUID->"bcea6434-82e2-45cd-aa4d-278c5c1d28a8"],
Cell[146381, 2757, 666, 16, 24, "Print",ExpressionUUID->"eb2f0508-e049-4d30-b1f8-22d9bbe2e1c1"],
Cell[147050, 2775, 451, 10, 24, "Print",ExpressionUUID->"1e44802d-b3d7-44a3-8e1f-df89d301a300"],
Cell[147504, 2787, 39536, 726, 118, "Print",ExpressionUUID->"15ab13cd-2430-4645-a061-df6fc89f1f50"]
}, Open  ]]
}, Open  ]],
Cell[187067, 3517, 2790, 45, 426, "Text",ExpressionUUID->"ccc46f65-4a4a-4933-8ab3-4919abd6ca78"]
}, Open  ]],
Cell[CellGroupData[{
Cell[189894, 3567, 1946, 27, 54, "Subsection",ExpressionUUID->"f8ec3eae-112b-482d-a58f-ed24da7fef92"],
Cell[191843, 3596, 493, 14, 35, "Text",ExpressionUUID->"a7da4110-56d3-44c3-92c1-85f99c24b8ae"],
Cell[CellGroupData[{
Cell[192361, 3614, 2492, 61, 178, "Input",ExpressionUUID->"3cbb3006-161b-46b4-af43-66970030e72f"],
Cell[194856, 3677, 144, 3, 24, "EchoTiming",ExpressionUUID->"6a0f4a61-2614-417d-a68b-2634ab2d4971"],
Cell[195003, 3682, 1130, 23, 56, "Output",ExpressionUUID->"74c607d0-76ea-4498-9053-bf73b4aab22c"],
Cell[CellGroupData[{
Cell[196158, 3709, 142, 3, 24, "EchoTiming",ExpressionUUID->"96c3f9bf-b72d-44f4-b8c1-9eda2faf11d9"],
Cell[196303, 3714, 3401, 78, 101, "Print",ExpressionUUID->"00997bbe-b16a-42de-a594-c4d3bc8ed5b0"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[199753, 3798, 973, 24, 73, "Input",ExpressionUUID->"fe25159d-e858-4f94-8eef-91e262f450ce"],
Cell[CellGroupData[{
Cell[200751, 3826, 144, 3, 24, "EchoTiming",ExpressionUUID->"872eb089-1cf8-4712-8ac9-42dfb72a8bec"],
Cell[200898, 3831, 142, 3, 24, "EchoTiming",ExpressionUUID->"5304ecdf-c5c6-4b8a-be8c-4bf45d6f8902"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[201089, 3840, 2417, 36, 52, "Input",ExpressionUUID->"fb43b075-5ad6-4764-8669-f41022ccddc4"],
Cell[CellGroupData[{
Cell[203531, 3880, 682, 17, 24, "Print",ExpressionUUID->"01239dcb-ab5c-46eb-a05e-ce3b7b4077cf"],
Cell[204216, 3899, 112744, 2075, 302, "Print",ExpressionUUID->"30f1f1b2-a227-4c3c-bb5c-8e6ed29a5d0e"],
Cell[316963, 5976, 591, 15, 24, "Print",ExpressionUUID->"50501bef-457a-4be3-92bb-19c0db5e5c76"],
Cell[317557, 5993, 382, 9, 24, "Print",ExpressionUUID->"e89f3a25-b7c5-4723-939c-63051d9bace7"],
Cell[317942, 6004, 31425, 567, 110, "Print",ExpressionUUID->"b4b6c182-71b9-4f6f-8c41-4a3633f67168"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[349428, 6578, 2065, 29, 54, "Subsection",ExpressionUUID->"cebeba67-c49b-4140-ab79-7e5720dee79e"],
Cell[351496, 6609, 563, 15, 35, "Text",ExpressionUUID->"6caea3cc-4ad7-4dc1-adc9-05948fbb3815"],
Cell[CellGroupData[{
Cell[352084, 6628, 6401, 159, 493, "Input",ExpressionUUID->"c36924c2-f23e-4ee5-b8ef-4c5df5e52d26"],
Cell[CellGroupData[{
Cell[358510, 6791, 143, 3, 24, "EchoTiming",ExpressionUUID->"fd115ca3-2872-4b8a-89ea-238ece9de010"],
Cell[358656, 6796, 143, 3, 24, "EchoTiming",ExpressionUUID->"93c8da42-ecfb-4033-b023-2559357910b3"],
Cell[358802, 6801, 146, 3, 24, "EchoTiming",ExpressionUUID->"232d113f-6a29-4770-a799-61adb0bfb7cd"]
}, Open  ]],
Cell[358963, 6807, 1154, 23, 56, "Output",ExpressionUUID->"a14d4130-86a9-44ae-a10e-c7f145f2d082"],
Cell[360120, 6832, 1157, 23, 56, "Output",ExpressionUUID->"cbb1dae3-c337-47a4-a353-4f62165ca8bb"],
Cell[361280, 6857, 1159, 23, 56, "Output",ExpressionUUID->"d20331de-c75b-436c-8e1d-84e966dbf1be"],
Cell[CellGroupData[{
Cell[362464, 6884, 144, 3, 24, "EchoTiming",ExpressionUUID->"8e8eb68a-6592-48bb-ac1b-fdf473e4c909"],
Cell[362611, 6889, 144, 3, 24, "EchoTiming",ExpressionUUID->"455ba11b-2243-4606-9793-483e90cd0b2a"],
Cell[362758, 6894, 142, 3, 24, "EchoTiming",ExpressionUUID->"d69f80ee-0544-4357-a799-f56b33235de3"],
Cell[362903, 6899, 3406, 81, 101, "Print",ExpressionUUID->"97f19757-b824-4061-8895-73e327fec1c6"],
Cell[366312, 6982, 3389, 81, 101, "Print",ExpressionUUID->"23a81392-0fe3-4758-a229-b7bfcc69bad6"],
Cell[369704, 7065, 3394, 81, 101, "Print",ExpressionUUID->"4bad45e3-0b48-4aee-bad8-90cc96055b28"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[373147, 7152, 2347, 59, 178, "Input",ExpressionUUID->"348cf9a6-ab4d-44a0-bb89-3ff3133b4a60"],
Cell[CellGroupData[{
Cell[375519, 7215, 141, 2, 24, "EchoTiming",ExpressionUUID->"adb06251-cf85-41eb-b0dc-af35d65a9c06"],
Cell[375663, 7219, 141, 2, 24, "EchoTiming",ExpressionUUID->"cfd5d34e-50d9-4c4a-a534-34e48335df6c"],
Cell[375807, 7223, 144, 3, 24, "EchoTiming",ExpressionUUID->"7c057133-9694-4e5f-9dc6-427934f4b5ab"],
Cell[375954, 7228, 142, 3, 24, "EchoTiming",ExpressionUUID->"129c36a9-e3ed-4852-b86d-512936d3b902"],
Cell[376099, 7233, 141, 3, 24, "EchoTiming",ExpressionUUID->"ed80b5c3-ce21-4103-a8ea-649a8d2929a4"],
Cell[376243, 7238, 142, 3, 24, "EchoTiming",ExpressionUUID->"1d0560ee-4be4-45ed-8660-243923fa6d84"]
}, Open  ]]
}, Open  ]],
Cell[376412, 7245, 471, 10, 52, "Input",ExpressionUUID->"adbb1c29-5fc5-4c72-8afb-f9eb5cde685b"],
Cell[376886, 7257, 209, 4, 30, "Input",ExpressionUUID->"61a92703-513e-4dc9-9c23-366d0cd1ab40"],
Cell[CellGroupData[{
Cell[377120, 7265, 209, 4, 30, "Input",ExpressionUUID->"e9086cc6-9119-49b8-b30a-2aadd8421d9d"],
Cell[CellGroupData[{
Cell[377354, 7273, 662, 16, 24, "Print",ExpressionUUID->"e6c804ec-b1a3-42c8-8098-cb3dabaf8f79"],
Cell[378019, 7291, 118778, 2194, 350, "Print",ExpressionUUID->"55377e6d-1f1a-448c-a27c-1a2d1250ef63"],
Cell[496800, 9487, 579, 16, 24, "Print",ExpressionUUID->"e871f002-e46c-4a62-8817-86c9d514aa9c"],
Cell[497382, 9505, 358, 9, 24, "Print",ExpressionUUID->"f2f4d669-9249-42d9-8e43-8e436d6451f8"],
Cell[497743, 9516, 39433, 725, 118, "Print",ExpressionUUID->"a5be1344-f851-47f6-9e4c-c57ef7bca4da"],
Cell[537179, 10243, 664, 16, 24, "Print",ExpressionUUID->"60c20695-b42a-4244-827e-c3bab0e8494a"],
Cell[537846, 10261, 118876, 2194, 350, "Print",ExpressionUUID->"d6bddac5-78e5-409b-9845-654f60640366"],
Cell[656725, 12457, 579, 16, 24, "Print",ExpressionUUID->"649c16a7-301c-428e-9ca4-6927cecedbbe"],
Cell[657307, 12475, 358, 9, 24, "Print",ExpressionUUID->"2309dcc8-2888-46a0-964c-1d82f2b81992"],
Cell[657668, 12486, 39469, 725, 118, "Print",ExpressionUUID->"b3cffb74-88e2-4e58-8929-455e88477364"],
Cell[697140, 13213, 664, 16, 24, "Print",ExpressionUUID->"301c13a8-9031-4596-b8b1-6f5ed9b88f3b"],
Cell[697807, 13231, 118844, 2194, 350, "Print",ExpressionUUID->"f0560ae5-5491-4021-abab-f4fb22d43176"],
Cell[816654, 15427, 579, 16, 24, "Print",ExpressionUUID->"da8b7818-2edb-4db6-ba2a-5b9ddc3cd807"],
Cell[817236, 15445, 360, 9, 24, "Print",ExpressionUUID->"e592a135-a962-4f2d-8a3d-7f84153b94f6"],
Cell[817599, 15456, 39458, 725, 118, "Print",ExpressionUUID->"8dfc46d0-4313-4744-b893-869f8e012a61"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[857118, 16188, 2116, 30, 54, "Subsection",ExpressionUUID->"f3ccb02f-119d-4867-a0e0-94bc1adbb611"],
Cell[859237, 16220, 285, 6, 35, "Text",ExpressionUUID->"dd0ab991-3b4a-4847-aa82-542faf77eac6"],
Cell[859525, 16228, 2500, 61, 136, "Input",ExpressionUUID->"3bece15a-c588-453b-b5b7-348b123c4df6"],
Cell[CellGroupData[{
Cell[862050, 16293, 1682, 38, 73, "Input",ExpressionUUID->"29b4e932-8e2c-402f-a942-209e68c85039"],
Cell[CellGroupData[{
Cell[863757, 16335, 143, 3, 24, "EchoTiming",ExpressionUUID->"24770085-31c8-4fd7-bc05-36ec83d27d67"],
Cell[863903, 16340, 144, 3, 24, "EchoTiming",ExpressionUUID->"b9d2b32a-5244-49ae-881d-5e982a41f8cc"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[864096, 16349, 1016, 19, 52, "Input",ExpressionUUID->"626a3b9e-1d17-4d2f-9e78-62315dd2108d"],
Cell[865115, 16370, 1059, 21, 56, "Output",ExpressionUUID->"10ee4dca-6ea8-4d45-a878-adb1ee741e5e"],
Cell[866177, 16393, 1061, 21, 56, "Output",ExpressionUUID->"6f544bef-06d1-4305-bdda-89db3aa76f17"]
}, Open  ]],
Cell[CellGroupData[{
Cell[867275, 16419, 1426, 31, 94, "Input",ExpressionUUID->"942fe187-7de1-4189-b56a-e63939f87e90"],
Cell[CellGroupData[{
Cell[868726, 16454, 142, 3, 24, "EchoTiming",ExpressionUUID->"bb890ea1-2639-40a7-b235-6f1edcb7f2d5"],
Cell[868871, 16459, 142, 3, 24, "EchoTiming",ExpressionUUID->"6d80846f-6770-4eb3-ad9f-37f609caa1af"],
Cell[869016, 16464, 3304, 77, 101, "Print",ExpressionUUID->"17783df3-473a-4bb6-811e-8add09634440"],
Cell[872323, 16543, 3339, 78, 101, "Print",ExpressionUUID->"8827c839-84c4-4371-b57e-a6c3cf6f0ce4"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[875711, 16627, 1859, 44, 115, "Input",ExpressionUUID->"6ad04059-46b2-4549-a059-1ce589e135b9"],
Cell[CellGroupData[{
Cell[877595, 16675, 146, 3, 24, "EchoTiming",ExpressionUUID->"387efab2-12b8-4e40-a89b-e1f5279c7bdf"],
Cell[877744, 16680, 144, 3, 24, "EchoTiming",ExpressionUUID->"58a4a433-4de3-4f2b-a2b0-418720283fc7"],
Cell[877891, 16685, 142, 3, 24, "EchoTiming",ExpressionUUID->"0bb59438-94f1-457b-80bd-aa20217d29d3"],
Cell[878036, 16690, 142, 3, 24, "EchoTiming",ExpressionUUID->"e79f8d32-fa65-49de-827b-998e3756794b"]
}, Open  ]]
}, Open  ]],
Cell[878205, 16697, 668, 13, 52, "Input",ExpressionUUID->"74c228a6-1b1f-4980-9980-1682712c49fb"],
Cell[CellGroupData[{
Cell[878898, 16714, 208, 4, 30, "Input",ExpressionUUID->"d2d966a0-78cf-41bf-928d-36fa4f5d9c86"],
Cell[CellGroupData[{
Cell[879131, 16722, 637, 15, 24, "Print",ExpressionUUID->"41f06ca2-f69a-4de0-a3b4-9fc1718dc38e"],
Cell[879771, 16739, 112678, 2074, 302, "Print",ExpressionUUID->"d3620494-a881-497c-92f6-8344c240ad55"],
Cell[992452, 18815, 554, 15, 24, "Print",ExpressionUUID->"ba5957a0-68ad-4dd8-85d8-ac31f14dc971"],
Cell[993009, 18832, 333, 8, 24, "Print",ExpressionUUID->"515e9f98-bda7-4e56-b8e3-1ca9bbc6da45"],
Cell[993345, 18842, 39398, 724, 118, "Print",ExpressionUUID->"8be09828-6a02-4afd-93f9-89286369c874"],
Cell[1032746, 19568, 639, 15, 24, "Print",ExpressionUUID->"47c20f69-2dc4-48c4-91c5-7b200c3841bb"],
Cell[1033388, 19585, 112694, 2074, 302, "Print",ExpressionUUID->"864bb61b-9a39-4d92-b1ab-3105bf49368e"],
Cell[1146085, 21661, 556, 15, 24, "Print",ExpressionUUID->"052ddf96-4f01-416a-9c45-088ed7ea94a7"],
Cell[1146644, 21678, 335, 8, 24, "Print",ExpressionUUID->"f390c007-aeab-4f25-9585-ab38ef11de55"],
Cell[1146982, 21688, 39608, 728, 118, "Print",ExpressionUUID->"efbfdb64-3996-4db1-ae13-444974b3944c"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1186663, 22424, 472, 7, 67, "Section",ExpressionUUID->"9ef7873f-0b3d-4333-82ec-f77988d176b5"],
Cell[1187138, 22433, 253, 6, 35, "Text",ExpressionUUID->"0255f73b-d797-4716-ade8-3c5ba342aa04"],
Cell[1187394, 22441, 418, 8, 58, "Text",ExpressionUUID->"814c1671-1362-4619-a46e-cf26edf22e4c"],
Cell[1187815, 22451, 4375, 116, 346, "Input",ExpressionUUID->"9deeecc7-be3d-4e0a-baa0-3dc5ea8e4f4c"],
Cell[CellGroupData[{
Cell[1192215, 22571, 290, 7, 54, "Subsection",ExpressionUUID->"775f5d05-de36-4525-aab0-9d46622b7067"],
Cell[1192508, 22580, 270, 6, 35, "Text",ExpressionUUID->"b2a3d3d8-77a5-489d-a71e-0dc1ac4f692d"],
Cell[CellGroupData[{
Cell[1192803, 22590, 19569, 399, 724, "Input",ExpressionUUID->"071121f4-d202-4fac-ac4e-c96bd0672a01"],
Cell[1212375, 22991, 318, 5, 34, "Output",ExpressionUUID->"68ba377e-7bf4-4a1c-8e2a-a6ca9413985f"],
Cell[1212696, 22998, 76419, 1777, 539, "Output",ExpressionUUID->"0f8da590-0daa-49ca-8aca-7d4681ccb5a2"]
}, Open  ]],
Cell[1289130, 24778, 759, 12, 81, "Text",ExpressionUUID->"9cf6817e-5f63-48f0-8720-fdf8e2c68634"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1289926, 24795, 7743, 108, 54, "Subsection",ExpressionUUID->"e5ef9d5d-e761-4417-a40f-f4a48067c79b"],
Cell[1297672, 24905, 218, 5, 35, "Text",ExpressionUUID->"421f27f1-4ea6-4c9d-bf96-33af74956d85"],
Cell[CellGroupData[{
Cell[1297915, 24914, 14482, 280, 535, "Input",ExpressionUUID->"b272699c-b13d-491a-9aed-d7fa9113bba3"],
Cell[1312400, 25196, 64125, 1501, 539, "Output",ExpressionUUID->"174069fb-31b5-4c1b-82d3-4414050b141a"]
}, Open  ]],
Cell[1376540, 26700, 669, 11, 81, "Text",ExpressionUUID->"8990c213-80ce-44db-81a7-28a2b7c3b02a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1377246, 26716, 7618, 106, 54, "Subsection",ExpressionUUID->"749637a5-5fe9-46f3-b1cc-1024b26b8e4f"],
Cell[1384867, 26824, 309, 7, 35, "Text",ExpressionUUID->"41a6b4fb-4486-4923-b4d7-d309aeb961a3"],
Cell[CellGroupData[{
Cell[1385201, 26835, 14510, 286, 509, "Input",ExpressionUUID->"2855cc06-78a6-4265-bc76-6325cdcec2aa"],
Cell[1399714, 27123, 102111, 2139, 546, "Output",ExpressionUUID->"140c2161-c7d8-477d-8349-f22d8d3dba76"]
}, Open  ]],
Cell[1501840, 29265, 199, 3, 35, "Text",ExpressionUUID->"c0166f5e-6854-41f8-bf57-dbf7afbe3edc"],
Cell[1502042, 29270, 777, 20, 115, "Input",ExpressionUUID->"4524f2c2-cc04-4991-b01b-c0a8bbe2cea7"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

